"use strict";(self.webpackChunkserenity_js_org=self.webpackChunkserenity_js_org||[]).push([[1674],{38417:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":4,"name":"@serenity-js/assertions","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":3044,"name":"Ensure","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/).\\nIf not, it throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/).\\n\\nUse "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":" to verify the state of the system under test.\\n\\n## Basic usage with static values\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.that(\'Hello world!\', equals(\'Hello world!\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Composing expectations with "},{"kind":"code","text":"`and`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.that(\'Hello world!\', and(startsWith(\'Hello\'), endsWith(\'!\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Overriding the type of Error thrown upon assertion failure\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, TestCompromisedError } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Erica\')\\n  .whoCan(CallAnApi.at(\'https://example.com\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/api/health\')),\\n    Ensure.that(LastResponse.status(), equals(200))\\n      .otherwiseFailWith(TestCompromisedError, \'The server is down, please cheer it up!\')\\n  )\\n```"}]},"children":[{"id":3045,"name":"that","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":88,"character":11}],"signatures":[{"id":3046,"name":"that","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":", which\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/).\\nIf not, it immediately throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":88,"character":11}],"typeParameter":[{"id":3047,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3048,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) describing the actual state of the system."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":3047,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3049,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) you expect the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value to meet"}]},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3047,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3044,"typeArguments":[{"type":"reference","target":3047,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Ensure","package":"@serenity-js/assertions"}}]},{"id":3050,"name":"eventually","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":107,"character":11}],"signatures":[{"id":3051,"name":"eventually","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":"](/api/assertions/class/EnsureEventually/),\\nwhich verifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) within the expected timeframe.\\n\\nIf the expectation is not met by the time the timeout expires, the interaction throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":107,"character":11}],"typeParameter":[{"id":3052,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3053,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) describing the actual state of the system."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":3052,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3054,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) you expect the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value to meet"}]},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3052,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3100,"typeArguments":[{"type":"reference","target":3052,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"}}]},{"id":3073,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":127,"character":10}],"signatures":[{"id":3074,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":127,"character":10}],"parameters":[{"id":3075,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":3076,"name":"otherwiseFailWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":4}],"signatures":[{"id":3077,"name":"otherwiseFailWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/) thrown when\\nthe actual value does not meet the expectation."}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":4}],"parameters":[{"id":3078,"name":"typeOfRuntimeError","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A constructor function producing a subtype of ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) to throw, e.g. ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"type":{"type":"reflection","declaration":{"id":3079,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":42}],"signatures":[{"id":3080,"name":"new typeOfRuntimeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":42}],"parameters":[{"id":3081,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3082,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}]}}},{"id":3083,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The message explaining the failure"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3085,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3086,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3087,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3088,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3089,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3090,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3091,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3091]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3097,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3098,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[3045,3050,3073,3076,3085,3087,3097]}],"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":72,"character":13}],"typeParameters":[{"id":3099,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/assertions/class/Ensure","categories":[],"nextId":3100},{"id":3100,"name":"EnsureEventually","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":"\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) within the expected timeframe.\\n\\nIf the expectation is not met by the time the timeout expires, the interaction throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/).\\n"},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":" retries the evaluation if resolving the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" results in an ["},{"kind":"code","text":"`ListItemNotFoundError`"},{"kind":"text","text":"](/api/core/class/ListItemNotFoundError/),\\nbut rethrows any other errors.\\n\\n:::tip Use the factory method\\nUse the factory method ["},{"kind":"code","text":"`Ensure.eventually`"},{"kind":"text","text":"](/api/assertions/class/Ensure/#eventually] to instantiate this interaction.\\n:::\\n\\n## Basic usage with dynamic values\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    equals(\'Learn Serenity/JS!\')\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Composing expectations with "},{"kind":"code","text":"`and`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    and(startsWith(\'Serenity\'), endsWith(\'!\'))\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Overriding the type of Error thrown upon assertion failure\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    and(startsWith(\'Serenity\'), endsWith(\'!\'))\\n  ).otherwiseFailWith(LogicError, `Looks like we\'re not on the right page`)\\n)\\n```"}],"modifierTags":["@experimental"]},"children":[{"id":3111,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":92,"character":4}],"signatures":[{"id":3112,"name":"new EnsureEventually","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":92,"character":4}],"typeParameter":[{"id":3113,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3114,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":3113,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3115,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3113,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}},{"id":3116,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}},{"id":3117,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3100,"typeArguments":[{"type":"reference","target":3113,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":3121,"name":"timeoutAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":106,"character":4}],"signatures":[{"id":3122,"name":"timeoutAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Override the default timeout set via ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)."}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":106,"character":4}],"parameters":[{"id":3123,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3100,"typeArguments":[{"type":"reference","target":3113,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"}}]},{"id":3124,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":113,"character":10}],"signatures":[{"id":3125,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":113,"character":10}],"parameters":[{"id":3126,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":3127,"name":"otherwiseFailWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":4}],"signatures":[{"id":3128,"name":"otherwiseFailWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/) thrown when\\nthe actual value does not meet the expectation."}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":4}],"parameters":[{"id":3129,"name":"typeOfRuntimeError","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A constructor function producing a subtype of ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) to throw, e.g. ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"type":{"type":"reflection","declaration":{"id":3130,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":42}],"signatures":[{"id":3131,"name":"new typeOfRuntimeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":42}],"parameters":[{"id":3132,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3133,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}]}}},{"id":3134,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The message explaining the failure"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3136,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3137,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3138,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3139,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3140,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3141,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3142,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3142]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3148,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3149,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Constructors","children":[3111]},{"title":"Methods","children":[3121,3124,3127,3136,3138,3148]}],"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":85,"character":13}],"typeParameters":[{"id":3150,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/assertions/class/EnsureEventually","categories":[],"previousId":3044,"nextId":3151},{"id":3151,"name":"and","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/and.ts","line":24,"character":16}],"signatures":[{"id":3152,"name":"and","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when all the "},{"kind":"code","text":"`expectations`"},{"kind":"text","text":" are met for the given actual value.\\n\\nUse "},{"kind":"code","text":"`and`"},{"kind":"text","text":" to combine several expectations using logical \\"and\\",\\n\\n## Combining several expectations\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, and, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', and(startsWith(\'Hello\'), endsWith(\'!\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/and.ts","line":24,"character":16}],"typeParameter":[{"id":3153,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3154,"name":"expectations","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3153,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3153,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/and","categories":[],"previousId":3100,"nextId":3155},{"id":3155,"name":"contain","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/contain.ts","line":28,"character":13}],"signatures":[{"id":3156,"name":"contain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":" contains\\nat least one "},{"kind":"code","text":"`Item`"},{"kind":"text","text":" that is equal to the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\nNote that the equality check performs comparison **by value**\\nusing [TinyTypes "},{"kind":"code","text":"`equal`"},{"kind":"text","text":"](https://github.com/jan-molak/tiny-types/blob/master/src/objects/equal.ts).\\n\\n## Ensuring that the array contains the given item\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, and, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nconst items = [ { name: \'apples\' }, { name: \'bananas\' } ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, contain({ name: \'bananas\' })),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/contain.ts","line":28,"character":13}],"typeParameter":[{"id":3157,"name":"Item","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3158,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":3157,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3157,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/contain","categories":[],"previousId":3151,"nextId":3159},{"id":3159,"name":"containAtLeastOneItemThat","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/containAtLeastOneItemThat.ts","line":25,"character":16}],"signatures":[{"id":3160,"name":"containAtLeastOneItemThat","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":" contains\\nat least one "},{"kind":"code","text":"`Item`"},{"kind":"text","text":" for which the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":" is met.\\n\\n## Ensuring that at least one item in an array meets the expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, containAtLeastOneItemThat, isGreaterThan } from \'@serenity-js/assertions\'\\n\\nconst items = [ 10, 15, 20 ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, containAtLeastOneItemThat(isGreaterThan(18))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/containAtLeastOneItemThat.ts","line":25,"character":16}],"typeParameter":[{"id":3161,"name":"Item","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3162,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3161,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3161,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/containAtLeastOneItemThat","categories":[],"previousId":3155,"nextId":3163},{"id":3163,"name":"containItemsWhereEachItem","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/containItemsWhereEachItem.ts","line":25,"character":16}],"signatures":[{"id":3164,"name":"containItemsWhereEachItem","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when all the items of the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":"\\nmeet the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that all the items in an array meet the expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, containItemsWhereEachItem, endsWith } from \'@serenity-js/assertions\'\\n\\nconst items = [ \'Monday\', \'Tuesday\', \'Wednesday\', \'Thursday\', \'Friday\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, containItemsWhereEachItem(endsWith(\'day\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/containItemsWhereEachItem.ts","line":25,"character":16}],"typeParameter":[{"id":3165,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3166,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3165,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3165,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/containItemsWhereEachItem","categories":[],"previousId":3159,"nextId":3167},{"id":3167,"name":"endsWith","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/endsWith.ts","line":22,"character":13}],"signatures":[{"id":3168,"name":"endsWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nends with the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string ends with an expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', endsWith(\'!\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/endsWith.ts","line":22,"character":13}],"parameters":[{"id":3169,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/endsWith","categories":[],"previousId":3163,"nextId":3170},{"id":3170,"name":"equals","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/equals.ts","line":29,"character":13}],"signatures":[{"id":3171,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual value\\nis equal to the resolved value of "},{"kind":"code","text":"`expectedValue`"},{"kind":"text","text":".\\n\\nNote that the equality check performs comparison **by value**\\nusing [TinyTypes "},{"kind":"code","text":"`equal`"},{"kind":"text","text":"](https://github.com/jan-molak/tiny-types/blob/master/src/objects/equal.ts).\\n\\n## Ensuring that the actual value equals expected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst actual   = { name: \'apples\' }\\nconst expected = { name: \'apples\' }\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(actual, equals(expected)),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/equals.ts","line":29,"character":13}],"typeParameter":[{"id":3172,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3173,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":3172,"name":"T","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3172,"name":"T","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/equals","categories":[],"previousId":3167,"nextId":3174},{"id":3174,"name":"includes","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/includes.ts","line":41,"character":13}],"signatures":[{"id":3175,"name":"includes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nincludes a substring of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string includes the expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', includes(\'World\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that page URL includes the expected substring\\n\\n["},{"kind":"code","text":"`Page.current().url()`"},{"kind":"text","text":"](/api/web/class/Page/#url) returns a ["},{"kind":"code","text":"`QuestionAdapter<URL>`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\na proxy object around the standard Node.js [URL](https://nodejs.org/api/url.html) class,\\noffering access to "},{"kind":"code","text":"`string`"},{"kind":"text","text":" properties such as ["},{"kind":"code","text":"`hostname`"},{"kind":"text","text":"](https://nodejs.org/api/url.html#urlobjecthostname),\\n["},{"kind":"code","text":"`pathname`"},{"kind":"text","text":"](https://nodejs.org/api/url.html#urlobjectpathname), and so on.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Navigate.to(\'/handbook\'),\\n  Ensure.that(Page.current().url().hostname, includes(\'serenity-js\')),\\n  Ensure.that(Page.current().url().pathname, includes(\'book\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/includes.ts","line":41,"character":13}],"parameters":[{"id":3176,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/includes","categories":[],"previousId":3170,"nextId":3177},{"id":3177,"name":"isAfter","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isAfter.ts","line":42,"character":13}],"signatures":[{"id":3178,"name":"isAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`Date`"},{"kind":"text","text":"\\nis after the expected "},{"kind":"code","text":"`Date`"},{"kind":"text","text":".\\n\\n## Ensuring that a given date is after the expected date\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isAfter } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(new Date(\'2022-01-01\'), isAfter(new Date(\'1995-01-01\'))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given date is within the expected date range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, isAfter, isBefore } from \'@serenity-js/assertions\'\\n\\nconst isWithinDateRange = (lowerBound: Answerable<Date>, upperBound: Answerable<Date>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(isAfter(lowerBound), isBefore(upperBound))\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    new Date(\'2022-01-01\'),\\n    isWithinDateRange(new Date(\'1995-01-01\'), new Date(\'2025-01-01\'))\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isAfter.ts","line":42,"character":13}],"parameters":[{"id":3179,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isAfter","categories":[],"previousId":3174,"nextId":3180},{"id":3180,"name":"isBefore","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isBefore.ts","line":42,"character":13}],"signatures":[{"id":3181,"name":"isBefore","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`Date`"},{"kind":"text","text":"\\nis before the expected "},{"kind":"code","text":"`Date`"},{"kind":"text","text":".\\n\\n## Ensuring that a given date is after the expected date\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isBefore } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(new Date(\'1995-01-01\'), isBefore(new Date(\'2022-01-01\'))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given date is within the expected date range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, isAfter, isBefore } from \'@serenity-js/assertions\'\\n\\nconst isWithinDateRange = (lowerBound: Answerable<Date>, upperBound: Answerable<Date>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(isAfter(lowerBound), isBefore(upperBound))\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    new Date(\'2022-01-01\'),\\n    isWithinDateRange(new Date(\'1995-01-01\'), new Date(\'2025-01-01\'))\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isBefore.ts","line":42,"character":13}],"parameters":[{"id":3182,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isBefore","categories":[],"previousId":3177,"nextId":3183},{"id":3183,"name":"isCloseTo","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isCloseTo.ts","line":24,"character":13}],"signatures":[{"id":3184,"name":"isCloseTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual value\\nis within a given \xb1 "},{"kind":"code","text":"`absoluteTolerance`"},{"kind":"text","text":" range of the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" value.\\n\\n## Ensuring that a given floating point number is close to the expected number\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { Ensure, isCloseTo } from \'@serenity-js/assertions\'\\n\\n await actorCalled(\'Iris\').attemptsTo(\\n     Ensure.that(10.123, isCloseTo(10, 0.2))\\n )\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isCloseTo.ts","line":24,"character":13}],"parameters":[{"id":3185,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"type":"namedTupleMember","name":"absoluteTolerance","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isCloseTo","categories":[],"previousId":3180,"nextId":3186},{"id":3186,"name":"isFalse","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isFalse.ts","line":23,"character":16}],"signatures":[{"id":3187,"name":"isFalse","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value\\nis "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Ensuring that a given value is false\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isFalse } from \'@serenity-js/assertions\'\\nimport { Cookie } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(Cookie.called(\'example-regular-cookie\').isSecure(), isFalse()),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isFalse.ts","line":23,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isFalse","categories":[],"previousId":3183,"nextId":3188},{"id":3188,"name":"isGreaterThan","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isGreaterThan.ts","line":45,"character":13}],"signatures":[{"id":3189,"name":"isGreaterThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`number`"},{"kind":"text","text":"\\nis greater than the expected "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n## Ensuring that a given number is greater than the expected number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isGreaterThan } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(10, isGreaterThan(5)),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given number is within the expected range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, equals, isGreaterThan, isLessThan, or } from \'@serenity-js/assertions\'\\n\\nconst isWithinRange = (lowerBound: Answerable<number>, upperBound: Answerable<number>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(equals(lowerBound), isGreaterThan(lowerBound)),\\n        or(equals(upperBound), isLessThan(upperBound)),\\n      )\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    7,\\n    isWithinRange(5, 10)\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isGreaterThan.ts","line":45,"character":13}],"parameters":[{"id":3190,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isGreaterThan","categories":[],"previousId":3186,"nextId":3191},{"id":3191,"name":"isLessThan","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isLessThan.ts","line":45,"character":13}],"signatures":[{"id":3192,"name":"isLessThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`number`"},{"kind":"text","text":"\\nis less than the expected "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n## Ensuring that a given number is less than the expected number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isLessThan } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(5, isLessThan(10)),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given number is within the expected range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, equals, isGreaterThan, isLessThan, or } from \'@serenity-js/assertions\'\\n\\nconst isWithinRange = (lowerBound: Answerable<number>, upperBound: Answerable<number>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(equals(lowerBound), isGreaterThan(lowerBound)),\\n        or(equals(upperBound), isLessThan(upperBound)),\\n      )\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    7,\\n    isWithinRange(5, 10)\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isLessThan.ts","line":45,"character":13}],"parameters":[{"id":3193,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isLessThan","categories":[],"previousId":3188,"nextId":3194},{"id":3194,"name":"isPresent","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isPresent.ts","line":66,"character":16}],"signatures":[{"id":3195,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value is not undefined or null.\\n\\nAlso, when the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" implements ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/),\\nthe expectation is met when calling ["},{"kind":"code","text":"`Optional.isPresent`"},{"kind":"text","text":"](/api/core/interface/Optional/#isPresent)\\nreturns an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n## Ensuring that a value is defined\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, Send, GetRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, isPresent } from \'@serenity-js/assertions\'\\n\\ninterface Product {\\n    name: string;\\n}\\n\\ninterface ProductsResponse {\\n    products: Product[];\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/products\')),\\n    Ensure.that(LastResponse.body<ProductsResponse>().products[0], isPresent()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Checking if a PageElement is present\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\';\\nimport { By, Click, Navigate, PageElement } from \'@serenity-js/web\';\\nimport { Browser, chromium } from \'playwright\';\\n\\nclass NewsletterSubscription {\\n  static modal = () =>\\n    PageElement.located(By.id(\'newsletter-subscription\'))\\n      .describedAs(\'newsletter subscription modal\')\\n\\n  static closeButton = () =>\\n    PageElement.located(By.class(\'.close\'))\\n      .of(NewsletterSubscription.modal())\\n      .describedAs(\'close button\')\\n}\\n\\nconst browser = await chromium.launch({ headless: true });\\n\\nawait actorCalled(\'Isabela\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://example.org`),\\n    Check.whether(NewsletterSubscription.modal(), isPresent())\\n      .andIfSo(Click.on(NewsletterSubscription.closeButton())),\\n  )\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isPresent.ts","line":66,"character":16}],"typeParameter":[{"id":3196,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3196,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isPresent","categories":[],"previousId":3191,"nextId":3197},{"id":3197,"name":"isTrue","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isTrue.ts","line":23,"character":16}],"signatures":[{"id":3198,"name":"isTrue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value\\nis "},{"kind":"code","text":"`true`"},{"kind":"text","text":".\\n\\n## Ensuring that a given value is true\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isTrue } from \'@serenity-js/assertions\'\\nimport { Cookie } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(Cookie.called(\'example-secure-cookie\').isSecure(), isTrue()),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isTrue.ts","line":23,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isTrue","categories":[],"previousId":3194,"nextId":3199},{"id":3199,"name":"matches","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/matches.ts","line":22,"character":13}],"signatures":[{"id":3200,"name":"matches","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nmatches the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" regular expression.\\n\\n## Ensuring that a given string matches a regular expression\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', matches(/[Ww]orld/)),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/matches.ts","line":22,"character":13}],"parameters":[{"id":3201,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/matches","categories":[],"previousId":3197,"nextId":3202},{"id":3202,"name":"not","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/not.ts","line":25,"character":16}],"signatures":[{"id":3203,"name":"not","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that negates the provided "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that the actual value does not equal the expected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals, not } from \'@serenity-js/assertions\'\\n\\nconst actual   = { name: \'apples\' }\\nconst expected = { name: \'bananas\' }\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(actual, not(equals(expected))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/not.ts","line":25,"character":16}],"typeParameter":[{"id":3204,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3205,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3204,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3204,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/not","categories":[],"previousId":3199,"nextId":3206},{"id":3206,"name":"or","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/or.ts","line":24,"character":16}],"signatures":[{"id":3207,"name":"or","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when at least one of the "},{"kind":"code","text":"`expectations`"},{"kind":"text","text":" is met for the given actual value.\\n\\nUse "},{"kind":"code","text":"`or`"},{"kind":"text","text":" to combine several expectations using logical \\"or\\",\\n\\n## Combining several expectations\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, or, startsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', or(startsWith(\'Hello\'), startsWith(\'Hi\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/or.ts","line":24,"character":16}],"typeParameter":[{"id":3208,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3209,"name":"expectations","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3208,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3208,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/or","categories":[],"previousId":3202,"nextId":3210},{"id":3210,"name":"property","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/property.ts","line":63,"character":16}],"signatures":[{"id":3211,"name":"property","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the value of\\nthe "},{"kind":"code","text":"`actual[propertyName]`"},{"kind":"text","text":" meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that an array has an item\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property } from \'@serenity-js/assertions\'\\n\\nconst list = [ \'hello\', \'world\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(list, property(0, isPresent())),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that the property meets an expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property, equals } from \'@serenity-js/assertions\'\\n\\nconst list = [ \'hello\', \'world\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(list, property(\'length\', equals(2))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Asserting on a list of objects\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property, equals } from \'@serenity-js/assertions\'\\n\\nconst developers = [{\\n    name: \'Jan\',\\n    id: \'@jan-molak\',\\n}, {\\n    name: \'John\',\\n    id: \'@wakaleo\',\\n}]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    developers,\\n    containItemsWhereEachItem(\\n      property(\'id\', startsWith(\'@\'))\\n    ),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/property.ts","line":63,"character":16}],"typeParameter":[{"id":3212,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"id":3213,"name":"PropertyName","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":3214,"name":"propertyName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3213,"name":"PropertyName","package":"@serenity-js/assertions","refersToTypeParameter":true}},{"id":3215,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":3213,"name":"PropertyName","package":"@serenity-js/assertions","refersToTypeParameter":true},"objectType":{"type":"reference","target":3212,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3212,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/property","categories":[],"previousId":3206,"nextId":3216},{"id":3216,"name":"startsWith","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/startsWith.ts","line":22,"character":13}],"signatures":[{"id":3217,"name":"startsWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nstarts with the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string starts with an expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, startsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', startsWith(\'Hello\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/startsWith.ts","line":22,"character":13}],"parameters":[{"id":3218,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/startsWith","categories":[],"previousId":3210}],"groups":[{"title":"Activities","children":[3044,3100]},{"title":"Expectations","children":[3151,3155,3159,3163,3167,3170,3174,3177,3180,3183,3186,3188,3191,3194,3197,3199,3202,3206,3210,3216]}],"sources":[{"fileName":"packages/assertions/src/index.ts","line":1,"character":0}],"permalink":"/api/assertions"},"urlSlug":"assertions"}],"packageName":"@serenity-js/assertions","packageVersion":"3.31.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":47,"name":"@serenity-js/console-reporter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":48,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":9,"character":24}],"signatures":[{"id":49,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":9,"character":24}],"parameters":[{"id":50,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22758,"name":"ConsoleReporterConfig","package":"@serenity-js/console-reporter"},"defaultValue":"undefined"}],"type":{"type":"reference","target":2241,"typeArguments":[{"type":"reference","target":22700,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}],"permalink":"/api/console-reporter/function/default","categories":[],"nextId":22700},{"id":22700,"name":"ConsoleReporter","variant":"declaration","kind":128,"flags":{"isPublic":true,"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that uses [standard output](https://en.wikipedia.org/wiki/Standard_streams)\\nto report on progress of your Serenity/JS acceptance tests.\\n\\n"},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" ships with colour themes for both dark and light terminals,\\nas well as a monochromatic theme for those moments when you\'re in a noir mood\\n(or have a terminal that doesn\'t support colours, like the good old "},{"kind":"code","text":"`cmd.exe`"},{"kind":"text","text":" on Windows).\\n\\n## Registering Console Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\n import { configure } from \'@serenity-js/core\';\\n import { ConsoleReporter } from \'@serenity-js/console-reporter\';\\n\\n configure({\\n   crew: [\\n     ConsoleReporter.withDefaultColourSupport()\\n   ],\\n });\\n```"},{"kind":"text","text":"\\n\\n## Redirecting output to a file\\n\\n"},{"kind":"code","text":"```ts\\n import { configure } from \'@serenity-js/core\';\\n import { ConsoleReporter } from \'@serenity-js/console-reporter\';\\n import { createWriteStream } from \'fs\';\\n\\n configure({\\n   outputStream: createWriteStream(\'./output.log\'),\\n   crew: [ ConsoleReporter.withDefaultColourSupport() ],\\n });\\n ```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport { devices } from \'@playwright/test\';\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\';\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'line\' ],\\n    [ \'html\', { open: \'never\' } ],\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/console-reporter\',\\n      ]\\n    }]\\n  ],\\n}\\n```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ConsoleReporter } from \'@serenity-js/console-reporter\';\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\';\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/console-reporter\',\\n    ]\\n    // other Serenity/JS config\\n  },\\n\\n // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nconst { ConsoleReporter } = require(\'@serenity-js/console-reporter\');\\n\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/console-reporter\',\\n    ],\\n    // other Serenity/JS config\\n  },\\n\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Changing the default colour theme\\n\\n"},{"kind":"code","text":"```js\\n  // ...\\n  serenity: {\\n    crew: [\\n      [ \'@serenity-js/console-reporter\', {\\n        theme: \'light\',\\n        // theme: \'dark\',\\n        // theme: \'mono\',\\n        // theme: \'auto\',\\n      } ]\\n    ],\\n  },\\n  //...\\n```"}]},"children":[{"id":22701,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":170,"character":11}],"signatures":[{"id":22702,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":170,"character":11}],"parameters":[{"id":22703,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22758,"name":"ConsoleReporterConfig","package":"@serenity-js/console-reporter"}}],"type":{"type":"reference","target":2241,"typeArguments":[{"type":"reference","target":22700,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22704,"name":"withDefaultColourSupport","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":184,"character":11}],"signatures":[{"id":22705,"name":"withDefaultColourSupport","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" that auto-detects\\nyour terminal\'s support for colours and uses a colour theme\\nfor dark terminals if successful.\\n\\nPlease note that spawning your test process from another process\\n(by using [npm-failsafe](https://www.npmjs.com/package/npm-failsafe), for example)\\ncauses the "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" to use the monochromatic colour scheme,\\nas colour support can\'t be detected in child processes."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":184,"character":11}],"type":{"type":"reference","target":2241,"typeArguments":[{"type":"reference","target":22700,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22706,"name":"forMonochromaticTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":194,"character":11}],"signatures":[{"id":22707,"name":"forMonochromaticTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a monochromatic colour theme.\\nGood for terminals with no colour support (like the "},{"kind":"code","text":"`cmd.exe`"},{"kind":"text","text":" on Windows),\\nor for times when you need to pipe the output to a text file and want\\nto avoid printing control characters."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":194,"character":11}],"type":{"type":"reference","target":2241,"typeArguments":[{"type":"reference","target":22700,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22708,"name":"forDarkTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":201,"character":11}],"signatures":[{"id":22709,"name":"forDarkTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a colour theme optimised for terminals with dark backgrounds."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":201,"character":11}],"type":{"type":"reference","target":2241,"typeArguments":[{"type":"reference","target":22700,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22710,"name":"forLightTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":208,"character":11}],"signatures":[{"id":22711,"name":"forLightTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a colour theme optimised for terminals with light backgrounds."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":208,"character":11}],"type":{"type":"reference","target":2241,"typeArguments":[{"type":"reference","target":22700,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22715,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":230,"character":4}],"signatures":[{"id":22716,"name":"new ConsoleReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":230,"character":4}],"parameters":[{"id":22717,"name":"printer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Printer","package":"@serenity-js/console-reporter"}},{"id":22718,"name":"theme","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TerminalTheme","package":"@serenity-js/console-reporter"}},{"id":22719,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22700,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}}]},{"id":22729,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":250,"character":4}],"signatures":[{"id":22730,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},{"tag":"@listens","content":[]}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":250,"character":4}],"parameters":[{"id":22731,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"ListensToDomainEvents.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"ListensToDomainEvents.notifyOf"}}],"groups":[{"title":"Constructors","children":[22715]},{"title":"Methods","children":[22701,22704,22706,22708,22710,22729]}],"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":161,"character":13}],"implementedTypes":[{"type":"reference","target":2074,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/console-reporter/class/ConsoleReporter","categories":[],"previousId":48,"nextId":22758},{"id":22758,"name":"ConsoleReporterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to configure the ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/)."}]},"children":[{"id":22759,"name":"theme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Choose a colour theme optimised for light, dark, or monochromatic terminals.\\nOr, use \'auto\' to automatically pick the most suitable one."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts","line":11,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"mono"},{"type":"literal","value":"auto"}]}}],"groups":[{"title":"Properties","children":[22759]}],"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts","line":6,"character":17}],"permalink":"/api/console-reporter/interface/ConsoleReporterConfig","categories":[],"previousId":22700}],"groups":[{"title":"Functions","children":[48]},{"title":"Stage","children":[22700,22758]}],"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":1,"character":0}],"permalink":"/api/console-reporter"},"urlSlug":"console-reporter"}],"packageName":"@serenity-js/console-reporter","packageVersion":"3.31.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":2,"name":"@serenity-js/core/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":2274,"name":"OutputStream","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\nconfigured via ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":2275,"name":"write","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":13,"character":4}],"signatures":[{"id":2276,"name":"write","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":13,"character":4}],"parameters":[{"id":2277,"name":"content","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[2275]}],"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":12,"character":17}],"permalink":"/api/core-adapter/interface/OutputStream","categories":[],"nextId":2278},{"id":2278,"name":"TestRunnerAdapter","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an adapter needed to run a given type of tests programmatically"}]},"children":[{"id":2279,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":13,"character":4}],"signatures":[{"id":2280,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":13,"character":4}],"parameters":[{"id":2281,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2282,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":21,"character":4}],"signatures":[{"id":2283,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":2284,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":29,"character":4}],"signatures":[{"id":2285,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":29,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2286,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":4}],"signatures":[{"id":2287,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2288,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2289,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[2289]}],"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":34}]}}]}}]}],"groups":[{"title":"Methods","children":[2279,2282,2284,2286]}],"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":8,"character":17}],"permalink":"/api/core-adapter/interface/TestRunnerAdapter","categories":[],"previousId":2274}],"groups":[{"title":"Integration","children":[2274,2278]}],"sources":[{"fileName":"packages/core/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/core-adapter"},"urlSlug":"core-adapter"},{"index":false,"label":"Domain Events","reflection":{"id":3,"name":"@serenity-js/core/events","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":2290,"name":"ActivityFinished","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) is finished."}]},"children":[{"id":2291,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2292,"name":"new ActivityFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2293,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2294,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2295,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2296,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2297,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2290,"name":"ActivityFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2298,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2299,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2300,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2301,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2302,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2303,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2304,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2305,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2306,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2307,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2308,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2309,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2291]},{"title":"Properties","children":[2298,2299,2300,2301,2302]},{"title":"Methods","children":[2303,2306,2308]}],"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2662,"name":"InteractionFinished"},{"type":"reference","target":2898,"name":"TaskFinished"}],"permalink":"/api/core-events/class/ActivityFinished","categories":[],"nextId":2310},{"id":2310,"name":"ActivityRelatedArtifactArchived","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2311,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":18,"character":11}],"signatures":[{"id":2312,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":18,"character":11}],"parameters":[{"id":2313,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2310,"name":"ActivityRelatedArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2477,"name":"ArtifactArchived.fromJSON"}}],"overwrites":{"type":"reference","target":2476,"name":"ArtifactArchived.fromJSON"}},{"id":2314,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":30,"character":4}],"signatures":[{"id":2315,"name":"new ActivityRelatedArtifactArchived","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":30,"character":4}],"parameters":[{"id":2316,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2317,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2318,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2319,"name":"type","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2320,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2321,"name":"artifactTimestamp","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2322,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2310,"name":"ActivityRelatedArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2480,"name":"ArtifactArchived.constructor"}}],"overwrites":{"type":"reference","target":2479,"name":"ArtifactArchived.constructor"}},{"id":2323,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":32,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2324,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":43,"character":4}],"signatures":[{"id":2325,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":43,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2493,"name":"ArtifactArchived.toJSON"}}],"overwrites":{"type":"reference","target":2492,"name":"ArtifactArchived.toJSON"}},{"id":2326,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":26,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2487,"name":"ArtifactArchived.sceneId"}},{"id":2327,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":27,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2488,"name":"ArtifactArchived.name"}},{"id":2328,"name":"type","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":28,"character":24}],"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2489,"name":"ArtifactArchived.type"}},{"id":2329,"name":"path","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":29,"character":24}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2490,"name":"ArtifactArchived.path"}},{"id":2330,"name":"artifactTimestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":30,"character":24}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2491,"name":"ArtifactArchived.artifactTimestamp"}},{"id":2331,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2494,"name":"ArtifactArchived.timestamp"}},{"id":2332,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2333,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2334,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2496,"name":"ArtifactArchived.equals"}}],"inheritedFrom":{"type":"reference","target":2495,"name":"ArtifactArchived.equals"}},{"id":2335,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2336,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2499,"name":"ArtifactArchived.toString"}}],"inheritedFrom":{"type":"reference","target":2498,"name":"ArtifactArchived.toString"}}],"groups":[{"title":"Constructors","children":[2314]},{"title":"Properties","children":[2323,2326,2327,2328,2329,2330,2331]},{"title":"Methods","children":[2311,2324,2332,2335]}],"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2475,"name":"ArtifactArchived","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActivityRelatedArtifactArchived","categories":[],"previousId":2290,"nextId":2337},{"id":2337,"name":"ActivityRelatedArtifactGenerated","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2338,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":13,"character":11}],"signatures":[{"id":2339,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":13,"character":11}],"parameters":[{"id":2340,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2337,"name":"ActivityRelatedArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2502,"name":"ArtifactGenerated.fromJSON"}}],"overwrites":{"type":"reference","target":2501,"name":"ArtifactGenerated.fromJSON"}},{"id":2341,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":23,"character":4}],"signatures":[{"id":2342,"name":"new ActivityRelatedArtifactGenerated","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":23,"character":4}],"parameters":[{"id":2343,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2344,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2345,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2346,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2347,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2337,"name":"ActivityRelatedArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2505,"name":"ArtifactGenerated.constructor"}}],"overwrites":{"type":"reference","target":2504,"name":"ArtifactGenerated.constructor"}},{"id":2348,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2349,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2510,"name":"ArtifactGenerated.sceneId"}},{"id":2350,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":24,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2511,"name":"ArtifactGenerated.name"}},{"id":2351,"name":"artifact","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2512,"name":"ArtifactGenerated.artifact"}},{"id":2352,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2513,"name":"ArtifactGenerated.timestamp"}},{"id":2353,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2354,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2355,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2515,"name":"ArtifactGenerated.equals"}}],"inheritedFrom":{"type":"reference","target":2514,"name":"ArtifactGenerated.equals"}},{"id":2356,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2357,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2518,"name":"ArtifactGenerated.toString"}}],"inheritedFrom":{"type":"reference","target":2517,"name":"ArtifactGenerated.toString"}},{"id":2358,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2359,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2520,"name":"ArtifactGenerated.toJSON"}}],"inheritedFrom":{"type":"reference","target":2519,"name":"ArtifactGenerated.toJSON"}}],"groups":[{"title":"Constructors","children":[2341]},{"title":"Properties","children":[2348,2349,2350,2351,2352]},{"title":"Methods","children":[2338,2353,2356,2358]}],"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2500,"name":"ArtifactGenerated","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActivityRelatedArtifactGenerated","categories":[],"previousId":2310,"nextId":2360},{"id":2360,"name":"ActivityStarts","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) starts."}]},"children":[{"id":2361,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2362,"name":"new ActivityStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2363,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2364,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2365,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2366,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2360,"name":"ActivityStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2367,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2368,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2369,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2370,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2371,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2372,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2373,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2374,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2375,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2376,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2377,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2361]},{"title":"Properties","children":[2367,2368,2369,2370]},{"title":"Methods","children":[2371,2374,2376]}],"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2685,"name":"InteractionStarts"},{"type":"reference","target":2921,"name":"TaskStarts"}],"permalink":"/api/core-events/class/ActivityStarts","categories":[],"previousId":2337,"nextId":2475},{"id":2475,"name":"ArtifactArchived","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2476,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":14,"character":11}],"signatures":[{"id":2477,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":14,"character":11}],"parameters":[{"id":2478,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2475,"name":"ArtifactArchived","package":"@serenity-js/core"}}]},{"id":2479,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":25,"character":4}],"signatures":[{"id":2480,"name":"new ArtifactArchived","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":25,"character":4}],"parameters":[{"id":2481,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2482,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2483,"name":"type","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2484,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2485,"name":"artifactTimestamp","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2486,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2475,"name":"ArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2487,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":26,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2488,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":27,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2489,"name":"type","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":28,"character":24}],"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2490,"name":"path","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":29,"character":24}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2491,"name":"artifactTimestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":30,"character":24}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2492,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":42,"character":4}],"signatures":[{"id":2493,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":42,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"overwrites":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}},{"id":2494,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2495,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2496,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2497,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2498,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2499,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}}],"groups":[{"title":"Constructors","children":[2479]},{"title":"Properties","children":[2487,2488,2489,2490,2491,2494]},{"title":"Methods","children":[2476,2492,2495,2498]}],"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2310,"name":"ActivityRelatedArtifactArchived"}],"permalink":"/api/core-events/class/ArtifactArchived","categories":[],"previousId":2360,"nextId":2500},{"id":2500,"name":"ArtifactGenerated","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2501,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":13,"character":11}],"signatures":[{"id":2502,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":13,"character":11}],"parameters":[{"id":2503,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2500,"name":"ArtifactGenerated","package":"@serenity-js/core"}}]},{"id":2504,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":22,"character":4}],"signatures":[{"id":2505,"name":"new ArtifactGenerated","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":22,"character":4}],"parameters":[{"id":2506,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2507,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2508,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2509,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2500,"name":"ArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2510,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2511,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":24,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2512,"name":"artifact","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2513,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2514,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2515,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2516,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2517,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2518,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2519,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2520,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2504]},{"title":"Properties","children":[2510,2511,2512,2513]},{"title":"Methods","children":[2501,2514,2517,2519]}],"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2337,"name":"ActivityRelatedArtifactGenerated"}],"permalink":"/api/core-events/class/ArtifactGenerated","categories":[],"previousId":2475,"nextId":2521},{"id":2521,"name":"AsyncOperationAborted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2522,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":12,"character":11}],"signatures":[{"id":2523,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":12,"character":11}],"parameters":[{"id":2524,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2521,"name":"AsyncOperationAborted","package":"@serenity-js/core"}}]},{"id":2525,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":20,"character":4}],"signatures":[{"id":2526,"name":"new AsyncOperationAborted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":20,"character":4}],"parameters":[{"id":2527,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2528,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2529,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2521,"name":"AsyncOperationAborted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2530,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":21,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2531,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":22,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2532,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2533,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2534,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2535,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2536,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2537,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2538,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2539,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2525]},{"title":"Properties","children":[2530,2531,2532]},{"title":"Methods","children":[2522,2533,2536,2538]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/AsyncOperationAborted","categories":[],"previousId":2500,"nextId":2540},{"id":2540,"name":"AsyncOperationAttempted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2541,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":12,"character":11}],"signatures":[{"id":2542,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":12,"character":11}],"parameters":[{"id":2543,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2540,"name":"AsyncOperationAttempted","package":"@serenity-js/core"}}]},{"id":2544,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":21,"character":4}],"signatures":[{"id":2545,"name":"new AsyncOperationAttempted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":21,"character":4}],"parameters":[{"id":2546,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2547,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2548,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2549,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2540,"name":"AsyncOperationAttempted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2550,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2551,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":23,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2552,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2553,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2554,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2555,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2556,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2557,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2558,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2559,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2560,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2544]},{"title":"Properties","children":[2550,2551,2552,2553]},{"title":"Methods","children":[2541,2554,2557,2559]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2397,"name":"ActorStageExitAttempted"}],"permalink":"/api/core-events/class/AsyncOperationAttempted","categories":[],"previousId":2521,"nextId":2561},{"id":2561,"name":"AsyncOperationCompleted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2562,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":12,"character":11}],"signatures":[{"id":2563,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":12,"character":11}],"parameters":[{"id":2564,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2561,"name":"AsyncOperationCompleted","package":"@serenity-js/core"}}]},{"id":2565,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":19,"character":4}],"signatures":[{"id":2566,"name":"new AsyncOperationCompleted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":19,"character":4}],"parameters":[{"id":2567,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2568,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2561,"name":"AsyncOperationCompleted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2569,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":20,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2570,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2571,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2572,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2573,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2574,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2575,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2576,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2577,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2565]},{"title":"Properties","children":[2569,2570]},{"title":"Methods","children":[2562,2571,2574,2576]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2418,"name":"ActorStageExitCompleted"}],"permalink":"/api/core-events/class/AsyncOperationCompleted","categories":[],"previousId":2540,"nextId":2578},{"id":2578,"name":"AsyncOperationFailed","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2579,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":13,"character":11}],"signatures":[{"id":2580,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":13,"character":11}],"parameters":[{"id":2581,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2578,"name":"AsyncOperationFailed","package":"@serenity-js/core"}}]},{"id":2582,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"signatures":[{"id":2583,"name":"new AsyncOperationFailed","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"parameters":[{"id":2584,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":2585,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2586,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2578,"name":"AsyncOperationFailed","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2587,"name":"error","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":22,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":2588,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2589,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"signatures":[{"id":2590,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"overwrites":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}},{"id":2591,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2592,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2593,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2594,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2595,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2596,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}}],"groups":[{"title":"Constructors","children":[2582]},{"title":"Properties","children":[2587,2588,2591]},{"title":"Methods","children":[2579,2589,2592,2595]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2437,"name":"ActorStageExitFailed"}],"permalink":"/api/core-events/class/AsyncOperationFailed","categories":[],"previousId":2561,"nextId":2597},{"id":2597,"name":"BusinessRuleDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted by [@serenity-js/cucumber](/api/cucumber)\\nwhen a [business rule](https://cucumber.io/docs/gherkin/reference/#rule) is detected."}]},"children":[{"id":2598,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":15,"character":18}],"signatures":[{"id":2599,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":15,"character":18}],"parameters":[{"id":2600,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2597,"name":"BusinessRuleDetected","package":"@serenity-js/core"}}]},{"id":2601,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":24,"character":4}],"signatures":[{"id":2602,"name":"new BusinessRuleDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":24,"character":4}],"parameters":[{"id":2603,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2604,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2605,"name":"rule","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"BusinessRule","package":"@serenity-js/core"}},{"id":2606,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2597,"name":"BusinessRuleDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2607,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":25,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2608,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":26,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2609,"name":"rule","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":27,"character":24}],"type":{"type":"reference","name":"BusinessRule","package":"@serenity-js/core"}},{"id":2610,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2611,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2612,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2613,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2614,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2615,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2616,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2617,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2601]},{"title":"Properties","children":[2607,2608,2609,2610]},{"title":"Methods","children":[2598,2611,2614,2616]}],"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/BusinessRuleDetected","categories":[],"previousId":2578,"nextId":2618},{"id":2618,"name":"DomainEvent","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represents an internal domain event that occurs during test execution."}]},"children":[{"id":2622,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"..."},{"id":2623,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2624,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2625,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":2626,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2627,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":2628,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2629,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Properties","children":[2622]},{"title":"Methods","children":[2623,2626,2628]}],"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":10,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":2290,"name":"ActivityFinished"},{"type":"reference","target":2360,"name":"ActivityStarts"},{"type":"reference","target":2378,"name":"ActorEntersStage"},{"type":"reference","target":2456,"name":"ActorStageExitStarts"},{"type":"reference","target":2475,"name":"ArtifactArchived"},{"type":"reference","target":2500,"name":"ArtifactGenerated"},{"type":"reference","target":2521,"name":"AsyncOperationAborted"},{"type":"reference","target":2540,"name":"AsyncOperationAttempted"},{"type":"reference","target":2561,"name":"AsyncOperationCompleted"},{"type":"reference","target":2578,"name":"AsyncOperationFailed"},{"type":"reference","target":2597,"name":"BusinessRuleDetected"},{"type":"reference","target":2643,"name":"FeatureNarrativeDetected"},{"type":"reference","target":2706,"name":"RetryableSceneDetected"},{"type":"reference","target":2723,"name":"SceneBackgroundDetected"},{"type":"reference","target":2744,"name":"SceneDescriptionDetected"},{"type":"reference","target":2763,"name":"SceneFinished"},{"type":"reference","target":2784,"name":"SceneFinishes"},{"type":"reference","target":2801,"name":"SceneParametersDetected"},{"type":"reference","target":2822,"name":"SceneSequenceDetected"},{"type":"reference","target":2841,"name":"SceneStarts"},{"type":"reference","target":2860,"name":"SceneTagged"},{"type":"reference","target":2879,"name":"SceneTemplateDetected"},{"type":"reference","target":2942,"name":"TestRunFinished"},{"type":"reference","target":2959,"name":"TestRunFinishes"},{"type":"reference","target":2974,"name":"TestRunnerDetected"},{"type":"reference","target":2993,"name":"TestRunStarts"},{"type":"reference","target":3008,"name":"TestSuiteFinished"},{"type":"reference","target":3027,"name":"TestSuiteStarts"}],"permalink":"/api/core-events/class/DomainEvent","categories":[],"previousId":2597,"nextId":2643},{"id":2630,"name":"EmitsDomainEvents","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or a supporting class capable of telling\\nthe current wall clock time.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Serenity`"},{"kind":"text","text":"](/api/core/class/Serenity/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"children":[{"id":2631,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":6,"character":4}],"signatures":[{"id":2632,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":6,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2633,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":7,"character":4}],"signatures":[{"id":2634,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":7,"character":4}],"parameters":[{"id":2635,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2636,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":8,"character":4}],"signatures":[{"id":2637,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":8,"character":4}],"parameters":[{"id":2638,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2639,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":9,"character":4}],"signatures":[{"id":2640,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":9,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2641,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"signatures":[{"id":2642,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1948,"name":"TellsTime.currentTime"}}],"inheritedFrom":{"type":"reference","target":1947,"name":"TellsTime.currentTime"}}],"groups":[{"title":"Methods","children":[2631,2633,2636,2639,2641]}],"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":5,"character":17}],"extendedTypes":[{"type":"reference","target":1946,"name":"TellsTime","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":1951,"name":"Serenity"},{"type":"reference","target":2156,"name":"Stage"}],"permalink":"/api/core-events/interface/EmitsDomainEvents","categories":[],"previousId":2456},{"id":2643,"name":"FeatureNarrativeDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2644,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":12,"character":18}],"signatures":[{"id":2645,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":12,"character":18}],"parameters":[{"id":2646,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2643,"name":"FeatureNarrativeDetected","package":"@serenity-js/core"}}]},{"id":2654,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2647,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":20,"character":4}],"signatures":[{"id":2648,"name":"new FeatureNarrativeDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":20,"character":4}],"parameters":[{"id":2649,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2650,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2651,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2643,"name":"FeatureNarrativeDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2652,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2653,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2655,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2656,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2657,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2658,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2659,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2660,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2661,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2647]},{"title":"Properties","children":[2654,2652,2653]},{"title":"Methods","children":[2644,2655,2658,2660]}],"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/FeatureNarrativeDetected","categories":[],"previousId":2618,"nextId":2662},{"id":2662,"name":"InteractionFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2663,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":12,"character":11}],"signatures":[{"id":2664,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":12,"character":11}],"parameters":[{"id":2665,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2662,"name":"InteractionFinished","package":"@serenity-js/core"}}]},{"id":2666,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2667,"name":"new InteractionFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2668,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2669,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2670,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2671,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2672,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2662,"name":"InteractionFinished","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2292,"name":"ActivityFinished.constructor"}}],"inheritedFrom":{"type":"reference","target":2291,"name":"ActivityFinished.constructor"}},{"id":2673,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2298,"name":"ActivityFinished.sceneId"}},{"id":2674,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2299,"name":"ActivityFinished.activityId"}},{"id":2675,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2300,"name":"ActivityFinished.details"}},{"id":2676,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2301,"name":"ActivityFinished.outcome"}},{"id":2677,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2302,"name":"ActivityFinished.timestamp"}},{"id":2678,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2679,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2680,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2304,"name":"ActivityFinished.equals"}}],"inheritedFrom":{"type":"reference","target":2303,"name":"ActivityFinished.equals"}},{"id":2681,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2682,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2307,"name":"ActivityFinished.toString"}}],"inheritedFrom":{"type":"reference","target":2306,"name":"ActivityFinished.toString"}},{"id":2683,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2684,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2309,"name":"ActivityFinished.toJSON"}}],"inheritedFrom":{"type":"reference","target":2308,"name":"ActivityFinished.toJSON"}}],"groups":[{"title":"Constructors","children":[2666]},{"title":"Properties","children":[2673,2674,2675,2676,2677]},{"title":"Methods","children":[2663,2678,2681,2683]}],"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2290,"name":"ActivityFinished","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/InteractionFinished","categories":[],"previousId":2643,"nextId":2685},{"id":2685,"name":"InteractionStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2686,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":11,"character":11}],"signatures":[{"id":2687,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":11,"character":11}],"parameters":[{"id":2688,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2685,"name":"InteractionStarts","package":"@serenity-js/core"}}]},{"id":2689,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2690,"name":"new InteractionStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2691,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2692,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2693,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2694,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2685,"name":"InteractionStarts","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2362,"name":"ActivityStarts.constructor"}}],"inheritedFrom":{"type":"reference","target":2361,"name":"ActivityStarts.constructor"}},{"id":2695,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2367,"name":"ActivityStarts.sceneId"}},{"id":2696,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2368,"name":"ActivityStarts.activityId"}},{"id":2697,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2369,"name":"ActivityStarts.details"}},{"id":2698,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2370,"name":"ActivityStarts.timestamp"}},{"id":2699,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2700,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2701,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2372,"name":"ActivityStarts.equals"}}],"inheritedFrom":{"type":"reference","target":2371,"name":"ActivityStarts.equals"}},{"id":2702,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2703,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2375,"name":"ActivityStarts.toString"}}],"inheritedFrom":{"type":"reference","target":2374,"name":"ActivityStarts.toString"}},{"id":2704,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2705,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2377,"name":"ActivityStarts.toJSON"}}],"inheritedFrom":{"type":"reference","target":2376,"name":"ActivityStarts.toJSON"}}],"groups":[{"title":"Constructors","children":[2689]},{"title":"Properties","children":[2695,2696,2697,2698]},{"title":"Methods","children":[2686,2699,2702,2704]}],"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":2360,"name":"ActivityStarts","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/InteractionStarts","categories":[],"previousId":2662,"nextId":2706},{"id":2706,"name":"RetryableSceneDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that the test runner will retry running the test scenario upon failure."}]},"children":[{"id":2707,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":20,"character":11}],"signatures":[{"id":2708,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deserialises the event from a JSONObject"}]},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":20,"character":11}],"parameters":[{"id":2709,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2706,"name":"RetryableSceneDetected","package":"@serenity-js/core"}}]},{"id":2715,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2710,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":31,"character":4}],"signatures":[{"id":2711,"name":"new RetryableSceneDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":31,"character":4}],"parameters":[{"id":2712,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2713,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2706,"name":"RetryableSceneDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2714,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":32,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2716,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2717,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2718,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2719,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2720,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2721,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2722,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2710]},{"title":"Properties","children":[2715,2714]},{"title":"Methods","children":[2707,2716,2719,2721]}],"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/RetryableSceneDetected","categories":[],"previousId":2685,"nextId":2723},{"id":2723,"name":"SceneBackgroundDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2724,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":12,"character":18}],"signatures":[{"id":2725,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":12,"character":18}],"parameters":[{"id":2726,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2723,"name":"SceneBackgroundDetected","package":"@serenity-js/core"}}]},{"id":2736,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2727,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":20,"character":4}],"signatures":[{"id":2728,"name":"new SceneBackgroundDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":20,"character":4}],"parameters":[{"id":2729,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2730,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2731,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2732,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2723,"name":"SceneBackgroundDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2733,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2734,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2735,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":23,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2737,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2738,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2739,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2740,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2741,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2742,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2743,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2727]},{"title":"Properties","children":[2736,2733,2734,2735]},{"title":"Methods","children":[2724,2737,2740,2742]}],"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneBackgroundDetected","categories":[],"previousId":2706,"nextId":2744},{"id":2744,"name":"SceneDescriptionDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2745,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":12,"character":18}],"signatures":[{"id":2746,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":12,"character":18}],"parameters":[{"id":2747,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2744,"name":"SceneDescriptionDetected","package":"@serenity-js/core"}}]},{"id":2755,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2748,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":20,"character":4}],"signatures":[{"id":2749,"name":"new SceneDescriptionDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":20,"character":4}],"parameters":[{"id":2750,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2751,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2752,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2744,"name":"SceneDescriptionDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2753,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2754,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2756,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2757,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2758,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2759,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2760,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2761,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2762,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2748]},{"title":"Properties","children":[2755,2753,2754]},{"title":"Methods","children":[2745,2756,2759,2761]}],"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneDescriptionDetected","categories":[],"previousId":2723,"nextId":2763},{"id":2763,"name":"SceneFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2764,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":13,"character":11}],"signatures":[{"id":2765,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":13,"character":11}],"parameters":[{"id":2766,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2763,"name":"SceneFinished","package":"@serenity-js/core"}}]},{"id":2776,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2767,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":22,"character":4}],"signatures":[{"id":2768,"name":"new SceneFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":22,"character":4}],"parameters":[{"id":2769,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2770,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2771,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2772,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2763,"name":"SceneFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2773,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2774,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":24,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2775,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":25,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2777,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2778,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2779,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2780,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2781,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2782,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2783,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2767]},{"title":"Properties","children":[2776,2773,2774,2775]},{"title":"Methods","children":[2764,2777,2780,2782]}],"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneFinished","categories":[],"previousId":2744,"nextId":2784},{"id":2784,"name":"SceneFinishes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted by a Serenity/JS test runner adapter, right before a test and all its associated test hooks finish.\\nTriggers any clean-up operations that might be required, such as discarding of\\nthe [discardable](/api/core/interface/Discardable/) abilities."}]},"children":[{"id":2785,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":16,"character":11}],"signatures":[{"id":2786,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":16,"character":11}],"parameters":[{"id":2787,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2784,"name":"SceneFinishes","package":"@serenity-js/core"}}]},{"id":2793,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2788,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":23,"character":4}],"signatures":[{"id":2789,"name":"new SceneFinishes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":23,"character":4}],"parameters":[{"id":2790,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2791,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2784,"name":"SceneFinishes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2792,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2794,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2795,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2796,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2797,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2798,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2799,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2800,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2788]},{"title":"Properties","children":[2793,2792]},{"title":"Methods","children":[2785,2794,2797,2799]}],"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneFinishes","categories":[],"previousId":2763,"nextId":2801},{"id":2801,"name":"SceneParametersDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2802,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":12,"character":18}],"signatures":[{"id":2803,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":12,"character":18}],"parameters":[{"id":2804,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2801,"name":"SceneParametersDetected","package":"@serenity-js/core"}}]},{"id":2814,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2805,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":21,"character":4}],"signatures":[{"id":2806,"name":"new SceneParametersDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":21,"character":4}],"parameters":[{"id":2807,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2808,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2809,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioParameters","package":"@serenity-js/core"}},{"id":2810,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2801,"name":"SceneParametersDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2811,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2812,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":23,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2813,"name":"parameters","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":24,"character":24}],"type":{"type":"reference","name":"ScenarioParameters","package":"@serenity-js/core"}},{"id":2815,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2816,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2817,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2818,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2819,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2820,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2821,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2805]},{"title":"Properties","children":[2814,2811,2812,2813]},{"title":"Methods","children":[2802,2815,2818,2820]}],"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneParametersDetected","categories":[],"previousId":2784,"nextId":2822},{"id":2822,"name":"SceneSequenceDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2823,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":12,"character":11}],"signatures":[{"id":2824,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":12,"character":11}],"parameters":[{"id":2825,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2822,"name":"SceneSequenceDetected","package":"@serenity-js/core"}}]},{"id":2833,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2826,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":20,"character":4}],"signatures":[{"id":2827,"name":"new SceneSequenceDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":20,"character":4}],"parameters":[{"id":2828,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2829,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2830,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2822,"name":"SceneSequenceDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2831,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2832,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2834,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2835,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2836,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2837,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2838,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2839,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2840,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2826]},{"title":"Properties","children":[2833,2831,2832]},{"title":"Methods","children":[2823,2834,2837,2839]}],"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneSequenceDetected","categories":[],"previousId":2801,"nextId":2841},{"id":2841,"name":"SceneStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2842,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":12,"character":11}],"signatures":[{"id":2843,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":12,"character":11}],"parameters":[{"id":2844,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2841,"name":"SceneStarts","package":"@serenity-js/core"}}]},{"id":2852,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2845,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":20,"character":4}],"signatures":[{"id":2846,"name":"new SceneStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":20,"character":4}],"parameters":[{"id":2847,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2848,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2849,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2841,"name":"SceneStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2850,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2851,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":22,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2853,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2854,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2855,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2856,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2857,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2858,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2859,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2845]},{"title":"Properties","children":[2852,2850,2851]},{"title":"Methods","children":[2842,2853,2856,2858]}],"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneStarts","categories":[],"previousId":2822,"nextId":2860},{"id":2860,"name":"SceneTagged","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2861,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":12,"character":11}],"signatures":[{"id":2862,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":12,"character":11}],"parameters":[{"id":2863,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2860,"name":"SceneTagged","package":"@serenity-js/core"}}]},{"id":2871,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2864,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":19,"character":4}],"signatures":[{"id":2865,"name":"new SceneTagged","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":19,"character":4}],"parameters":[{"id":2866,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2867,"name":"tag","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Tag","package":"@serenity-js/core"}},{"id":2868,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2860,"name":"SceneTagged","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2869,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":20,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2870,"name":"tag","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":21,"character":24}],"type":{"type":"reference","name":"Tag","package":"@serenity-js/core"}},{"id":2872,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2873,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2874,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2875,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2876,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2877,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2878,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2864]},{"title":"Properties","children":[2871,2869,2870]},{"title":"Methods","children":[2861,2872,2875,2877]}],"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneTagged","categories":[],"previousId":2841,"nextId":2879},{"id":2879,"name":"SceneTemplateDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2880,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":12,"character":18}],"signatures":[{"id":2881,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":12,"character":18}],"parameters":[{"id":2882,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2879,"name":"SceneTemplateDetected","package":"@serenity-js/core"}}]},{"id":2890,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2883,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":20,"character":4}],"signatures":[{"id":2884,"name":"new SceneTemplateDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":20,"character":4}],"parameters":[{"id":2885,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2886,"name":"template","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2887,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2879,"name":"SceneTemplateDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2888,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2889,"name":"template","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2891,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2892,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2893,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2894,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2895,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2896,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2897,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2883]},{"title":"Properties","children":[2890,2888,2889]},{"title":"Methods","children":[2880,2891,2894,2896]}],"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneTemplateDetected","categories":[],"previousId":2860,"nextId":2898},{"id":2898,"name":"TaskFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2899,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":12,"character":11}],"signatures":[{"id":2900,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":12,"character":11}],"parameters":[{"id":2901,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2898,"name":"TaskFinished","package":"@serenity-js/core"}}]},{"id":2902,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2903,"name":"new TaskFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2904,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2905,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2906,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2907,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2908,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2898,"name":"TaskFinished","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2292,"name":"ActivityFinished.constructor"}}],"inheritedFrom":{"type":"reference","target":2291,"name":"ActivityFinished.constructor"}},{"id":2909,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2298,"name":"ActivityFinished.sceneId"}},{"id":2910,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2299,"name":"ActivityFinished.activityId"}},{"id":2911,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2300,"name":"ActivityFinished.details"}},{"id":2912,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2301,"name":"ActivityFinished.outcome"}},{"id":2913,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2302,"name":"ActivityFinished.timestamp"}},{"id":2914,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2915,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2916,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2304,"name":"ActivityFinished.equals"}}],"inheritedFrom":{"type":"reference","target":2303,"name":"ActivityFinished.equals"}},{"id":2917,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2918,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2307,"name":"ActivityFinished.toString"}}],"inheritedFrom":{"type":"reference","target":2306,"name":"ActivityFinished.toString"}},{"id":2919,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2920,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2309,"name":"ActivityFinished.toJSON"}}],"inheritedFrom":{"type":"reference","target":2308,"name":"ActivityFinished.toJSON"}}],"groups":[{"title":"Constructors","children":[2902]},{"title":"Properties","children":[2909,2910,2911,2912,2913]},{"title":"Methods","children":[2899,2914,2917,2919]}],"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2290,"name":"ActivityFinished","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TaskFinished","categories":[],"previousId":2879,"nextId":2921},{"id":2921,"name":"TaskStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2922,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":11,"character":11}],"signatures":[{"id":2923,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":11,"character":11}],"parameters":[{"id":2924,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2921,"name":"TaskStarts","package":"@serenity-js/core"}}]},{"id":2925,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2926,"name":"new TaskStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2927,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2928,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2929,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2930,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2921,"name":"TaskStarts","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2362,"name":"ActivityStarts.constructor"}}],"inheritedFrom":{"type":"reference","target":2361,"name":"ActivityStarts.constructor"}},{"id":2931,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2367,"name":"ActivityStarts.sceneId"}},{"id":2932,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2368,"name":"ActivityStarts.activityId"}},{"id":2933,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2369,"name":"ActivityStarts.details"}},{"id":2934,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2370,"name":"ActivityStarts.timestamp"}},{"id":2935,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2936,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2937,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2372,"name":"ActivityStarts.equals"}}],"inheritedFrom":{"type":"reference","target":2371,"name":"ActivityStarts.equals"}},{"id":2938,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2939,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2375,"name":"ActivityStarts.toString"}}],"inheritedFrom":{"type":"reference","target":2374,"name":"ActivityStarts.toString"}},{"id":2940,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2941,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2377,"name":"ActivityStarts.toJSON"}}],"inheritedFrom":{"type":"reference","target":2376,"name":"ActivityStarts.toJSON"}}],"groups":[{"title":"Constructors","children":[2925]},{"title":"Properties","children":[2931,2932,2933,2934]},{"title":"Methods","children":[2922,2935,2938,2940]}],"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":2360,"name":"ActivityStarts","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TaskStarts","categories":[],"previousId":2898,"nextId":2942},{"id":2942,"name":"TestRunFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when all the test scenarios have finished running."}]},"children":[{"id":2943,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":14,"character":11}],"signatures":[{"id":2944,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":14,"character":11}],"parameters":[{"id":2945,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2942,"name":"TestRunFinished","package":"@serenity-js/core"}}]},{"id":2951,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2946,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":21,"character":4}],"signatures":[{"id":2947,"name":"new TestRunFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":21,"character":4}],"parameters":[{"id":2948,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2949,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2942,"name":"TestRunFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2950,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":22,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2952,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2953,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2954,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2955,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2956,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2957,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2958,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2946]},{"title":"Properties","children":[2951,2950]},{"title":"Methods","children":[2943,2952,2955,2957]}],"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunFinished","categories":[],"previousId":2921,"nextId":2959},{"id":2959,"name":"TestRunFinishes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when the last test in the test suite has finished running\\nand it\'s time for any last-minute reporting activities to take place."}]},"children":[{"id":2960,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":11,"character":11}],"signatures":[{"id":2961,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":11,"character":11}],"parameters":[{"id":2962,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2959,"name":"TestRunFinishes","package":"@serenity-js/core"}}]},{"id":2966,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2963,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":17,"character":4}],"signatures":[{"id":2964,"name":"new TestRunFinishes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":17,"character":4}],"parameters":[{"id":2965,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2959,"name":"TestRunFinishes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2967,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2968,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2969,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2970,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2971,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2972,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2973,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2963]},{"title":"Properties","children":[2966]},{"title":"Methods","children":[2960,2967,2970,2972]}],"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunFinishes","categories":[],"previousId":2942,"nextId":2993},{"id":2993,"name":"TestRunStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when the very first test is about to start"}]},"children":[{"id":2994,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":10,"character":11}],"signatures":[{"id":2995,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":10,"character":11}],"parameters":[{"id":2996,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2993,"name":"TestRunStarts","package":"@serenity-js/core"}}]},{"id":3000,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2997,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":16,"character":4}],"signatures":[{"id":2998,"name":"new TestRunStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":16,"character":4}],"parameters":[{"id":2999,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2993,"name":"TestRunStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":3001,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3002,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":3003,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":3004,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3005,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":3006,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3007,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2997]},{"title":"Properties","children":[3000]},{"title":"Methods","children":[2994,3001,3004,3006]}],"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":9,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunStarts","categories":[],"previousId":2959,"nextId":2974},{"id":2974,"name":"TestRunnerDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2975,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":12,"character":18}],"signatures":[{"id":2976,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":12,"character":18}],"parameters":[{"id":2977,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2974,"name":"TestRunnerDetected","package":"@serenity-js/core"}}]},{"id":2985,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2978,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":20,"character":4}],"signatures":[{"id":2979,"name":"new TestRunnerDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":20,"character":4}],"parameters":[{"id":2980,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2981,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2982,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2974,"name":"TestRunnerDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2983,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2984,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2986,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2987,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2988,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2989,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2990,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2991,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2992,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2978]},{"title":"Properties","children":[2985,2983,2984]},{"title":"Methods","children":[2975,2986,2989,2991]}],"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunnerDetected","categories":[],"previousId":2993,"nextId":3008},{"id":3008,"name":"TestSuiteFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":3009,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":13,"character":11}],"signatures":[{"id":3010,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":13,"character":11}],"parameters":[{"id":3011,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":3008,"name":"TestSuiteFinished","package":"@serenity-js/core"}}]},{"id":3019,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":3012,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":21,"character":4}],"signatures":[{"id":3013,"name":"new TestSuiteFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":21,"character":4}],"parameters":[{"id":3014,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":3015,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":3016,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3008,"name":"TestSuiteFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":3017,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":22,"character":24}],"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":3018,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":23,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":3020,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3021,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":3022,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":3023,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3024,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":3025,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3026,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[3012]},{"title":"Properties","children":[3019,3017,3018]},{"title":"Methods","children":[3009,3020,3023,3025]}],"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestSuiteFinished","categories":[],"previousId":2974,"nextId":3027},{"id":3027,"name":"TestSuiteStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":3028,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":12,"character":11}],"signatures":[{"id":3029,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":12,"character":11}],"parameters":[{"id":3030,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":3027,"name":"TestSuiteStarts","package":"@serenity-js/core"}}]},{"id":3036,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":3031,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":19,"character":4}],"signatures":[{"id":3032,"name":"new TestSuiteStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":19,"character":4}],"parameters":[{"id":3033,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":3034,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3027,"name":"TestSuiteStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":3035,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":20,"character":24}],"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":3037,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3038,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":3039,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":3040,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3041,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":3042,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3043,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[3031]},{"title":"Properties","children":[3036,3035]},{"title":"Methods","children":[3028,3037,3040,3042]}],"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestSuiteStarts","categories":[],"previousId":3008,"nextId":2378},{"id":2378,"name":"ActorEntersStage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) is activated\\nas the result of invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)."}]},"children":[{"id":2379,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":15,"character":18}],"signatures":[{"id":2380,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":15,"character":18}],"parameters":[{"id":2381,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2378,"name":"ActorEntersStage","package":"@serenity-js/core"}}]},{"id":2389,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2382,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":23,"character":4}],"signatures":[{"id":2383,"name":"new ActorEntersStage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":23,"character":4}],"parameters":[{"id":2384,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2385,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1637,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2386,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2378,"name":"ActorEntersStage","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2387,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2388,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":25,"character":24}],"type":{"type":"reference","target":1637,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2390,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2391,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2392,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2393,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2394,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2395,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2396,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2382]},{"title":"Properties","children":[2389,2387,2388]},{"title":"Methods","children":[2379,2390,2393,2395]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorEntersStage","categories":[],"previousId":3027,"nextId":2397},{"id":2397,"name":"ActorStageExitAttempted","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) is dismissed\\neither upon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) event\\nfor actors initialised within the scope of a test scenario,\\nor upon the ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) event\\nfor actors initialised within the scope of a test suite."}]},"children":[{"id":2398,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":18,"character":11}],"signatures":[{"id":2399,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":18,"character":11}],"parameters":[{"id":2400,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2397,"name":"ActorStageExitAttempted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2542,"name":"AsyncOperationAttempted.fromJSON"}}],"overwrites":{"type":"reference","target":2541,"name":"AsyncOperationAttempted.fromJSON"}},{"id":2407,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2550,"name":"AsyncOperationAttempted.name"}},{"id":2408,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":23,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2551,"name":"AsyncOperationAttempted.description"}},{"id":2409,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2552,"name":"AsyncOperationAttempted.correlationId"}},{"id":2410,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2553,"name":"AsyncOperationAttempted.timestamp"}},{"id":2401,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":26,"character":4}],"signatures":[{"id":2402,"name":"new ActorStageExitAttempted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":26,"character":4}],"parameters":[{"id":2403,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2404,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2405,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2397,"name":"ActorStageExitAttempted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2545,"name":"AsyncOperationAttempted.constructor"}}],"overwrites":{"type":"reference","target":2544,"name":"AsyncOperationAttempted.constructor"}},{"id":2406,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":28,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2411,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2412,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2413,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2555,"name":"AsyncOperationAttempted.equals"}}],"inheritedFrom":{"type":"reference","target":2554,"name":"AsyncOperationAttempted.equals"}},{"id":2414,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2415,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2558,"name":"AsyncOperationAttempted.toString"}}],"inheritedFrom":{"type":"reference","target":2557,"name":"AsyncOperationAttempted.toString"}},{"id":2416,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2417,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2560,"name":"AsyncOperationAttempted.toJSON"}}],"inheritedFrom":{"type":"reference","target":2559,"name":"AsyncOperationAttempted.toJSON"}}],"groups":[{"title":"Constructors","children":[2401]},{"title":"Properties","children":[2407,2408,2409,2410,2406]},{"title":"Methods","children":[2398,2411,2414,2416]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2540,"name":"AsyncOperationAttempted","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitAttempted","categories":[],"previousId":2378,"nextId":2418},{"id":2418,"name":"ActorStageExitCompleted","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) and its abilities\\nare correctly [released](/api/core/interface/Discardable/) either\\nupon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) event\\nfor actors initialised within the scope of a test scenario,\\nor upon the ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) event\\nfor actors initialised within the scope of a test suite."}]},"children":[{"id":2419,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":18,"character":11}],"signatures":[{"id":2420,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":18,"character":11}],"parameters":[{"id":2421,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2418,"name":"ActorStageExitCompleted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2563,"name":"AsyncOperationCompleted.fromJSON"}}],"overwrites":{"type":"reference","target":2562,"name":"AsyncOperationCompleted.fromJSON"}},{"id":2428,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":20,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2569,"name":"AsyncOperationCompleted.correlationId"}},{"id":2429,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2570,"name":"AsyncOperationCompleted.timestamp"}},{"id":2422,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":26,"character":4}],"signatures":[{"id":2423,"name":"new ActorStageExitCompleted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":26,"character":4}],"parameters":[{"id":2424,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2425,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2426,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2418,"name":"ActorStageExitCompleted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2566,"name":"AsyncOperationCompleted.constructor"}}],"overwrites":{"type":"reference","target":2565,"name":"AsyncOperationCompleted.constructor"}},{"id":2427,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":28,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2430,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2431,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2432,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2572,"name":"AsyncOperationCompleted.equals"}}],"inheritedFrom":{"type":"reference","target":2571,"name":"AsyncOperationCompleted.equals"}},{"id":2433,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2434,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2575,"name":"AsyncOperationCompleted.toString"}}],"inheritedFrom":{"type":"reference","target":2574,"name":"AsyncOperationCompleted.toString"}},{"id":2435,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2436,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2577,"name":"AsyncOperationCompleted.toJSON"}}],"inheritedFrom":{"type":"reference","target":2576,"name":"AsyncOperationCompleted.toJSON"}}],"groups":[{"title":"Constructors","children":[2422]},{"title":"Properties","children":[2428,2429,2427]},{"title":"Methods","children":[2419,2430,2433,2435]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2561,"name":"AsyncOperationCompleted","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitCompleted","categories":[],"previousId":2397,"nextId":2437},{"id":2437,"name":"ActorStageExitFailed","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when [releasing](/api/core/interface/Discardable/) an\\n["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or its abilities\\nresulted in an error either\\nupon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) event\\nfor actors initialised within the scope of a test scenario,\\nor upon the ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) event\\nfor actors initialised within the scope of a test suite."}]},"children":[{"id":2438,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitFailed.ts","line":20,"character":11}],"signatures":[{"id":2439,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitFailed.ts","line":20,"character":11}],"parameters":[{"id":2440,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2437,"name":"ActorStageExitFailed","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2580,"name":"AsyncOperationFailed.fromJSON"}}],"overwrites":{"type":"reference","target":2579,"name":"AsyncOperationFailed.fromJSON"}},{"id":2441,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"signatures":[{"id":2442,"name":"new ActorStageExitFailed","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"parameters":[{"id":2443,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":2444,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2445,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2437,"name":"ActorStageExitFailed","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2583,"name":"AsyncOperationFailed.constructor"}}],"inheritedFrom":{"type":"reference","target":2582,"name":"AsyncOperationFailed.constructor"}},{"id":2446,"name":"error","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":22,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":2587,"name":"AsyncOperationFailed.error"}},{"id":2447,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2588,"name":"AsyncOperationFailed.correlationId"}},{"id":2448,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"signatures":[{"id":2449,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2590,"name":"AsyncOperationFailed.toJSON"}}],"inheritedFrom":{"type":"reference","target":2589,"name":"AsyncOperationFailed.toJSON"}},{"id":2450,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2591,"name":"AsyncOperationFailed.timestamp"}},{"id":2451,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2452,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2453,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2593,"name":"AsyncOperationFailed.equals"}}],"inheritedFrom":{"type":"reference","target":2592,"name":"AsyncOperationFailed.equals"}},{"id":2454,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2455,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2596,"name":"AsyncOperationFailed.toString"}}],"inheritedFrom":{"type":"reference","target":2595,"name":"AsyncOperationFailed.toString"}}],"groups":[{"title":"Constructors","children":[2441]},{"title":"Properties","children":[2446,2447,2450]},{"title":"Methods","children":[2438,2448,2451,2454]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitFailed.ts","line":19,"character":13}],"extendedTypes":[{"type":"reference","target":2578,"name":"AsyncOperationFailed","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitFailed","categories":[],"previousId":2418,"nextId":2456},{"id":2456,"name":"ActorStageExitStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted upon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) and\\n["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) events\\nto notify the [stage crew members](/api/core/interface/StageCrewMember/)\\nabout the final state of the [actors](/api/core/class/Actor/) and their abilities\\nbefore they\'re [released](/api/core/interface/Discardable/)."}]},"children":[{"id":2457,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":18,"character":11}],"signatures":[{"id":2458,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":18,"character":11}],"parameters":[{"id":2459,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2456,"name":"ActorStageExitStarts","package":"@serenity-js/core"}}]},{"id":2467,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2622,"name":"DomainEvent.timestamp"}},{"id":2460,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":26,"character":4}],"signatures":[{"id":2461,"name":"new ActorStageExitStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":26,"character":4}],"parameters":[{"id":2462,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2463,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1637,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2464,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2456,"name":"ActorStageExitStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2465,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":27,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2466,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":28,"character":24}],"type":{"type":"reference","target":1637,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2468,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2469,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2470,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2624,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"DomainEvent.equals"}},{"id":2471,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2472,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2627,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2626,"name":"DomainEvent.toString"}},{"id":2473,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2474,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2629,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2628,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2460]},{"title":"Properties","children":[2467,2465,2466]},{"title":"Methods","children":[2457,2468,2471,2473]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitStarts","categories":[],"previousId":2437,"nextId":2630}],"groups":[{"title":"Events","children":[2290,2310,2337,2360,2475,2500,2521,2540,2561,2578,2597,2618,2643,2662,2685,2706,2723,2744,2763,2784,2801,2822,2841,2860,2879,2898,2921,2942,2959,2993,2974,3008,3027,2378,2397,2418,2437,2456]},{"title":"Time","children":[2630]}],"sources":[{"fileName":"packages/core/src/events/index.ts","line":1,"character":0}],"permalink":"/api/core-events"},"urlSlug":"core-events"},{"index":true,"label":"index","reflection":{"id":1,"name":"@serenity-js/core","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":1951,"name":"Serenity","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":1955,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":37,"character":4}],"signatures":[{"id":1956,"name":"new Serenity","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":37,"character":4}],"parameters":[{"id":1957,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1958,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."}],"type":{"type":"reference","target":1951,"name":"Serenity","package":"@serenity-js/core"}}]},{"id":1965,"name":"configure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":67,"character":4}],"signatures":[{"id":1966,"name":"configure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures Serenity/JS. Every call to this function\\nreplaces the previous configuration provided,\\nso this function should be called exactly once\\nin your test suite."}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":67,"character":4}],"parameters":[{"id":1967,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1968,"name":"engage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":190,"character":4}],"signatures":[{"id":1969,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Re-configures Serenity/JS with a new [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/)\\nyou want to use in any subsequent calls to ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nFor your convenience, use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) function instead,\\nwhich provides an alternative to calling ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) directly in your tests\\nand is typically invoked in a \\"before all\\" or \\"before each\\" hook of your test runner of choice.\\n\\nIf your implementation of the [cast](/api/core/class/Cast/) interface is stateless,\\nyou can invoke this function just once before your entire test suite is executed, see\\n- ["},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\\n- ["},{"kind":"code","text":"`before`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`BeforeAll`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\\n\\nHowever, if your [cast](/api/core/class/Cast/) holds state that you want to reset before each scenario,\\nit\'s better to invoke "},{"kind":"code","text":"`engage`"},{"kind":"text","text":" before each test using:\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`Before`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\\n\\n## Engaging a cast of actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast } from \'@serenity-js/core\';\\n\\nclass Actors implements Cast {\\n  prepare(actor: Actor) {\\n    return actor.whoCan(\\n      // ... abilities you\'d like the Actor to have\\n    );\\n  }\\n}\\n\\nengage(new Actors());\\n```"},{"kind":"text","text":"\\n\\n### Using with Mocha test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Jasmine test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport \'jasmine\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Cucumber.js test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":190,"character":4}],"parameters":[{"id":1970,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2000,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1971,"name":"theActorCalled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":254,"character":4}],"signatures":[{"id":1972,"name":"theActorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates or retrieves an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\ncalled "},{"kind":"code","text":"`name`"},{"kind":"text","text":" if one has already been instantiated.\\n\\nFor your convenience, use ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) function instead.\\n\\n## Usage with Mocha\\n\\n"},{"kind":"code","text":"```typescript\\n  import { describe, it } from \'mocha\';\\n  import { actorCalled } from \'@serenity-js/core\';\\n\\n  describe(\'Feature\', () => {\\n\\n     it(\'should have some behaviour\', () =>\\n         actorCalled(\'James\').attemptsTo(\\n             // ... activities\\n         ))\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Usage with Jasmine\\n\\n"},{"kind":"code","text":"```typescript\\n  import \'jasmine\';\\n  import { actorCalled } from \'@serenity-js/core\';\\n\\n  describe(\'Feature\', () => {\\n\\n     it(\'should have some behaviour\', () =>\\n         actorCalled(\'James\').attemptsTo(\\n             // ... activities\\n         ))\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":254,"character":4}],"parameters":[{"id":1973,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the actor to instantiate or retrieve"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":1974,"name":"theActorInTheSpotlight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":291,"character":4}],"signatures":[{"id":1975,"name":"theActorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves an actor who was last instantiated or retrieved\\nusing ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled).\\n\\nThis function is particularly useful when automating Cucumber scenarios.\\n\\nFor your convenience, use ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/) function instead.\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given, When } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n\\nWhen(/(?:he|she|they) browse their recent orders/, () =>\\n  actorInTheSpotlight().attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\n- ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":291,"character":4}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":1976,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":295,"character":4}],"signatures":[{"id":1977,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":295,"character":4}],"parameters":[{"id":1978,"name":"events","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2637,"name":"EmitsDomainEvents.announce"}}],"implementationOf":{"type":"reference","target":2636,"name":"EmitsDomainEvents.announce"}},{"id":1979,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":299,"character":4}],"signatures":[{"id":1980,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":299,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2642,"name":"EmitsDomainEvents.currentTime"}}],"implementationOf":{"type":"reference","target":2641,"name":"EmitsDomainEvents.currentTime"}},{"id":1981,"name":"assignNewSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":303,"character":4}],"signatures":[{"id":1982,"name":"assignNewSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":303,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":1983,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":307,"character":4}],"signatures":[{"id":1984,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":307,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2632,"name":"EmitsDomainEvents.currentSceneId"}}],"implementationOf":{"type":"reference","target":2631,"name":"EmitsDomainEvents.currentSceneId"}},{"id":1985,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":311,"character":4}],"signatures":[{"id":1986,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":311,"character":4}],"parameters":[{"id":1987,"name":"activityDetails","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2634,"name":"EmitsDomainEvents.assignNewActivityId"}}],"implementationOf":{"type":"reference","target":2633,"name":"EmitsDomainEvents.assignNewActivityId"}},{"id":1988,"name":"createError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":4}],"signatures":[{"id":1989,"name":"createError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":4}],"typeParameter":[{"id":1990,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":1991,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1992,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":52}],"signatures":[{"id":1993,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":52}],"parameters":[{"id":1994,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":1990,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":1995,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":166,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1990,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":1996,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":322,"character":4}],"signatures":[{"id":1997,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@package","content":[]}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":322,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":2640,"name":"EmitsDomainEvents.waitForNextCue"}}],"implementationOf":{"type":"reference","target":2639,"name":"EmitsDomainEvents.waitForNextCue"}},{"id":1998,"name":"cwd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":326,"character":4}],"signatures":[{"id":1999,"name":"cwd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":326,"character":4}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1955]},{"title":"Methods","children":[1965,1968,1971,1974,1976,1979,1981,1983,1985,1988,1996,1998]}],"sources":[{"fileName":"packages/core/src/Serenity.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2630,"name":"EmitsDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/core/class/Serenity","categories":[],"previousId":508,"nextId":84},{"id":84,"name":"ClassDescription","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":" describes the Node module ID and optionally:\\n- a named export that you want to import\\n- a parameter that should be passed to the static "},{"kind":"code","text":"`fromJSON`"},{"kind":"text","text":" method if the imported type provides it.\\n\\n"},{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":" is used to describe the [stage crew members](/api/core/interface/StageCrewMember/) passed to ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/).\\n\\nThe most basic class description is the name of a Node module that must provide a "},{"kind":"code","text":"`default`"},{"kind":"text","text":" export.\\nFor example, below definition would be interpreted as a request to import the "},{"kind":"code","text":"`default`"},{"kind":"text","text":" export from the "},{"kind":"code","text":"`@serenity-js/serenity-bdd`"},{"kind":"text","text":" module and instantiate it using its no-arg constructor:\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    `@serenity-js/serenity-bdd`\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nClass description can also include a named export to be imported. For example, below definition would be interpreted as a request\\nto import the "},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":" type from "},{"kind":"code","text":"`@serenity-js/serenity-bdd`"},{"kind":"text","text":" and instantiate it using its no-arg constructor:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    `@serenity-js/serenity-bdd:SerenityBDDReporter`\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nHowever, not all types have no-arg constructors. In those cases, a type offering a "},{"kind":"code","text":"`static fromJSON(configParam)`"},{"kind":"text","text":" method can be described using a tuple\\nwhere the first item describes the Node module and optionally the class name, and the second item describes the "},{"kind":"code","text":"`configParam`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    [ `@serenity-js/core:ArtifactArchiver`, { outputDirectory: \'./target/site/serenity\' } ]\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nNote that the class description could also describe a local Node module. This can be useful when you\'re writing a custom StageCrewMember implementation.\\nFor example, "},{"kind":"code","text":"`./my-reporter:MyReporter`"},{"kind":"text","text":" would be interpreted as a request to load the "},{"kind":"code","text":"`MyReporter`"},{"kind":"text","text":" type from "},{"kind":"code","text":"`./my-reporter`"},{"kind":"text","text":" file, located\\nrelative to the [working directory](https://nodejs.org/api/process.html#processcwd) of the current Node.js process."}]},"sources":[{"fileName":"packages/core/src/config/ClassDescription.ts","line":52,"character":12}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"tuple","elements":[{"type":"intrinsic","name":"string"}]},{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]}]},"permalink":"/api/core#ClassDescription","categories":[],"previousId":1951,"nextId":85},{"id":85,"name":"SerenityConfig","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Describes the configuration object accepted by the ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) function.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":"](/api/core/#ClassDescription)\\n- ["},{"kind":"code","text":"`Stage.waitForNextCue`"},{"kind":"text","text":"](/api/core/class/Stage/#waitForNextCue)"}]},"children":[{"id":86,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":87,"name":"new SerenityConfig","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"}}]},{"id":88,"name":"actors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/) to be used when ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\nand ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/) functions are called."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":26,"character":4}],"type":{"type":"reference","target":2000,"name":"Cast","package":"@serenity-js/core"}},{"id":89,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/) or [stage crew members](/api/core/interface/StageCrewMember/)\\nto be notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/) that occur during the scenario execution.\\n\\nNote that the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" can also be configured using [class descriptions](/api/core/#ClassDescription).\\nThis is useful when you need to load the configuration from a static "},{"kind":"code","text":"`json`"},{"kind":"text","text":" file, or when the test runner doesn\'t support\\nproviding class instances in configuration (e.g. Playwright Test)."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":36,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2241,"typeArguments":[{"type":"reference","target":2074,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":84,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":90,"name":"cueTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum amount of time between [SceneFinishes](/api/core-events/class/SceneFinishes/) and [SceneFinished](/api/core-events/class/SceneFinished/) events\\nthat Serenity/JS should wait for any post-scenario\\nasync operations to complete. Those include generating the screenshots,\\nsaving reports to disk, [dismissing the actors](/api/core/interface/Discardable/), and so on.\\n\\nDefaults to 5 seconds.\\n\\n**Please note** that this is not\\na scenario timeout, which should be configured in your test runner."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":49,"character":4}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":91,"name":"interactionTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum default amount of time allowed for interactions such as ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)\\nto complete.\\n\\nDefaults to 5 seconds, can be overridden per interaction.\\n\\n**Please note** that this is not\\na scenario timeout, which should be configured in your test runner.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":63,"character":4}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":92,"name":"diffFormatter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that\\nshould be used by the ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/) and the ability\\nto ["},{"kind":"code","text":"`RaiseErrors`"},{"kind":"text","text":"](/api/core/class/RaiseErrors/)\\nwhen generating diffs included in ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) objects.\\n\\nBy default, Serenity/JS uses ["},{"kind":"code","text":"`NoOpDiffFormatter`"},{"kind":"text","text":"](/api/core/class/NoOpDiffFormatter/)"}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":73,"character":4}],"type":{"type":"reference","target":189,"name":"DiffFormatter","package":"@serenity-js/core"}},{"id":93,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\n\\nDefaults to ["},{"kind":"code","text":"`process.stdout`"},{"kind":"text","text":"](https://nodejs.org/api/process.html#process_process_stdout)."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":80,"character":4}],"type":{"type":"reference","target":2274,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Constructors","children":[86]},{"title":"Properties","children":[88,89,90,91,92,93]}],"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":20,"character":22}],"permalink":"/api/core/class/SerenityConfig","categories":[],"previousId":84,"nextId":507},{"id":144,"name":"ErrorFactory","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates Serenity/JS ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) objects based\\non the provided [configuration](/api/core/interface/ErrorOptions/)."}]},"children":[{"id":145,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":21,"character":4}],"signatures":[{"id":146,"name":"new ErrorFactory","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":21,"character":4}],"parameters":[{"id":147,"name":"formatter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":189,"name":"DiffFormatter","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":144,"name":"ErrorFactory","package":"@serenity-js/core"}}]},{"id":149,"name":"create","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":4}],"signatures":[{"id":150,"name":"create","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":4}],"typeParameter":[{"id":151,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":152,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":153,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":47}],"signatures":[{"id":154,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":47}],"parameters":[{"id":155,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":151,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":156,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":166,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":151,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[145]},{"title":"Methods","children":[149]}],"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":19,"character":13}],"permalink":"/api/core/class/ErrorFactory","categories":[],"previousId":1067,"nextId":166},{"id":166,"name":"ErrorOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":167,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":168,"name":"location","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":9,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}},{"id":169,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":10,"character":4}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":170,"name":"diff","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":11,"character":4}],"type":{"type":"reflection","declaration":{"id":171,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":172,"name":"expected","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":12,"character":8}],"type":{"type":"intrinsic","name":"unknown"}},{"id":173,"name":"actual","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":13,"character":8}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[172,173]}],"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":11,"character":11}]}}},{"id":174,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":15,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"groups":[{"title":"Properties","children":[167,168,169,170,174]}],"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":7,"character":17}],"permalink":"/api/core/interface/ErrorOptions","categories":[],"previousId":144,"nextId":94},{"id":94,"name":"ErrorSerialiser","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":99,"name":"serialise","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":19,"character":11}],"signatures":[{"id":100,"name":"serialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":19,"character":11}],"parameters":[{"id":101,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":102,"name":"registerErrorTypes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":11}],"signatures":[{"id":103,"name":"registerErrorTypes","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":11}],"parameters":[{"id":104,"name":"types","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":105,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":46}],"signatures":[{"id":106,"name":"new types","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":46}],"parameters":[{"id":107,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]}}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":108,"name":"deserialise","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":44,"character":11}],"signatures":[{"id":109,"name":"deserialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":44,"character":11}],"parameters":[{"id":110,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]},{"id":133,"name":"deserialiseFromStackTrace","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":78,"character":11}],"signatures":[{"id":134,"name":"deserialiseFromStackTrace","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":78,"character":11}],"parameters":[{"id":135,"name":"stack","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]},{"id":136,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":137,"name":"new ErrorSerialiser","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":94,"name":"ErrorSerialiser","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[136]},{"title":"Methods","children":[99,102,108,133]}],"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":7,"character":13}],"permalink":"/api/core/class/ErrorSerialiser","categories":[],"previousId":166,"nextId":138},{"id":138,"name":"ErrorStackParser","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A thin wrapper around error-stack-parser module\\n\\n## Learn more\\n- [Error stack parser](https://www.npmjs.com/package/error-stack-parser)"}]},"children":[{"id":139,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":140,"name":"new ErrorStackParser","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":138,"name":"ErrorStackParser","package":"@serenity-js/core"}}]},{"id":141,"name":"parse","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":12,"character":4}],"signatures":[{"id":142,"name":"parse","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":12,"character":4}],"parameters":[{"id":143,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/stackframe/stackframe.d.ts","qualifiedName":"StackFrame"},"name":"StackFrame","package":"stackframe"}}}]}],"groups":[{"title":"Constructors","children":[139]},{"title":"Methods","children":[141]}],"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":11,"character":13}],"permalink":"/api/core/class/ErrorStackParser","categories":[],"previousId":94,"nextId":472},{"id":472,"name":"RaiseErrors","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to create a Serenity/JS ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)\\nfrom within a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\nThe stack trace of an error created this way includes the filesystem location pointing to where the interaction was invoked,\\nwhich makes debugging any failures easier.\\n\\n:::info Pro tip\\nThe ability to "},{"kind":"code","text":"`RaiseErrors`"},{"kind":"text","text":" is given to all Serenity/JS actors by default, so you don\'t need to configure it explicitly.\\n:::\\n\\n## Raising an error\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Interaction, LogicError, RaiseErrors, the } from \'@serenity-js/core\'\\nimport isPathInside from \'is-path-inside\'\\nimport { unlink } from \'fs/promises\'\\n\\nconst RemoveFile = (pathToFile: string) =>\\n  Interaction.where(the`#actor removes a file at ${ pathToFile }`, async actor => {\\n\\n    if (! isPathInside(pathToFile, process.cwd())) {\\n\\n      throw RaiseErrors.as(actor).create(LogicError, {\\n        message: `Removing files outside the current working directory is not allowed`\\n        diff: {\\n          expected: process.cwd(),\\n          actual: pathToFile,\\n        }\\n      })\\n    }\\n\\n    await unlink(pathToFile);\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ErrorOptions`"},{"kind":"text","text":"](/api/core/interface/ErrorOptions/)\\n- ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/)\\n- ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)\\n- ["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/)\\n- ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n- ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)\\n- ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"children":[{"id":480,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":54,"character":4}],"signatures":[{"id":481,"name":"new RaiseErrors","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":54,"character":4}],"parameters":[{"id":482,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":472,"name":"RaiseErrors","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":524,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":523,"name":"Ability.constructor"}},{"id":484,"name":"create","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":4}],"signatures":[{"id":485,"name":"create","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":4}],"typeParameter":[{"id":486,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":487,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":488,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":47}],"signatures":[{"id":489,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":47}],"parameters":[{"id":490,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":486,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":491,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":166,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":486,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":492,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":493,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":526,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":525,"name":"Ability.toJSON"}},{"id":494,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":495,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":528,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":527,"name":"Ability.abilityType"}}],"groups":[{"title":"Constructors","children":[480]},{"title":"Methods","children":[484,492,494]}],"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":53,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/RaiseErrors","categories":[],"previousId":138,"nextId":175},{"id":175,"name":"AnsiDiffFormatter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that uses [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code)\\nto format the output."}]},"children":[{"id":176,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":27,"character":4}],"signatures":[{"id":177,"name":"new AnsiDiffFormatter","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`AnsiDiffFormatter`"},{"kind":"text","text":", configured with colour support options for [Chalk](https://github.com/chalk/chalk).\\nWhen no "},{"kind":"code","text":"`chalkOptions`"},{"kind":"text","text":" object is provided, Chalk will auto-detect colour support automatically based on the execution environment.\\n\\nAvailable colour support levels:\\n- "},{"kind":"code","text":"`0`"},{"kind":"text","text":" - All colours disabled.\\n- "},{"kind":"code","text":"`1`"},{"kind":"text","text":" - Basic 16 colours support.\\n- "},{"kind":"code","text":"`2`"},{"kind":"text","text":" - ANSI 256 colours support.\\n- "},{"kind":"code","text":"`3`"},{"kind":"text","text":" - Truecolor - 16 million colours support."}]},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":27,"character":4}],"parameters":[{"id":178,"name":"chalkOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/chalk/index.d.ts","qualifiedName":"chalk.Options"},"name":"Options","package":"chalk","qualifiedName":"chalk.Options"}}],"type":{"type":"reference","target":175,"name":"AnsiDiffFormatter","package":"@serenity-js/core"}}]},{"id":180,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":31,"character":4}],"signatures":[{"id":181,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":31,"character":4}],"parameters":[{"id":182,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":191,"name":"DiffFormatter.expected"}}],"implementationOf":{"type":"reference","target":190,"name":"DiffFormatter.expected"}},{"id":183,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":35,"character":4}],"signatures":[{"id":184,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":35,"character":4}],"parameters":[{"id":185,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":194,"name":"DiffFormatter.received"}}],"implementationOf":{"type":"reference","target":193,"name":"DiffFormatter.received"}},{"id":186,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":39,"character":4}],"signatures":[{"id":187,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":39,"character":4}],"parameters":[{"id":188,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":197,"name":"DiffFormatter.unchanged"}}],"implementationOf":{"type":"reference","target":196,"name":"DiffFormatter.unchanged"}}],"groups":[{"title":"Constructors","children":[176]},{"title":"Methods","children":[180,183,186]}],"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":12,"character":13}],"implementedTypes":[{"type":"reference","target":189,"name":"DiffFormatter","package":"@serenity-js/core"}],"permalink":"/api/core/class/AnsiDiffFormatter","categories":[],"previousId":472,"nextId":189},{"id":189,"name":"DiffFormatter","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Formats text representing expected, received, and unchanged lines of a diff\\nproduced by the ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/), so that they can be presented to a developer\\nin a visually distinctive way."}]},"children":[{"id":190,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":9,"character":4}],"signatures":[{"id":191,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":9,"character":4}],"parameters":[{"id":192,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":193,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":10,"character":4}],"signatures":[{"id":194,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":10,"character":4}],"parameters":[{"id":195,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":196,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":11,"character":4}],"signatures":[{"id":197,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":11,"character":4}],"parameters":[{"id":198,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[190,193,196]}],"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":8,"character":17}],"implementedBy":[{"type":"reference","target":175,"name":"AnsiDiffFormatter"},{"type":"reference","target":199,"name":"NoOpDiffFormatter"}],"permalink":"/api/core/interface/DiffFormatter","categories":[],"previousId":175,"nextId":199},{"id":199,"name":"NoOpDiffFormatter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A no-op ["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that produces output identical to input."}]},"children":[{"id":200,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":201,"name":"new NoOpDiffFormatter","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":199,"name":"NoOpDiffFormatter","package":"@serenity-js/core"}}]},{"id":202,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":9,"character":4}],"signatures":[{"id":203,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":9,"character":4}],"parameters":[{"id":204,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":191,"name":"DiffFormatter.expected"}}],"implementationOf":{"type":"reference","target":190,"name":"DiffFormatter.expected"}},{"id":205,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":13,"character":4}],"signatures":[{"id":206,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":13,"character":4}],"parameters":[{"id":207,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":194,"name":"DiffFormatter.received"}}],"implementationOf":{"type":"reference","target":193,"name":"DiffFormatter.received"}},{"id":208,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":17,"character":4}],"signatures":[{"id":209,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":17,"character":4}],"parameters":[{"id":210,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":197,"name":"DiffFormatter.unchanged"}}],"implementationOf":{"type":"reference","target":196,"name":"DiffFormatter.unchanged"}}],"groups":[{"title":"Constructors","children":[200]},{"title":"Methods","children":[202,205,208]}],"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":8,"character":13}],"implementedTypes":[{"type":"reference","target":189,"name":"DiffFormatter","package":"@serenity-js/core"}],"permalink":"/api/core/class/NoOpDiffFormatter","categories":[],"previousId":189,"nextId":211},{"id":211,"name":"AssertionError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an assertion has failed."}]},"children":[{"id":212,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":13,"character":11}],"signatures":[{"id":213,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":13,"character":11}],"parameters":[{"id":214,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":211,"name":"AssertionError","package":"@serenity-js/core"}}]},{"id":225,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":28,"character":4}],"signatures":[{"id":226,"name":"new AssertionError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":28,"character":4}],"parameters":[{"id":227,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error and the difference between the expected and actual values"}]},"type":{"type":"intrinsic","name":"string"}},{"id":228,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":211,"name":"AssertionError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":229,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":230,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":231,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":232,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":233,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":234,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":235,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":236,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[225]},{"title":"Properties","children":[229,234,235,236]},{"title":"Methods","children":[212,230,232]}],"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/AssertionError","categories":[],"previousId":199,"nextId":237},{"id":237,"name":"ConfigurationError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that a test framework or test suite configuration error occurred."}]},"children":[{"id":238,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":13,"character":11}],"signatures":[{"id":239,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":13,"character":11}],"parameters":[{"id":240,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":237,"name":"ConfigurationError","package":"@serenity-js/core"}}]},{"id":251,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":28,"character":4}],"signatures":[{"id":252,"name":"new ConfigurationError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":28,"character":4}],"parameters":[{"id":253,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":254,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":237,"name":"ConfigurationError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":255,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":256,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":257,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":258,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":259,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":260,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":261,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":262,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[251]},{"title":"Properties","children":[255,260,261,262]},{"title":"Methods","children":[238,256,258]}],"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ConfigurationError","categories":[],"previousId":211,"nextId":263},{"id":263,"name":"ImplementationPendingError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempted to perform\\na ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that hasn\'t been implemented yet.\\n\\n## A pending Task\\n\\n"},{"kind":"code","text":"```ts\\nimport { Task } from \'@serenity-js/core\'\\n\\n// A pending Task is one that encapsulates no other activities\\nconst Authenticate = () =>\\n  Task.where(`#actor authenticates with the service up a test database` )\\n```"},{"kind":"text","text":"\\n\\n## A pending Interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Interaction } from \'@serenity-js/core\'\\n\\n// A pending Interaction is one that doesn\'t perform any action\\nconst DoubleClick = () =>\\n  Interaction.where(`#actor double-clicks`)\\n```"}]},"children":[{"id":264,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":34,"character":11}],"signatures":[{"id":265,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":34,"character":11}],"parameters":[{"id":266,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":263,"name":"ImplementationPendingError","package":"@serenity-js/core"}}]},{"id":277,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":49,"character":4}],"signatures":[{"id":278,"name":"new ImplementationPendingError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":49,"character":4}],"parameters":[{"id":279,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":280,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":263,"name":"ImplementationPendingError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":281,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":282,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":283,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":284,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":285,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":286,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":287,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":288,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[277]},{"title":"Properties","children":[281,286,287,288]},{"title":"Methods","children":[264,282,284]}],"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":32,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ImplementationPendingError","categories":[],"previousId":237,"nextId":289},{"id":289,"name":"ListItemNotFoundError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ncan\'t be executed due to no items are found in a list.\\n\\nFor example, it\'s not possible to get the first() or the last() item of a list\\nif the list is empty."}]},"children":[{"id":290,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":17,"character":11}],"signatures":[{"id":291,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":17,"character":11}],"parameters":[{"id":292,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":289,"name":"ListItemNotFoundError","package":"@serenity-js/core"}}]},{"id":303,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":32,"character":4}],"signatures":[{"id":304,"name":"new ListItemNotFoundError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":32,"character":4}],"parameters":[{"id":305,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":306,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`ListItemNotFoundError`"},{"kind":"text","text":"](/api/core/class/ListItemNotFoundError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":289,"name":"ListItemNotFoundError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":307,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":308,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":309,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":310,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":311,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":312,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":313,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":314,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[303]},{"title":"Properties","children":[307,312,313,314]},{"title":"Methods","children":[290,308,310]}],"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ListItemNotFoundError","categories":[],"previousId":263,"nextId":315},{"id":315,"name":"LogicError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ncan\'t be executed due to a logical error.\\n\\nFor example, it\'s not possible to assert on the last HTTP Response if the request\\nhasn\'t been performed yet."}]},"children":[{"id":316,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":17,"character":11}],"signatures":[{"id":317,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":17,"character":11}],"parameters":[{"id":318,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":315,"name":"LogicError","package":"@serenity-js/core"}}]},{"id":329,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":32,"character":4}],"signatures":[{"id":330,"name":"new LogicError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":32,"character":4}],"parameters":[{"id":331,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":332,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":315,"name":"LogicError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":333,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":334,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":335,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":336,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":337,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":338,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":339,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":340,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[329]},{"title":"Properties","children":[333,338,339,340]},{"title":"Methods","children":[316,334,336]}],"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/LogicError","categories":[],"previousId":289,"nextId":341},{"id":341,"name":"OperationInterruptedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that a [scheduled operation](/api/core/class/Scheduler/)\\nhas been stopped before it was completed."}]},"children":[{"id":342,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":14,"character":11}],"signatures":[{"id":343,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":14,"character":11}],"parameters":[{"id":344,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":341,"name":"OperationInterruptedError","package":"@serenity-js/core"}}]},{"id":355,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":32,"character":4}],"signatures":[{"id":356,"name":"new OperationInterruptedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":32,"character":4}],"parameters":[{"id":357,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":358,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":341,"name":"OperationInterruptedError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":359,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":360,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":361,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":362,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":363,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":364,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":365,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":366,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[355]},{"title":"Properties","children":[359,364,365,366]},{"title":"Methods","children":[342,360,362]}],"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/OperationInterruptedError","categories":[],"previousId":315,"nextId":367},{"id":367,"name":"RuntimeError","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Base class for custom errors that may occur during execution of a test scenario.\\n\\n## Defining a custom error\\n\\n"},{"kind":"code","text":"```ts\\nimport { RuntimeError } from \'@serenity-js/core\'\\n\\nexport class CustomError extends RuntimeError {\\n  constructor(message: string, cause?: Error) {\\n      super(CustomError, message, cause);\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Wrapping a sync error\\n\\n"},{"kind":"code","text":"```ts\\ntry {\\n    operationThatMightThrowAnError();\\n} catch(error) {\\n    // catch and re-throw\\n    throw new CustomError(\'operationThatMightThrowAnError has failed\', error);\\n}\\n```"},{"kind":"text","text":"\\n\\n## Wrapping an async error\\n\\n"},{"kind":"code","text":"```ts\\noperationThatMightRejectAPromise()\\n  .catch(error => {\\n    // catch and re-throw\\n    throw new CustomError(\'operationThatMightThrowAnError has failed\', error)\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Registering a custom error with ["},{"kind":"code","text":"`ErrorSerialiser`"},{"kind":"text","text":"](/api/core/class/ErrorSerialiser/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { RuntimeError } from \'@serenity-js/core\'\\nimport { ErrorSerialiser } from \'@serenity-js/core/lib/io\'\\n\\nexport class CustomError extends RuntimeError {\\n\\n   static fromJSON(serialised: JSONObject): CustomError {\\n        const error = new CustomError(\\n            serialised.message as string,\\n            ErrorSerialiser.deserialise(serialised.cause as string | undefined),\\n        );\\n\\n        error.stack = serialised.stack as string;\\n\\n        return error;\\n    }\\n\\n  constructor(message: string, cause?: Error) {\\n      super(CustomError, message, cause);\\n  }\\n}\\n\\nErrorSerialiser.registerErrorTypes(CustomError)\\n```"}]},"children":[{"id":386,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.cause","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/cause"}},{"id":387,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":388,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":389,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":390,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"}}]},{"id":391,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.name","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/name"}},{"id":392,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.message","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/message"}},{"id":393,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.stack","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/stack"}}],"groups":[{"title":"Properties","children":[386,391,392,393]},{"title":"Methods","children":[387,389]}],"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":68,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}],"extendedBy":[{"type":"reference","target":211,"name":"AssertionError"},{"type":"reference","target":237,"name":"ConfigurationError"},{"type":"reference","target":263,"name":"ImplementationPendingError"},{"type":"reference","target":289,"name":"ListItemNotFoundError"},{"type":"reference","target":315,"name":"LogicError"},{"type":"reference","target":341,"name":"OperationInterruptedError"},{"type":"reference","target":394,"name":"TestCompromisedError"},{"type":"reference","target":420,"name":"TimeoutExpiredError"},{"type":"reference","target":446,"name":"UnknownError"}],"permalink":"/api/core/class/RuntimeError","categories":[],"previousId":341,"nextId":394},{"id":394,"name":"TestCompromisedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that the test can\'t be performed due to an issue with a downstream dependency.\\nFor example, it makes no sense to run a full-stack integration test if we already know that\\nthe database server is down.\\n\\n## Throwing a TestCompromisedError from a custom Interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Interaction } from \'@serenity-js/core\';\\n\\nconst SetUpTestDatabase = () =>\\n  Interaction.where(`#actor sets up a test database`, actor => {\\n    return SomeCustomDatabaseSpecificAbility.as(actor).setUpTestDatabase().catch(error => {\\n      throw new TestCompromisedError(\'Could not set up the test database\', error)\\n    })\\n})\\n```"}]},"children":[{"id":395,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":28,"character":11}],"signatures":[{"id":396,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":28,"character":11}],"parameters":[{"id":397,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":394,"name":"TestCompromisedError","package":"@serenity-js/core"}}]},{"id":412,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":413,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":414,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":415,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":416,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":408,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":43,"character":4}],"signatures":[{"id":409,"name":"new TestCompromisedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":43,"character":4}],"parameters":[{"id":410,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":411,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":394,"name":"TestCompromisedError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":417,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":418,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":419,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[408]},{"title":"Properties","children":[412,417,418,419]},{"title":"Methods","children":[395,413,415]}],"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":26,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/TestCompromisedError","categories":[],"previousId":367,"nextId":420},{"id":420,"name":"TimeoutExpiredError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ntook longer to execute than the expected timeout."}]},"children":[{"id":421,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":14,"character":11}],"signatures":[{"id":422,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":14,"character":11}],"parameters":[{"id":423,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":420,"name":"TimeoutExpiredError","package":"@serenity-js/core"}}]},{"id":438,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":439,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":440,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":441,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":442,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":434,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":32,"character":4}],"signatures":[{"id":435,"name":"new TimeoutExpiredError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":32,"character":4}],"parameters":[{"id":436,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":437,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":420,"name":"TimeoutExpiredError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":443,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":444,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":445,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[434]},{"title":"Properties","children":[438,443,444,445]},{"title":"Methods","children":[421,439,441]}],"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/TimeoutExpiredError","categories":[],"previousId":394,"nextId":446},{"id":446,"name":"UnknownError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an unknown error has occurred."}]},"children":[{"id":447,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":13,"character":11}],"signatures":[{"id":448,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":13,"character":11}],"parameters":[{"id":449,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":446,"name":"UnknownError","package":"@serenity-js/core"}}]},{"id":464,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":465,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":466,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":467,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":468,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":460,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":28,"character":4}],"signatures":[{"id":461,"name":"new UnknownError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":28,"character":4}],"parameters":[{"id":462,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":463,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":446,"name":"UnknownError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":469,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":470,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":471,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[460]},{"title":"Properties","children":[464,469,470,471]},{"title":"Methods","children":[447,465,467]}],"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/UnknownError","categories":[],"previousId":420,"nextId":1150},{"id":507,"name":"serenity","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"comment":{"summary":[{"kind":"text","text":"Serenity object is the root object of the Serenity/JS framework."}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":14,"character":13}],"type":{"type":"reference","target":1951,"name":"Serenity","package":"@serenity-js/core"},"defaultValue":"...","permalink":"/api/core#serenity","categories":[],"previousId":85,"nextId":496},{"id":496,"name":"configure","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":32,"character":16}],"signatures":[{"id":497,"name":"configure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures Serenity/JS. Every call to this function\\nreplaces the previous configuration provided,\\nso this function should be called exactly once\\nin your test suite.\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure).\\n\\n:::tip configure vs engage\\n * If you want to retain the configuration but reset the [cast of actors](/api/core/class/Cast/), use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead.\\n:::"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":32,"character":16}],"parameters":[{"id":498,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/core/function/configure","categories":[],"previousId":507,"nextId":499},{"id":499,"name":"engage","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":145,"character":16}],"signatures":[{"id":500,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Re-configures Serenity/JS with a new [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/)\\nyou want to use in any subsequent calls to ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.engage`"},{"kind":"text","text":"](/api/core/class/Serenity/#engage),\\nwhich provides an alternative to calling ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) directly in your tests\\nand is typically invoked in a \\"before all\\" or \\"before each\\" hook of your test runner of choice.\\n\\n:::tip configure vs engage\\nCalling ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) replaces the currently configured [cast of actors](/api/core/class/Cast/),\\nbut doesn\'t affect any other configuration.\\nIf you want to reset the Serenity/JS configuration completely, use ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) instead.\\n:::\\n\\nIf your implementation of the [cast](/api/core/class/Cast/) interface is stateless,\\nyou can invoke this function just once before your entire test suite is executed, see\\n- ["},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\\n- ["},{"kind":"code","text":"`before`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`BeforeAll`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\\n\\nHowever, if your [cast](/api/core/class/Cast/) holds state that you want to reset before each scenario,\\nit\'s better to invoke "},{"kind":"code","text":"`engage`"},{"kind":"text","text":" before each test using:\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`Before`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\\n\\n## Engaging a cast of actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast } from \'@serenity-js/core\';\\n\\nclass Actors implements Cast {\\n  prepare(actor: Actor) {\\n    return actor.whoCan(\\n      // ... abilities you\'d like the Actor to have\\n    );\\n  }\\n}\\n\\nengage(new Actors());\\n```"},{"kind":"text","text":"\\n\\n### Using with Mocha test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Jasmine test runner\\n\\n"},{"kind":"code","text":"```typescript\\nimport \'jasmine\'\\n\\ndescribe(\'My feature\', () => {\\n  beforeEach(() => engage(new Actors()))\\n\\n\\n})\\n```"},{"kind":"text","text":"\\n\\n### Using with Cucumber.js test runner\\n\\nEngage "},{"kind":"code","text":"`Actors`"},{"kind":"text","text":" [before](https://github.com/cucumber/cucumber-js/blob/main/docs/support_files/hooks.md)\\neach test scenario:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\nEngage "},{"kind":"code","text":"`Actors`"},{"kind":"text","text":" before scenarios with [specific tags](https://github.com/cucumber/cucumber-js/blob/main/docs/support_files/hooks.md#tagged-hooks):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(\'@web\', () => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Playwright Test runner\\n\\n[Serenity/JS Playwright Test module](/api/playwright-test) will configure the cast on your behalf,\\nso you don\'t need to call ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\n\\ndescribe(\'My feature\', () => {\\n\\n  this.use({\\n    actors: new Actors()\\n  })\\n\\n  // test scenarios\\n\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Serenity.engage`"},{"kind":"text","text":"](/api/core/class/Serenity/#engage)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":145,"character":16}],"parameters":[{"id":501,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2000,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/core/function/engage","categories":[],"previousId":496,"nextId":2000},{"id":502,"name":"actorCalled","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":232,"character":16}],"signatures":[{"id":503,"name":"actorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates or retrieves an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\ncalled "},{"kind":"code","text":"`name`"},{"kind":"text","text":" if one has already been instantiated.\\n\\nThis method is an alias for ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled).\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, async (name: string) => {\\n  await actorCalled(name).attemptsTo(\\n    // ... activities\\n  )\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Jasmine\\n\\n"},{"kind":"code","text":"```typescript\\nimport \'jasmine\';\\nimport { actorCalled } from \'@serenity-js/core\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async () {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Mocha\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it } from \'mocha\';\\nimport { actorCalled } from \'@serenity-js/core\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async () => {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Playwright Test\\n\\nWhen using [Serenity/JS with Playwright Test](/api/playwright-test/), you should use either\\nthe default ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) fixture\\nor the injected ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) function\\ninstead of importing it from "},{"kind":"code","text":"`@serenity-js/core`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it } from \'@serenity-js/playwright-test\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async ({ actorCalled }) => {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":232,"character":16}],"parameters":[{"id":504,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the actor to instantiate or retrieve"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"permalink":"/api/core/function/actorCalled","categories":[],"previousId":1080,"nextId":505},{"id":505,"name":"actorInTheSpotlight","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":270,"character":16}],"signatures":[{"id":506,"name":"actorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves an actor who was last instantiated or retrieved\\nusing ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nThis function is particularly useful when automating Cucumber scenarios.\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.theActorInTheSpotlight`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorInTheSpotlight).\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given, When } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n\\nWhen(/(?:he|she|they) browse their recent orders/, () =>\\n  actorInTheSpotlight().attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":270,"character":16}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"permalink":"/api/core/function/actorInTheSpotlight","categories":[],"previousId":502,"nextId":1637},{"id":75,"name":"format","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":16}],"signatures":[{"id":76,"name":"format","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`format`"},{"kind":"text","text":" is a factory function returning\\na [tag function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals)\\nthat produces a human-readable "},{"kind":"code","text":"`string`"},{"kind":"text","text":" description of a template containing\\none or more [answerables](/api/core/#Answerable).\\n\\nTypically, you\'ll want to use "},{"kind":"code","text":"`d`"},{"kind":"text","text":" and "},{"kind":"code","text":"`f`"},{"kind":"text","text":" shorthands instead, or the modern alternative - "},{"kind":"code","text":"`the`"},{"kind":"text","text":":\\n- the ["},{"kind":"code","text":"`d`"},{"kind":"text","text":"](/api/core/function/d/) function works best for generating a **static description** of a parameterised ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- the ["},{"kind":"code","text":"`f`"},{"kind":"text","text":"](/api/core/function/f/) function is better suited for debugging\\n- the ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/f/) function works best for generating a **dynamic description** of a parameterised ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n\\n:::tip Use "},{"kind":"code","text":"`the`"},{"kind":"text","text":" instead of "},{"kind":"code","text":"`format`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"`format`"},{"kind":"text","text":", "},{"kind":"code","text":"`d`"},{"kind":"text","text":" and "},{"kind":"code","text":"`f`"},{"kind":"text","text":" are the original Serenity/JS string formatting functions,\\nstill present in the framework for backwards compatibility purposes.\\n\\nTo generate a dynamic description of a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":",\\nuse ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/the/) function instead.\\n:::\\n\\n## Using "},{"kind":"code","text":"`format`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { format, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nformat({ markQuestions: true }) `actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n\\nformat({ markQuestions: false }) `actor answers ${ question() }`\\n // returns: actor answers some question\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`d`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { d, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nd`actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`f`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { f, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nf`actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n\\nformat({ markQuestions: false }) `actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n```"}]},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":16}],"parameters":[{"id":77,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`markQuestions`"},{"kind":"text","text":": boolean - if set to true, descriptions of questions passed in as arguments will be surrounded with double angled brackets, i.e. "},{"kind":"code","text":"`<<description>>`"}]},"type":{"type":"reflection","declaration":{"id":78,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":79,"name":"markQuestions","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":33}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[79]}],"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":31}]}}}],"type":{"type":"reflection","declaration":{"id":80,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":60}],"signatures":[{"id":81,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":82,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":83,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"permalink":"/api/core/function/format","categories":[],"previousId":926,"nextId":71},{"id":71,"name":"f","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":82,"character":13}],"signatures":[{"id":72,"name":"f","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":82,"character":13}],"parameters":[{"id":73,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":74,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/core/function/f","categories":[],"previousId":75,"nextId":67},{"id":67,"name":"d","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":85,"character":13}],"signatures":[{"id":68,"name":"d","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":85,"character":13}],"parameters":[{"id":69,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":70,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/core/function/d","categories":[],"previousId":71,"nextId":706},{"id":628,"name":"Activity","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Activities** represents [tasks](/api/core/class/Task/) and [interactions](/api/core/class/Interaction/) to be performed by an [actor](/api/core/class/Actor/).\\n\\nLearn more about:\\n- [Performing activities at multiple levels](/handbook/design/screenplay-pattern#performing-activities-at-multiple-levels)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- [Command design pattern on Wikipedia](https://en.wikipedia.org/wiki/Command_pattern)"}]},"children":[{"id":633,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":634,"name":"new Activity","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":635,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":636,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Describable.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Describable.constructor"}},{"id":638,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":639,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}}]},{"id":640,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":53,"character":13}],"signatures":[{"id":641,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":53,"character":13}],"parameters":[{"id":642,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"type":{"type":"union","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":623,"name":"PerformsActivities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":643,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":644,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":645,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":646,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":647,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[647]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1136,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1135,"name":"Describable.describedBy"}},{"id":653,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":654,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1146,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1145,"name":"Describable.toString"}}],"groups":[{"title":"Constructors","children":[633]},{"title":"Methods","children":[638,640,643,653]}],"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":22,"character":22}],"extendedTypes":[{"type":"reference","target":1131,"name":"Describable","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":811,"name":"Interaction"},{"type":"reference","target":1640,"name":"Task"}],"permalink":"/api/core/class/Activity","categories":[],"previousId":1616,"nextId":655},{"id":655,"name":"Actor","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**Actors** represent **people** and **external systems** interacting with the system under test.\\nTheir role is to perform [activities](/api/core/class/Activity/) that demonstrate how to accomplish a given goal.\\n\\nActors are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [abilities](/api/core/class/Ability/), [interactions](/api/core/class/Interaction/), [tasks](/api/core/class/Task/), and [questions](/api/core/class/Question/).\\nActors are also the first thing you see in a typical Serenity/JS test scenario.\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n\\n## Representing people and systems as actors\\n\\nTo use a Serenity/JS ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/), all you need is to say their name:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\')\\n// returns: Actor\\n```"},{"kind":"text","text":"\\n\\nSerenity/JS actors perform within the scope of a test scenario, so the first time you invoke ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/),\\nSerenity/JS instantiates a new actor from the default [cast](/api/core/class/Cast/) of actors (or any custom cast you might have [configured](/api/core/function/configure/)).\\nAny subsequent invocations of this function within the scope of the same test scenario retrieve the already instantiated actor, identified by their name.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\')    // instantiates Alice\\nactorCalled(\'Bob\')      // instantiates Bob\\nactorCalled(\'Alice\')    // retrieves Alice, since she\'s already been instantiated\\n```"},{"kind":"text","text":"\\n\\nSerenity/JS scenarios can involve as many or as few actors as you need to model the given business workflow.\\nFor example, you might want to use **multiple actors** in test scenarios that model how **different people** perform different parts of a larger business process, such as reviewing and approving a loan application.\\nIt is also quite common to introduce **supporting actors** to perform **administrative tasks**, like setting up test data and environment, or **audit tasks**, like checking the logs or messages emitted to a message queue\\nby the system under test.\\n\\n:::info The Stan Lee naming convention\\nActor names can be much more than just simple identifiers like "},{"kind":"code","text":"`Alice`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Bob`"},{"kind":"text","text":". While you can give your actors any names you like, a good convention to follow is to give them\\nnames indicating the [personae](https://articles.uie.com/goodwin_interview/) they represent or the role they play in the system.\\n\\nJust like the characters in [Stan Lee](https://en.wikipedia.org/wiki/Stan_Lee) graphic novels,\\nactors in Serenity/JS test scenarios are often given alliterate names as a mnemonic device.\\nNames like \\"Adam the Admin\\", \\"Edna the Editor\\", \\"Trevor the Traveller\\", are far more memorable than a generic \\"UI user\\" or \\"API user\\".\\nThey\'re also much easier for people to associate with the context, constraints, and affordances of the given actor.\\n:::"}]},"children":[{"id":656,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":85,"character":4}],"signatures":[{"id":657,"name":"new Actor","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":85,"character":4}],"parameters":[{"id":658,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":659,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}},{"id":660,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}},"defaultValue":"[]"}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":662,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":86,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":664,"name":"abilityTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":108,"character":4}],"signatures":[{"id":665,"name":"abilityTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves actor\'s ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) of "},{"kind":"code","text":"`abilityType`"},{"kind":"text","text":", or one that extends "},{"kind":"code","text":"`abilityType`"},{"kind":"text","text":".\\n\\nPlease note that this method performs an ["},{"kind":"code","text":"`instanceof`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof) check against abilities\\ngiven to this actor via ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan).\\n\\nPlease also note that ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) performs the same check when abilities are assigned to the actor\\nto ensure the actor has at most one instance of a given ability type."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":108,"character":4}],"typeParameter":[{"id":666,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":667,"name":"abilityType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":666,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}}],"type":{"type":"reference","target":666,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"implementationOf":{"type":"reference","target":620,"name":"UsesAbilities.abilityTo"}}],"implementationOf":{"type":"reference","target":619,"name":"UsesAbilities.abilityTo"}},{"id":668,"name":"attemptsTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempt to perform a sequence of [activities](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":129,"character":4}],"signatures":[{"id":669,"name":"attemptsTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the actor to attempt to perform a number of [activities](/api/core/class/Activity/),\\nso either [tasks](/api/core/class/Task/) or [interactions](/api/core/class/Interaction/)),\\none by one."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":129,"character":4}],"parameters":[{"id":670,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":624,"name":"PerformsActivities.attemptsTo"}}],"implementationOf":{"type":"reference","target":624,"name":"PerformsActivities.attemptsTo"}},{"id":671,"name":"whoCan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":150,"character":4}],"signatures":[{"id":672,"name":"whoCan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Gives this Actor a list of [abilities](/api/core/class/Ability/) they can use\\nto interact with the system under test or the test environment."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The actor with newly gained abilities"}]},{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/)\\n Throws a ConfigurationError if the actor already has an ability of this type."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":150,"character":4}],"parameters":[{"id":673,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A vararg list of abilities to give the actor"}]},"type":{"type":"array","elementType":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":568,"name":"CanHaveAbilities.whoCan"}}],"implementationOf":{"type":"reference","target":567,"name":"CanHaveAbilities.whoCan"}},{"id":674,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":163,"character":4}],"signatures":[{"id":675,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The answer to the Answerable"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":163,"character":4}],"typeParameter":[{"id":676,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":677,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) to answer (resolve the value of)."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":676,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":676,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":1069,"name":"AnswersQuestions.answer"}}],"implementationOf":{"type":"reference","target":1068,"name":"AnswersQuestions.answer"}},{"id":678,"name":"collect","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":170,"character":4}],"signatures":[{"id":679,"name":"collect","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) collect an artifact so that it can be included in the test report.\\n\\n#### Implementing a custom interaction to attach artifacts\\n\\n"},{"kind":"code","text":"```ts\\nimport * as fs from \'node:fs\'\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\nimport { Name, TextData } from \'@serenity-js/core/lib/model\'\\n\\nexport class Attach {\\n\\n  static contentsOf = (pathToFile: Path): Interaction =>\\n    Interaction.where(`#actor attaches contents of ${ pathToFile.basename() }`, async actor => {\\n      const data = fs.readFileSync(pathToFile.value).toString(\'utf-8\');\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        new Name(pathToFile.basename()),\\n      )\\n    })\\n\\n  static textData = (contents: Answerable<string>, name?: string): Interaction =>\\n    Interaction.where(the`#actor attaches text data`, async actor => {\\n      const data = await actor.answer(contents);\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        name && new Name(name),\\n      )\\n    })\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Attaching plain text\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.textData(\'some text\', \'some name\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Attaching contents of a text file\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.contentsOf(Path.from(__dirname, \'output/server.log\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":170,"character":4}],"parameters":[{"id":680,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The artifact to be collected, such as "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data."}]},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":681,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the artifact to make it easy to recognise in the test report"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Name","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":712,"name":"CollectsArtifacts.collect"}}],"implementationOf":{"type":"reference","target":711,"name":"CollectsArtifacts.collect"}},{"id":682,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":183,"character":4}],"signatures":[{"id":683,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":183,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1948,"name":"TellsTime.currentTime"}}],"implementationOf":{"type":"reference","target":1947,"name":"TellsTime.currentTime"}},{"id":684,"name":"dismiss","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":191,"character":4}],"signatures":[{"id":685,"name":"dismiss","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the actor to invoke ["},{"kind":"code","text":"`Discardable.discard`"},{"kind":"text","text":"](/api/core/interface/Discardable/#discard) method on any\\n[discardable](/api/core/interface/Discardable/) [ability](/api/core/class/Ability/) it\'s been configured with."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":191,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":686,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":205,"character":4}],"signatures":[{"id":687,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable, string representation of this actor and their abilities.\\n\\n**PRO TIP:** To get the name of the actor, use ["},{"kind":"code","text":"`Actor.name`"},{"kind":"text","text":"](/api/core/class/Actor/#name)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":205,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":688,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":217,"character":4}],"signatures":[{"id":689,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the actor and its current state.\\n\\nThe purpose of this method is to enable reporting the state of the actor in a human-readable format,\\nrather than to serialise and deserialise the actor itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":217,"character":4}],"type":{"type":"reference","target":1637,"name":"SerialisedActor","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[656]},{"title":"Properties","children":[662]},{"title":"Methods","children":[664,668,671,674,678,682,684,686,688]}],"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":76,"character":13}],"implementedTypes":[{"type":"reference","target":623,"name":"PerformsActivities","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":566,"typeArguments":[{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}],"name":"CanHaveAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1946,"name":"TellsTime","package":"@serenity-js/core"}],"permalink":"/api/core/class/Actor","categories":[],"previousId":628,"nextId":811},{"id":706,"name":"Answerable","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A union type that provides a convenient way to represent any value\\nthat can be resolved by ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Answerable.ts","line":9,"character":12}],"typeParameters":[{"id":707,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":707,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":707,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":707,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":707,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}]},"permalink":"/api/core#Answerable","categories":[],"previousId":67,"nextId":708},{"id":708,"name":"Answered","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes the type of answer a given ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) would\\nresolve to when given to ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer).\\n\\n"},{"kind":"code","text":"```ts\\nAnswered<Answerable<T>> === T\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Answered.ts","line":13,"character":12}],"typeParameters":[{"id":709,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":709,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":709,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":709,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"},"falseType":{"type":"reference","target":709,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}},"permalink":"/api/core#Answered","categories":[],"previousId":706,"nextId":954},{"id":811,"name":"Interaction","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Interactions** are low-level [activities](/api/core/class/Activity/) that encapsulate\\na handful of instructions for an [actor](/api/core/class/Actor/) on how to use their [abilities](/api/core/class/Ability/)\\nto perform an individual interaction with the given interface of the system under test.\\n\\n:::tip Tasks or interactions?\\nBecause of their low-level nature, interactions are named using the vocabulary of the [solution domain](https://blog.mattwynne.net/2013/01/17/the-problem-with-solutions/),\\nand represent an individual interaction with the given interface, e.g. ["},{"kind":"code","text":"`Click`"},{"kind":"text","text":"](/api/web/class/Click/), ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/), or ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/).\\n\\nInteractions follow the [Single Responsibility Principle](https://en.wikipedia.org/wiki/Single_responsibility_principle) which means that they do _one thing and one thing only_.\\nIf you\'re considering implementing an \\"interaction\\" that performs more than one logical activity, e.g. checks if the button is visible and then clicks on it if is,\\nconsider using separate interactions for separate responsibilities and then composing them using a [task](/api/core/class/Task/).\\n:::\\n\\nInteractions are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/), [questions](/api/core/class/Question/), and [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- [Abilities](/api/core/class/Ability/)\\n- [Activities](/api/core/class/Activity/)\\n\\n## Writing a custom interaction\\n\\n[Serenity/JS modules](/handbook/getting-started/architecture) ship with dozens of interactions to help you compose your test scenarios.\\nHowever, if you need to interact with a non-standard interface, or want to create a flavour of a given interaction that behaves slightly differently than the built-in version,\\nyou can easily create your own implementations using the ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) factory method.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Interaction, the } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\n\\nexport const ClearLocalStorage = () =>\\n  Interaction.where(the`#actor clears local storage`, async (actor: Actor) => {\\n    // Interaction to ClearLocalStorage directly uses Actor\'s ability to BrowseTheWeb\\n    const page: Page = await BrowseTheWeb.as(actor).currentPage()\\n    await page.executeScript(() => window.localStorage.clear())\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Using a custom interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'In\xeas\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    ClearLocalStorage(), // reported as \\"In\xeas clears local storage\\"\\n  )\\n```"}]},"children":[{"id":812,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":79,"character":11}],"signatures":[{"id":813,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":79,"character":11}],"parameters":[{"id":814,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Description to be used when reporting this interaction, for example "},{"kind":"code","text":"`#actor clears local storage`"},{"kind":"text","text":".\\n Note that "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" will be replaced with the name of the actor performing this interaction."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":815,"name":"interaction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":816,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":81,"character":21}],"signatures":[{"id":817,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":81,"character":21}],"parameters":[{"id":818,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":822,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":823,"name":"new Interaction","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":824,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":825,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":634,"name":"Activity.constructor"}}],"inheritedFrom":{"type":"reference","target":633,"name":"Activity.constructor"}},{"id":830,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":831,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":639,"name":"Activity.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":638,"name":"Activity.instantiationLocation"}},{"id":826,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":97,"character":13}],"signatures":[{"id":827,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":97,"character":13}],"parameters":[{"id":828,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":641,"name":"Activity.performAs"}}],"overwrites":{"type":"reference","target":640,"name":"Activity.performAs"}},{"id":832,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":833,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":834,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":835,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":836,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[836]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":644,"name":"Activity.describedBy"}}],"inheritedFrom":{"type":"reference","target":643,"name":"Activity.describedBy"}},{"id":842,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":843,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":654,"name":"Activity.toString"}}],"inheritedFrom":{"type":"reference","target":653,"name":"Activity.toString"}}],"groups":[{"title":"Constructors","children":[822]},{"title":"Methods","children":[812,830,826,832,842]}],"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":70,"character":22}],"extendedTypes":[{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":715,"name":"Debug"},{"type":"reference","target":775,"name":"Log"},{"type":"reference","target":1721,"name":"WaitUntil"}],"permalink":"/api/core/class/Interaction","categories":[],"previousId":655,"nextId":957},{"id":954,"name":"Optional","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`Optional`"},{"kind":"text","text":" is a container object, which holds a value that may or may not be \\"present\\",\\n\\nThe meaning of being \\"present\\" depends on the context and typically means a value that:\\n- is other than "},{"kind":"code","text":"`null`"},{"kind":"text","text":" or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":"\\n- is retrievable, so retrieving it doesn\'t throw any errors\\n\\nAdditionally, "},{"kind":"code","text":"`Optional`"},{"kind":"text","text":" can also have a context-specific meaning. For example, "},{"kind":"code","text":"`Optional#isPresent()`"},{"kind":"text","text":":\\n- in the context of a "},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":" means that the element exists in the DOM.\\n- in the context of a "},{"kind":"code","text":"`ModalWindow`"},{"kind":"text","text":" means that the modal window is open.\\n- in the case of a REST API response, "},{"kind":"code","text":"`LastResponse.body().books[0].author.name.isPresent()`"},{"kind":"text","text":"\\n  will inform us if a given entry exists (so "},{"kind":"code","text":"`books[0].author.name`"},{"kind":"text","text":"),\\n  and if all the links of the property chain leading to the entry of interest exist too\\n  (so "},{"kind":"code","text":"`books`"},{"kind":"text","text":" is present, and so is "},{"kind":"code","text":"`books[0]`"},{"kind":"text","text":", "},{"kind":"code","text":"`books[0].author`"},{"kind":"text","text":", "},{"kind":"code","text":"`books[0].author.name`"},{"kind":"text","text":")."}]},"children":[{"id":955,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":25,"character":4}],"signatures":[{"id":956,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the optional value\\nis present, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":25,"character":4}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Answerable","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[955]}],"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":20,"character":17}],"permalink":"/api/core/interface/Optional","categories":[],"previousId":708,"nextId":1047},{"id":957,"name":"Question","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Questions** describe how [actors](/api/core/class/Actor/) should query the system under test or the test environment to retrieve some information.\\n\\nQuestions are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/),\\n[interactions](/api/core/class/Interaction/),\\nand [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n## Implementing a basic custom Question\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n const LastItemOf = <T>(list: T[]): Question<T> =>\\n   Question.about(\'last item from the list\', (actor: AnswersQuestions & UsesAbilities) => {\\n     return list[list.length - 1]\\n   });\\n\\n await actorCalled(\'Quentin\').attemptsTo(\\n   Ensure.that(LastItemFrom([1,2,3]), equals(3)),\\n )\\n```"},{"kind":"text","text":"\\n\\n## Implementing a Question that uses an Ability\\n\\nJust like the [interactions](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\nalso can use [actor\'s](/api/core/class/Actor/) [abilities](/api/core/class/Ability/).\\n\\nHere, we use the ability to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) to retrieve a property of\\nan HTTP response.\\n\\n"},{"kind":"code","text":"```ts\\n import { AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\n import { CallAnApi } from \'@serenity-js/rest\'\\n\\n const TextOfLastResponseStatus = () =>\\n   Question.about<number>(`the text of the last response status`, actor => {\\n     return CallAnApi.as(actor).mapLastResponse(response => response.statusText)\\n   })\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\n- ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/)\\n\\n## Mapping answers to other questions\\n\\nApart from retrieving information, [questions](/api/core/class/Question/) can be used to transform information retrieved by other questions.\\n\\nHere, we use the factory method ["},{"kind":"code","text":"`Question.about`"},{"kind":"text","text":"](/api/core/class/Question/#about) to produce a question that makes the received [actor](/api/core/class/Actor/)\\nanswer ["},{"kind":"code","text":"`LastResponse.status`"},{"kind":"text","text":"](/api/rest/class/LastResponse/#status) and then compare it against some expected value.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst RequestWasSuccessful = () =>\\n  Question.about<number>(`the text of the last response status`, async actor => {\\n    const status = await actor.answer(LastResponse.status());\\n\\n    return status === 200;\\n  })\\n\\nawait actorCalled(\'Quentin\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'));\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(RequestWasSuccessful(), isTrue()),\\n  )\\n```"},{"kind":"text","text":"\\n\\nNote that the above example is for demonstration purposes only, Serenity/JS provides an easier way to\\nverify the response status of the ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/):\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Quentin\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'));\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":958,"name":"about","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":137,"character":11},{"fileName":"packages/core/src/screenplay/Question.ts","line":143,"character":11},{"fileName":"packages/core/src/screenplay/Question.ts","line":148,"character":11}],"signatures":[{"id":959,"name":"about","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Factory method that simplifies the process of defining custom questions.\\n\\n#### Defining a custom question\\n\\n"},{"kind":"code","text":"```ts\\nimport { Question } from \'@serenity-js/core\'\\n\\nconst EnvVariable = (name: string) =>\\n  Question.about(`the ${ name } env variable`, actor => process.env[name])\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":137,"character":11}],"typeParameter":[{"id":960,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":961,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":962,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":963,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":964,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":139,"character":14}],"signatures":[{"id":965,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":139,"character":14}],"parameters":[{"id":966,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"reference","target":960,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":960,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":967,"name":"metaQuestionBody","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":968,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":140,"character":26}],"signatures":[{"id":969,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":140,"character":26}],"parameters":[{"id":970,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":961,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":960,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":960,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"}]}}]}}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":961,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":960,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}},{"id":971,"name":"about","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":143,"character":11}],"typeParameter":[{"id":972,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":973,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":974,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":975,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":145,"character":14}],"signatures":[{"id":976,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":145,"character":14}],"parameters":[{"id":977,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"reference","target":972,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":972,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":972,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":978,"name":"fromObject","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":225,"character":11}],"signatures":[{"id":979,"name":"fromObject","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that recursively resolves\\nany ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) fields of the provided object,\\nincluding ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) fields\\nof [nested objects](/api/core/#WithAnswerableProperties).\\n\\nOptionally, the method accepts "},{"kind":"code","text":"`overrides`"},{"kind":"text","text":" to be shallow-merged with the fields of the original "},{"kind":"code","text":"`source`"},{"kind":"text","text":",\\nproducing a new merged object.\\n\\nOverrides are applied from left to right, with subsequent objects overwriting property assignments of the previous ones.\\n\\n#### Resolving an object recursively using "},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Send, PostRequest } from \'@serenity-js/rest\'\\nimport { By, Text, PageElement } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Daisy\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n  .attemptsTo(\\n    Send.a(\\n      PostRequest.to(\'/products/2\')\\n        .with(\\n          Question.fromObject({\\n            name: Text.of(PageElement.located(By.css(\'.name\'))),\\n          })\\n        )\\n      )\\n  );\\n```"},{"kind":"text","text":"\\n\\n#### Merging objects using "},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Question } from \'@serenity-js/core\'\\n import { Send, PostRequest } from \'@serenity-js/rest\'\\n import { By, Text, PageElement } from \'@serenity-js/web\'\\n\\n await actorCalled(\'Daisy\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n   .attemptsTo(\\n     Send.a(\\n       PostRequest.to(\'/products/2\')\\n         .with(\\n           Question.fromObject({\\n             name: Text.of(PageElement.located(By.css(\'.name\'))),\\n             quantity: undefined,\\n           }, {\\n             quantity: 2,\\n           })\\n         )\\n       )\\n   );\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- ["},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"](/api/core/#RecursivelyAnswered)\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":225,"character":11}],"typeParameter":[{"id":980,"name":"Source_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":981,"name":"source","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1949,"typeArguments":[{"type":"reference","target":980,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":982,"name":"overrides","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":1949,"typeArguments":[{"type":"reference","target":980,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1635,"typeArguments":[{"type":"reference","target":980,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RecursivelyAnswered","package":"@serenity-js/core"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":983,"name":"fromArray","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":250,"character":11}],"signatures":[{"id":984,"name":"fromArray","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves\\nany ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) elements of the provided array."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":250,"character":11}],"typeParameter":[{"id":985,"name":"Source_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":986,"name":"source","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":985,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}},{"id":987,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1148,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":985,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":988,"name":"isAQuestion","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":276,"character":11}],"signatures":[{"id":989,"name":"isAQuestion","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if the value is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":276,"character":11}],"typeParameter":[{"id":990,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":991,"name":"maybeQuestion","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to check"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeQuestion","asserts":false,"targetType":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":990,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"}}}]},{"id":992,"name":"isAMetaQuestion","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":287,"character":11}],"signatures":[{"id":993,"name":"isAMetaQuestion","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if the value is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":287,"character":11}],"typeParameter":[{"id":994,"name":"CT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":995,"name":"RQT","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":957,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"parameters":[{"id":996,"name":"maybeMetaQuestion","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to check"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeMetaQuestion","asserts":false,"targetType":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":994,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":995,"name":"RQT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaQuestion","package":"@serenity-js/core"}}}]},{"id":997,"name":"formattedValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":314,"character":11}],"signatures":[{"id":998,"name":"formattedValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be composed with any ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nto produce a single-line description of its value.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst accountDetails = () =>\\n  Question.about(\'account details\', actor => ({ name: \'Alice\', age: 28 }))\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Ensure.that(\\n    Question.formattedValue().of(accountDetails()),\\n    equals(\'{ name: \\"Alice\\", age: 28 }\'),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":314,"character":11}],"parameters":[{"id":999,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1148,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1000,"name":"value","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":345,"character":11}],"signatures":[{"id":1001,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be composed with any ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nto return its value when the answerable is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/),\\nor the answerable itself otherwise.\\n\\nThe description of the resulting question is produced by calling ["},{"kind":"code","text":"`Question.describedBy`"},{"kind":"text","text":"](/api/core/class/Question/#describedBy) on the\\nprovided answerable.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst accountDetails = () =>\\n  Question.about(\'account details\', actor => ({ name: \'Alice\', age: 28 }))\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Ensure.that(\\n    Question.description().of(accountDetails()),\\n    equals(\'account details\'),\\n  ),\\n  Ensure.that(\\n    Question.value().of(accountDetails()),\\n    equals({ name: \'Alice\', age: 28 }),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":345,"character":11}],"typeParameter":[{"id":1002,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1002,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1002,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1021,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":483,"character":13}],"signatures":[{"id":1022,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":483,"character":13}],"parameters":[{"id":1023,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1046,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}}]},{"id":1024,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":1025,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":1026,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":1046,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"}}]},{"id":1027,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":1028,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":1029,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1030,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1031,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":1032,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":1033,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":1046,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}}],"type":{"type":"union","types":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1034,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1035,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1036,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1037,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1038,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1038]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1136,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1135,"name":"Describable.describedBy"}},{"id":1044,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1045,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1146,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1145,"name":"Describable.toString"}}],"groups":[{"title":"Methods","children":[958,978,983,988,992,997,1000,1021,1024,1027,1034,1044]}],"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":119,"character":22}],"typeParameters":[{"id":1046,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1131,"name":"Describable","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1306,"name":"List"}],"permalink":"/api/core/class/Question","categories":[],"previousId":811,"nextId":1640},{"id":1047,"name":"QuestionAdapterFieldDecorator","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an object recursively wrapped in ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) proxies, so that:\\n- both methods and fields of the wrapped object can be used as [questions](/api/core/class/Question/) or [interactions](/api/core/class/Interaction/)\\n- method parameters of the wrapped object will accept ["},{"kind":"code","text":"`Answerable<T>`"},{"kind":"text","text":"](/api/core/#Answerable)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":537,"character":12}],"typeParameters":[{"id":1058,"name":"Original_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"mapped","parameter":"Field","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":1058,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","target":1058,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionStatement","package":"@serenity-js/core"}}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}},"templateType":{"type":"conditional","checkType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1058,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}},"extendsType":{"type":"reflection","declaration":{"id":1048,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":540,"character":37}],"signatures":[{"id":1049,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1050,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"inferred","name":"OriginalParameters"}}],"type":{"type":"inferred","name":"OriginalMethodResult"}}]}},"trueType":{"type":"conditional","checkType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":"replace"},{"type":"literal","value":"replaceAll"}]},"trueType":{"type":"reflection","declaration":{"id":1051,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":543,"character":18}],"signatures":[{"id":1052,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1053,"name":"searchValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1054,"name":"replaceValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]}},"falseType":{"type":"reflection","declaration":{"id":1055,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":544,"character":18}],"signatures":[{"id":1056,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1057,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"mapped","parameter":"P","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"OriginalParameters","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"P","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"OriginalParameters","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"OriginalMethodResult","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]}}},"falseType":{"type":"conditional","checkType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1058,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}},"extendsType":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"},{"type":"intrinsic","name":"object"}]},"trueType":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1058,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"falseType":{"type":"intrinsic","name":"any"}}}},"permalink":"/api/core#QuestionAdapterFieldDecorator","categories":[],"previousId":954,"nextId":1059},{"id":1059,"name":"QuestionAdapter","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A union type representing a proxy object returned by ["},{"kind":"code","text":"`Question.about`"},{"kind":"text","text":"](/api/core/class/Question/#about).\\n\\n["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) proxies the methods and fields of the wrapped object recursively,\\nallowing them to be used as either a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) or an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":561,"character":12}],"typeParameters":[{"id":1063,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"intersection","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1063,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1060,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1061,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":8}],"signatures":[{"id":1062,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":8}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[1061]}],"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":6}]}},{"type":"reference","target":1047,"typeArguments":[{"type":"reference","target":1063,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapterFieldDecorator","package":"@serenity-js/core"}]},"permalink":"/api/core#QuestionAdapter","categories":[],"previousId":1047,"nextId":1064},{"id":1064,"name":"MetaQuestionAdapter","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An extension of ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter), that in addition to proxying methods and fields\\nof the wrapped object can also act as a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":573,"character":12}],"typeParameters":[{"id":1065,"name":"Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1066,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"intersection","types":[{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1066,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1065,"name":"Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1066,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]},"permalink":"/api/core#MetaQuestionAdapter","categories":[],"previousId":1059,"nextId":1635},{"id":1635,"name":"RecursivelyAnswered","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a recursively resolved plain JavaScript object with [answerable properties](/api/core/#WithAnswerableProperties).\\n\\nTypically, used in conjunction with ["},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"](/api/core/class/Question/#fromObject).\\n\\n## Using "},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  actorCalled, notes, q, Question, QuestionAdapter, WithAnswerableProperties\\n} from \'@serenity-js/core\';\\n\\ninterface RequestConfiguration {\\n  headers: Record<string, string>;\\n}\\n\\nconst requestConfiguration: WithAnswerableProperties<RequestConfiguration> = {\\n  headers: {\\n    Authorization: q`Bearer ${ notes().get(\'authDetails\').token }`\\n  }\\n}\\n\\nconst question: QuestionAdapter<RequestConfiguration> =\\n  Question.fromObject<RequestConfiguration>(requestConfiguration)\\n\\nconst answer = await actorCalled(\'Annie\').answer(question);\\n\\nconst a1: RequestConfiguration = answer;\\nconst a2: RecursivelyAnswered<WithAnswerableProperties<RequestConfiguration>> = answer;\\n\\n// RequestConfiguration === RecursivelyAnswered<WithAnswerableProperties<RequestConfiguration>>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/RecursivelyAnswered.ts","line":38,"character":12}],"typeParameters":[{"id":1636,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":1635,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"RecursivelyAnswered","package":"@serenity-js/core"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":1635,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"RecursivelyAnswered","package":"@serenity-js/core"}},"falseType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}}},"permalink":"/api/core#RecursivelyAnswered","categories":[],"previousId":1064,"nextId":1949},{"id":1637,"name":"SerialisedActor","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":1638,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/SerialisedActor.ts","line":7,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1639,"name":"abilities","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/SerialisedActor.ts","line":8,"character":4}],"type":{"type":"array","elementType":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"}}}],"groups":[{"title":"Properties","children":[1638,1639]}],"sources":[{"fileName":"packages/core/src/screenplay/SerialisedActor.ts","line":6,"character":17}],"permalink":"/api/core/interface/SerialisedActor","categories":[],"previousId":505,"nextId":566},{"id":1640,"name":"Task","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Tasks** model **[sequences of activities](/api/core/class/Activity/)**\\nand help you capture meaningful steps of an [actor](/api/core/class/Actor/) workflow\\nin your domain.\\n\\nTypically, tasks correspond to higher-level, business domain-specific activities\\nlike to "},{"kind":"code","text":"`BookAPlaneTicket`"},{"kind":"text","text":", "},{"kind":"code","text":"`PlaceATrade`"},{"kind":"text","text":", "},{"kind":"code","text":"`TransferFunds`"},{"kind":"text","text":", and so on.\\nHowever, higher-level tasks can and should be composed of lower-level tasks.\\nFor example, a task to "},{"kind":"code","text":"`SignUp`"},{"kind":"text","text":" could be composed of tasks to "},{"kind":"code","text":"`ProvideUsername`"},{"kind":"text","text":" and "},{"kind":"code","text":"`ProvidePassword`"},{"kind":"text","text":".\\n\\nThe lowest-level tasks in your abstraction hierarchy should be composed of [interactions](/api/core/class/Interaction/).\\nFor example, a low-level task to "},{"kind":"code","text":"`ProvideUsername`"},{"kind":"text","text":" could be composed of an interaction to [enter](/api/web/class/Enter/) the value\\ninto a form field and [press](/api/web/class/Press/) the ["},{"kind":"code","text":"`Key.Enter`"},{"kind":"text","text":"](/api/web/class/Key/#Enter).\\n\\nTasks are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/), [interactions](/api/core/class/Interaction/), and [questions](/api/core/class/Question/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- [User-Centred Design: How a 50 year old technique became the key to scalable test automation](https://janmolak.com/user-centred-design-how-a-50-year-old-technique-became-the-key-to-scalable-test-automation-66a658a36555)\\n- [Actors](/api/core/class/Actor/)\\n- [Activities](/api/core/class/Activity/)\\n- [Interactions](/api/core/class/Interaction/)\\n\\n## Defining a task\\n\\n"},{"kind":"code","text":"```ts\\nimport { Answerable, Task, the } from \'@serenity-js/core\'\\nimport { By, Click, Enter, PageElement, Press, Key } from \'@serenity-js/web\'\\n\\nconst SignIn = (username: Answerable<string>, password: Answerable<string>) =>\\n  Task.where(the`#actor signs is as ${ username }`,\\n    Enter.theValue(username).into(PageElement.located(By.id(\'username\'))),\\n    Enter.theValue(password).into(PageElement.located(By.id(\'password\'))),\\n    Press.the(Key.Enter),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Defining a not implemented task\\n\\nNote that calling ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) method without providing the sequence of [activities](/api/core/class/Activity/)\\nproduces a Task that\'s marked as \\"pending\\" in the test report.\\n\\nThis feature is useful when you want to quickly write down a task that will be needed in the scenario,\\nbut you\'re not yet sure what activities it will involve.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Task, the } from \'@serenity-js/core\'\\n\\nconst SignUp = () =>\\n    Task.where(the`#actor signs up for a newsletter`) // no activities provided\\n                                                      // => task marked as pending\\n```"},{"kind":"text","text":"\\n\\n## Composing activities into tasks\\n\\nThe purpose of **tasks** is to help you capture domain vocabulary by **associating domain meaning** with a **sequence of activities**.\\nFrom the implementation perspective, tasks help you give a **meaningful description** to such sequence\\nand provide a way to **easily reuse activities across your code base**.\\n\\n:::tip Remember\\n**Tasks** associate **domain meaning** with a sequence of **lower-level activities** and provide a mechanism for **code reuse**.\\n:::\\n\\nFor example, a task to _find a flight connection from London to New York_ could be modelled as a sequence of the following lower-level activities:\\n- specify origin city of \\"London\\"\\n- specify destination city of \\"New York\\"\\n\\nThe easiest way to implement such task, and any custom Serenity/JS task for this matter, is to use the ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) method to compose the lower-level activities:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\n\\nconst findFlight = (originCity: string, destinationCity: string) =>\\n    Task.where(the`#actor finds a flight from ${ originCity } to ${ destinationCity }`,   // task goal\\n        specifyOriginCity(originCity),                                                  // activities\\n        specifyDestinationCity(originCity),\\n    )\\n```"},{"kind":"text","text":"\\n\\nFurthermore, if the actor was interacting with a web UI, a task to _specify origin city_ could again be composed of other activities:\\n- click on the "},{"kind":"code","text":"`origin airport`"},{"kind":"text","text":" widget\\n- enter city name of "},{"kind":"code","text":"`London`"},{"kind":"text","text":"\\n- pick the first suggested airport from the list\\n\\nConversely, a task to _specify destination city_ could be composed of:\\n- click on the "},{"kind":"code","text":"`destination airport`"},{"kind":"text","text":" widget\\n- enter city name of "},{"kind":"code","text":"`New York`"},{"kind":"text","text":"\\n- pick the first suggested airport from the list\\n\\nConveniently, [Serenity/JS modules](/handbook/getting-started/architecture) provide low-level activities that\\nallow actors to interact with the various interfaces of the system under test.\\nFor example, [Serenity/JS Web module](/api/web) ships with activities such as ["},{"kind":"code","text":"`Click`"},{"kind":"text","text":"](/api/web/class/Click/) or ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/),\\nwhich we can incorporate into our task definitions just like any other activities:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\nimport { Click, Enter, Key, Press } from \'@serenity-js/web\'\\n\\nimport { FlightFinder } from \'./ui/flight-finder\'\\n\\nconst specifyOriginCity = (originCity: string) =>\\n    Task.where(the`#actor specifies origin city of ${ originCity }`,\\n        Click.on(FlightFinder.originAirport),\\n        Enter.theValue(originCity).into(FlightFinder.originAirport),\\n        Press.the(Key.ArrowDown, Key.Enter).into(FlightFinder.originAirport),\\n    )\\n\\nconst specifyDestinationCity = (destinationCity: string) =>\\n    Task.where(the`#actor specifies destination city of ${ destinationCity }`,\\n        Click.on(FlightFinder.destinationAirport),\\n        Enter.theValue(destinationCity).into(FlightFinder.destinationAirport),\\n        Press.the(Key.ArrowDown, Key.Enter).into(FlightFinder.destinationAirport),\\n    )\\n```"},{"kind":"text","text":"\\n\\nAs you can already see, tasks to _specify origin city_ and _specify destination city_ are almost identical,\\nsave for the name of the widget and the text value the actor is supposed to enter.\\nSerenity/JS **task-based code reuse model** means that we can clean up such duplicated implementation\\nby **extracting a parameterised task**, in this case called "},{"kind":"code","text":"`specifyCity`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\nimport { Click, Enter, Key, PageElement, Press } from \'@serenity-js/web\'\\n\\nimport { FlightFinder } from \'./ui/flight-finder\'\\n\\nconst specifyOriginCity = (originCity: string) =>\\n    Task.where(the`#actor specifies origin city of ${ originCity }`,\\n        specifyCity(originCity, FlightFinder.originAirport)\\n    )\\n\\nconst specifyDestinationCity = (destinationCity: string) =>\\n    Task.where(the`#actor specifies destination city of ${ destinationCity }`,\\n        specifyCity(destinationCity, FlightFinder.destinationAirport),\\n    )\\n\\nconst specifyCity = (cityName: string, widget: PageElement) =>\\n    Task.where(the`#actor specifies city of ${ cityName } in ${ widget }`,\\n        Click.on(widget),\\n        Enter.theValue(cityName).into(widget),\\n        Press.the(Key.ArrowDown, Key.Enter).into(widget),\\n    )\\n```"},{"kind":"text","text":"\\n\\nAs you work with Serenity/JS, you\'ll notice that the ideas of **functional decomposition**, so thinking of tasks as sequences of lower-level activities,\\nas well as **functional composition**, so implementing reusable activities and composing them into higher-level tasks,\\nare at the heart of the Screenplay Pattern. You\'ll also notice that the entire Serenity/JS framework does it best to help your team follow this approach.\\n\\n:::info The power of the Serenity/JS task-based code reuse model\\nWhat makes the Serenity/JS task-based code reuse model so **powerful at scale** is the observation that:\\n- for most software systems, a vast number of **diverse test scenarios** can be composed of a relatively **small number of high-level activities**\\n- all **high-level activities** can be composed of a relatively **small number of lower-level activities**\\n- in a reasonably consistently-designed software system, most lower-level activities tend to be similar and rather consistent across the various aspects of a given interface.\\nIn particular, **there are only so many ways** one can interact with a UI button or send an HTTP request to a web service.\\n\\nWhat this means in practice is that by investing your time in properly designing **relatively few reusable tasks**\\nto test your system, you give your team a **significant productivity boost** and **leverage** when producing high-level test scenarios.\\n\\nOn top of that, this design approach results not only in **simpler test scenarios** that reduce\\nthe [cognitive load](https://en.wikipedia.org/wiki/Cognitive_load) on the reader as they require them to process\\nthe scenario only one level of abstraction at the time.\\nIt also allows for the test to **take shortcuts** in well-defined points of the workflow - use a REST API request to create\\na test user account instead of going through the registration form.\\n:::"}]},"children":[{"id":1641,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":186,"character":11}],"signatures":[{"id":1642,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A factory method that makes defining custom tasks more convenient."}]},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":186,"character":11}],"parameters":[{"id":1643,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A description to be used when reporting this task"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1644,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of lower-level activities that constitute this task"}]},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"}}]},{"id":1648,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":1649,"name":"new Task","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":1650,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1651,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":634,"name":"Activity.constructor"}}],"inheritedFrom":{"type":"reference","target":633,"name":"Activity.constructor"}},{"id":1656,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1657,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":639,"name":"Activity.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":638,"name":"Activity.instantiationLocation"}},{"id":1652,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":202,"character":13}],"signatures":[{"id":1653,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":202,"character":13}],"parameters":[{"id":1654,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)"}]},"type":{"type":"reference","target":623,"name":"PerformsActivities","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":641,"name":"Activity.performAs"}}],"overwrites":{"type":"reference","target":640,"name":"Activity.performAs"}},{"id":1658,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1659,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1660,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1661,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1662,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1662]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":644,"name":"Activity.describedBy"}}],"inheritedFrom":{"type":"reference","target":643,"name":"Activity.describedBy"}},{"id":1668,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1669,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":654,"name":"Activity.toString"}}],"inheritedFrom":{"type":"reference","target":653,"name":"Activity.toString"}}],"groups":[{"title":"Constructors","children":[1648]},{"title":"Methods","children":[1641,1656,1652,1658,1668]}],"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":175,"character":22}],"extendedTypes":[{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1080,"name":"Check"}],"permalink":"/api/core/class/Task","categories":[],"previousId":957,"nextId":508},{"id":1949,"name":"WithAnswerableProperties","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a plain JavaScript object with ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) properties.\\nTypically, used in conjunction with ["},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"](/api/core/#RecursivelyAnswered) and ["},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"](/api/core/class/Question/#fromObject).\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  actorCalled, notes, q, Question, QuestionAdapter, WithAnswerableProperties\\n} from \'@serenity-js/core\';\\n\\ninterface RequestConfiguration {\\n  headers: Record<string, string>;\\n}\\n\\nconst requestConfiguration: WithAnswerableProperties<RequestConfiguration> = {\\n  headers: {\\n    Authorization: q`Bearer ${ notes().get(\'authDetails\').token }`\\n  }\\n}\\n\\nconst question: QuestionAdapter<RequestConfiguration> =\\n    Question.fromObject<RequestConfiguration>(requestConfiguration)\\n\\nconst answer: RequestConfiguration = await actorCalled(\'Annie\').answer(question);\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/WithAnswerableProperties.ts","line":31,"character":12}],"typeParameters":[{"id":1950,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":706,"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":1949,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}},"falseType":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}}},"permalink":"/api/core#WithAnswerableProperties","categories":[],"previousId":1635,"nextId":1072},{"id":508,"name":"Ability","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Abilities** enable [actors](/api/core/class/Actor/)\\nto perform [interactions](/api/core/class/Interaction/) with the system under test\\nand answer [questions](/api/core/class/Question/) about its state.\\n\\nFrom the technical perspective, **abilities** act as **wrappers** around any **integration libraries** required\\nto communicate with the external interfaces of system under test,\\nsuch as [web browser drivers](/api/web/class/BrowseTheWeb/) or an [HTTP client](/api/rest/class/CallAnApi/).\\nThey also enable [portability](/handbook/design/portable-test-code)\\nof your test code across such integration libraries.\\n\\nAbilities are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [interactions](/api/core/class/Interaction/),\\n[questions](/api/core/class/Question/), and [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- [Actors](/api/core/class/Actor/)\\n- [Configuring actors using Casts](/api/core/class/Cast/)\\n- [Interactions](/api/core/class/Interaction/)\\n- [Questions](/api/core/class/Question/)\\n- [Web testing](/handbook/web-testing/)\\n- [API testing](/handbook/api-testing/)\\n- [Mobile testing](/handbook/mobile-testing/)\\n\\n## Giving actors the abilities to interact\\n\\nSerenity/JS actors are capable of interacting with **any interface** of the system under test,\\nbe it a [web UI](/handbook/web-testing/), a [mobile app](/handbook/mobile-testing/), a [web service](/handbook/api-testing/),\\nor [anything else](/api/core/class/Ability/) that a Node.js program can talk to.\\nThis flexibility is enabled by a mechanism called _**abilities**_\\nand achieved without introducing any unnecessary dependencies to your code base thanks to the [modular architecture](/handbook/getting-started/architecture) of Serenity/JS.\\n\\n:::tip Remember\\n**Actors** have **abilities** that enable them to **perform interactions** and **answer questions**.\\n:::\\n\\nFrom the technical perspective, an **ability** is an [adapter](https://en.wikipedia.org/wiki/Adapter_pattern)\\naround an interface-specific integration library, such as a web browser driver, an HTTP client, a database client, and so on.\\nYou give an actor an ability, and it\'s the ability\'s responsibility to provide a consistent API around the integration library and deal with any of its quirks.\\nAbilities **encapsulate integration libraries** and handle their [configuration and initialisation](/api/core/interface/Initialisable/),\\nthe process of [freeing up any resources](/api/core/interface/Discardable/) they hold,\\nas well as managing any state associated with the library.\\n\\n### Portable interactions with web interfaces\\n\\nTo make your Serenity/JS actors interact with web interfaces,\\nyou call the ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor#whoCan) method and give them an implementation of the ability to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb),\\nspecific to your web integration tool of choice.\\n\\nNote how ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/), ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/), and ["},{"kind":"code","text":"`BrowseTheWebWithProtractor`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/)\\nall **extend** the base ability to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/).\\n\\n#### Playwright\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'   // Serenity/JS integration module\\nimport { chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })              // integration library\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))                   // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n#### WebdriverIO\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\' // Serenity/JS integration module\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))                  // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n#### Protractor\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor } from \'@serenity-js/protractor\'   // Serenity/JS integration module\\nimport { protractor } from \'protractor\'                                // integration library\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))        // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n### Retrieving an ability\\n\\nUse ["},{"kind":"code","text":"`PerformActivities`"},{"kind":"text","text":"](/api/core/class/PerformActivities/)} to retrieve an ability in a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) or ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) implementation.\\n\\nHere, "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" can be the integration library-specific class, for example ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/),\\nor its library-agnostic parent class, like ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/).\\n\\nTo make your code portable across the various integration libraries, retrieve the ability\\nusing the library-agnostic parent class:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWeb } from \'@serenity-js/web\' // Serenity/JS web module\\n\\nconst actor    = actorCalled(\'Trevor\')\\nconst ability  = await BrowseTheWeb.as(actor)   // retrieve implementation of BrowseTheWeb\\n```"},{"kind":"text","text":"\\n\\nAs you can already see, providing **encapsulation** and a **cleaner API** around the integration libraries are not the only reasons why you\'d want to use the abilities.\\n\\nAnother reason is that the Serenity/JS implementation of the Screenplay Pattern lets you **completely decouple the actor from the integration libraries**\\nand make the abilities of the same type **interchangeable**.\\nFor example, [Serenity/JS web modules](/handbook/web-testing/serenity-js-web-modules) offer an abstraction that lets you switch between web integration libraries\\nas vastly different as Selenium, WebdriverIO, or Playwright without having to change _anything whatsoever_ in your test scenarios.\\n\\nWhat this means is that your test code can become [portable and reusable across projects and teams](/handbook/design/portable-test-code),\\neven if they don\'t use the same low-level integration tools. It also helps you to **avoid vendor lock-in**, as you can wrap any third-party integration library\\ninto an ability and swap it out for another implementation if you need to.\\n\\nHowever, Serenity/JS **doesn\'t prevent you** from using the integration libraries directly.\\nWhen you need to, you can use a library-specific ability like ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\nto trade portability for access to library-specific low-level methods:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright, PlaywrightPage } from \'@serenity-js/playwright\'\\n\\nconst actor          = actorCalled(\'Trevor\')\\nconst ability        = await BrowseTheWebWithPlaywright.as(actor)\\nconst page           = (await ability.currentPage()) as PlaywrightPage;\\nconst playwrightPage = await page.nativePage();\\n// use any Playwright-specific APIs on playwrightPage\\n```"},{"kind":"text","text":"\\n\\n:::warning Using integration library-specific APIs reduces portability\\nWhile Serenity/JS provides you with escape hatches and ways to access the low-level APIs of your integration libraries,\\ndoing so can reduce the portability of your code. Only do it when you have a good reason to trade portability for low-level access.\\n:::\\n\\n\\n## Associating actors with data\\n\\nOne more reason to use abilities is that abilities can also help you to **associate actors with data** they need to perform their activities.\\nFor example, a commonly used ability is one to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes), which allows your actors to start the test scenario\\nequipped with some data set, or record information about what they see in the test scenario so that they can act upon it later:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n  emailAddress: string;\\n}\\n\\nawait actorCalled(\'Trevor\')\\n  .whoCan(\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Trevor\',\\n      lastName: \'Traveller\',\\n      emailAddress: \'Trevor.Traveller@example.org\',\\n    }))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Actors with multiple abilities\\n\\nOf course, an actor can have **any number of abilities** they need to play their role.\\nFor example, it is quite common for an actor to be able to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb), ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes), and ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Notepad, TakeNotes } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\nimport { chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\nconst baseURL = \'https://example.org\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n  emailAddress: string;\\n}\\n\\nawait actorCalled(\'Trevor\')\\n  .whoCan(\\n    BrowseTheWebWithPlaywright.using(browser, { baseURL }),\\n    CallAnApi.at(`${ baseURL }/api`),\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Trevor\',\\n      lastName: \'Traveller\',\\n      emailAddress: \'Trevor.Traveller@example.org\',\\n    }))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Writing custom abilities\\n\\nIf your system under test provides a type of interface that Serenity/JS doesn\'t support yet,\\nyou might want to implement a custom ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/), as well as [interactions](/api/core/class/Interaction/)\\nand [questions](/api/core/class/Question/) to interact with it.\\n\\nThe best way to start with that is for you to review the examples in the [Screenplay Pattern API docs](/api/core/class/Ability/),\\nas well as the [Serenity/JS code base on GitHub](https://github.com/serenity-js/serenity-js/tree/main/packages).\\nAlso note that all the [Serenity/JS modules](/handbook/getting-started/architecture)\\nhave their automated tests written in such a way to not only provide an **extremely high test coverage** for the framework itself,\\nbut to be **accessible** and act as a **reference implementation for you** to create your own integrations.\\n\\nIf you believe that the custom integration you\'ve developed could benefit the wider Serenity/JS community,\\nplease consider open-sourcing it yourself, or [contributing it](/community/contributing/) to the main framework.\\n\\n[![Join Serenity/JS Community Chat](https://img.shields.io/badge/Chat-Serenity%2FJS%20Community-FBD30B?logo=matrix)](https://matrix.to/#/#serenity-js:gitter.im)\\n\\n### Defining a custom ability to "},{"kind":"code","text":"`MakePhoneCalls`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability, actorCalled, Interaction } from \'@serenity-js/core\'\\n\\nclass MakePhoneCalls extends Ability {\\n\\n  // A static method is typically used to inject a client of a given interface\\n  // and instantiate the ability, for example:\\n  //   actorCalled(\'Phil\').whoCan(MakePhoneCalls.using(phone))\\n  static using(phone: Phone) {\\n    return new MakePhoneCalls(phone);\\n  }\\n\\n  // Abilities can hold state, for example: the client of a given interface,\\n  // additional configuration, or the result of the last interaction with a given interface.\\n  protected constructor(private readonly phone: Phone) {\\n  }\\n\\n  // Abilities expose methods that enable Interactions to call the system under test,\\n  // and Questions to retrieve information about its state.\\n  dial(phoneNumber: string): Promise<void> {\\n    // ...\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a custom interaction using the custom ability\\n\\n"},{"kind":"code","text":"```ts\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\n\\n// A custom interaction using the actor\'s ability:\\nconst Call = (phoneNumber: Answerable<string>) =>\\n  Interaction.where(the`#actor calls ${ phoneNumber }`, async actor => {\\n    await MakePhoneCalls.as(actor).dial(phoneNumber)\\n  })\\n```"},{"kind":"text","text":"\\n\\n### Using the custom ability and interaction in a test scenario\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Connie\')\\n  .whoCan(MakePhoneCalls.using(phone))\\n  .attemptsTo(\\n    Call(phoneNumber)\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using auto-initialisable and auto-discardable abilities\\n\\nAbilities that rely on resources that need to be initialised before they can be used,\\nor discarded before the actor is dismissed can implement\\nthe ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)\\nor ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/) interfaces, respectively.\\n\\n### Defining a custom ability to "},{"kind":"code","text":"`QueryPostgresDB`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  Ability, actorCalled, Discardable, Initialisable, Question, UsesAbilities,\\n} from \'@serenity-js/core\'\\n\\n// Some low-level interface-specific client we want the Actor to use,\\n// for example a PostgreSQL database client:\\nconst { Client } = require(\'pg\');\\n\\n// A custom Ability to give an Actor access to the low-level client:\\nclass QueryPostgresDB\\n  extends Ability\\n  implements Initialisable, Discardable\\n{\\n  constructor(private readonly client) {\\n  }\\n\\n  // Invoked by Serenity/JS upon the first invocation of `actor.attemptsTo`\\n  initialise(): Promise<void> | void {\\n    return this.client.connect();\\n  }\\n\\n  // Used to ensure that the Ability is not initialised more than once\\n  isInitialised(): boolean {\\n    return this.client._connected;\\n  }\\n\\n  // Discards any resources the Ability uses when the Actor is dismissed,\\n  // so when the Stage receives a SceneFinishes event for scenario-scoped actor,\\n  // or TestRunFinishes for cross-scenario-scoped actors\\n  discard(): Promise<void> | void {\\n    return this.client.end();\\n  }\\n\\n  // Any custom integration APIs the Ability, should make available to the Actor.\\n  // Here, we want the ability to enable the actor to query the database.\\n  query(query: string) {\\n    return this.client.query(query);\\n  }\\n\\n  // ... other custom integration APIs\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a custom question using the custom ability\\n\\n"},{"kind":"code","text":"```ts\\n// A custom Question to allow the Actor query the database\\nconst CurrentDBUser = () =>\\n  Question.about(\'current db user\', actor =>\\n    QueryPostgresDB.as(actor)\\n      .query(\'SELECT current_user\')\\n      .then(result => result.rows[0].current_user)\\n  );\\n```"},{"kind":"text","text":"\\n\\n### Using the custom ability and question in a test scenario\\n\\n"},{"kind":"code","text":"```ts\\n// Example test scenario where the Actor uses the Ability to QueryPostgresDB\\n// to assert on the username the connection has been established with\\n\\nimport { describe, it } from \'mocha\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Serenity/JS\', () => {\\n  it(\'can initialise and discard abilities automatically\', () =>\\n    actorCalled(\'Debbie\')\\n      .whoCan(new QueryPostgresDB(new Client()))\\n      .attemptsTo(\\n        Ensure.that(CurrentDBUser(), equals(\'jan\'))\\n      ))\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)"}]},"children":[{"id":509,"name":"as","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":402,"character":11}],"signatures":[{"id":510,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to access an [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) of the given type\\nfrom within the ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) and ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) classes.\\n\\n#### Retrieving an ability in an interaction definition\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Interaction } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\n\\nexport const ClearLocalStorage = () =>\\n  Interaction.where(`#actor clears local storage`, async (actor: Actor) => {\\n    const browseTheWeb: BrowseTheWeb = BrowseTheWeb.as(actor)    // retrieve an ability\\n    const page: Page = await browseTheWeb.currentPage()\\n    await page.executeScript(() => window.localStorage.clear())\\n  })\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving an ability in a question definition\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Question } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nconst LocalStorage = {\\n  numberOfItems: () =>\\n    Question.about<number>(`number of items in local storage`, async (actor: Actor) => {\\n      const browseTheWeb: BrowseTheWeb = BrowseTheWeb.as(actor)    // retrieve an ability\\n      const page: Page = await browseTheWeb.currentPage()\\n      return page.executeScript(() => window.localStorage.length)\\n    })\\n}\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":402,"character":11}],"typeParameter":[{"id":511,"name":"A","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":512,"name":"this","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":511,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}},{"id":513,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}}],"type":{"type":"reference","target":511,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":514,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":443,"character":11}],"signatures":[{"id":515,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability class,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nMyAbility.abilityType();            // returns MyAbility\\nMySpecialisedAbility.abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":443,"character":11}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"}}]},{"id":523,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":524,"name":"new Ability","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}]},{"id":525,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":526,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"}}]},{"id":527,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":528,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[523]},{"title":"Methods","children":[509,514,525,527]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":363,"character":22}],"extendedBy":[{"type":"reference","target":472,"name":"RaiseErrors"},{"type":"reference","target":542,"name":"AnswerQuestions"},{"type":"reference","target":579,"name":"PerformActivities"},{"type":"reference","target":929,"name":"TakeNotes"},{"type":"reference","target":1670,"name":"ScheduleWork"}],"permalink":"/api/core/class/Ability","categories":[],"previousId":1640,"nextId":1951},{"id":529,"name":"AbilityType","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface describing the static access method that every ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) class\\nneeds to provide in order to be accessible from within the [interactions](/api/core/class/Interaction/).\\n\\n#### Retrieving an ability from an interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability, Answerable, actorCalled, Interaction, the } from \'@serenity-js/core\';\\n\\nclass MakePhoneCalls extends Ability {\\n  static using(phone: Phone) {\\n    return new MakePhoneCalls(phone);\\n  }\\n\\n  protected constructor(private readonly phone: Phone) {\\n  }\\n\\n  // some method that allows us to interact with the external interface of the system under test\\n  dial(phoneNumber: string): Promise<void> {\\n    // ...\\n  }\\n}\\n\\nconst Call = (phoneNumber: Answerable<string>) =>\\n  Interaction.where(the`#actor calls ${ phoneNumber }`, async actor => {\\n    await MakePhoneCalls.as(actor).dial(phoneNumber)\\n  });\\n\\nawait actorCalled(\'Connie\')\\n  .whoCan(MakePhoneCalls.using(phone))\\n  .attemptsTo(\\n    Call(phoneNumber),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":46,"character":12}],"typeParameters":[{"id":541,"name":"A","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reflection","declaration":{"id":530,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":47,"character":5}],"signatures":[{"id":531,"name":"__type","variant":"signature","kind":16384,"flags":{"isExternal":true,"isAbstract":true},"parameters":[{"id":532,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":541,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}}]}},{"type":"reflection","declaration":{"id":533,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":534,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":48,"character":8}],"signatures":[{"id":535,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":48,"character":8}],"typeParameter":[{"id":536,"name":"S","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":537,"name":"this","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":536,"name":"S","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}},{"id":538,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}}],"type":{"type":"reference","target":536,"name":"S","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":539,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":52,"character":8}],"signatures":[{"id":540,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":52,"character":8}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[534,539]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":47,"character":44}]}}]},"permalink":"/api/core#AbilityType","categories":[],"nextId":542},{"id":542,"name":"AnswerQuestions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to resolve the value of a given ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable).\\n\\n"},{"kind":"code","text":"`AnswerQuestions`"},{"kind":"text","text":" is used internally by ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer), and it is unlikely you\'ll ever need to use it directly in your code.\\nThat is, unless you\'re building a custom Serenity/JS extension and want to override the default behaviour of the framework,\\nin which case you should check out the [Contributor\'s Guide](/community/contributing/)."}]},"children":[{"id":562,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":563,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":526,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":525,"name":"Ability.toJSON"}},{"id":564,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":565,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":528,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":527,"name":"Ability.abilityType"}},{"id":554,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":18,"character":4}],"signatures":[{"id":555,"name":"new AnswerQuestions","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":18,"character":4}],"parameters":[{"id":556,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":542,"name":"AnswerQuestions","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":524,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":523,"name":"Ability.constructor"}},{"id":558,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":22,"character":4}],"signatures":[{"id":559,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":22,"character":4}],"typeParameter":[{"id":560,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":561,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":560,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":560,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[554]},{"title":"Methods","children":[562,564,558]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/AnswerQuestions","categories":[],"previousId":529,"nextId":571},{"id":566,"name":"CanHaveAbilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can have an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to perform some ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":567,"name":"whoCan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":19,"character":4}],"signatures":[{"id":568,"name":"whoCan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) or several abilities to the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":19,"character":4}],"parameters":[{"id":569,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":570,"name":"Returned_Type","package":"@serenity-js/core","qualifiedName":"CanHaveAbilities.Returned_Type","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[567]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":14,"character":17}],"typeParameters":[{"id":570,"name":"Returned_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"}],"permalink":"/api/core/interface/CanHaveAbilities","categories":[],"previousId":1637,"nextId":618},{"id":571,"name":"Discardable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface to be implemented by any ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that needs to free up\\nthe resources it uses, e.g. disconnect from a database.\\n\\nThis ["},{"kind":"code","text":"`Discardable.discard`"},{"kind":"text","text":"](/api/core/interface/Discardable/#discard) method is invoked directly by the [actor](/api/core/class/Actor/), and indirectly by the [stage](/api/core/class/Stage/):\\n- when [SceneFinishes](/api/core-events/class/SceneFinishes/), for actors instantiated after [SceneStarts](/api/core-events/class/SceneStarts/) - e.g. within a test scenario or in a \\"before each\\" hook\\n- when ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/), for actors instantiated before [SceneStarts](/api/core-events/class/SceneStarts/) - e.g. in a \\"before all\\" hook\\n\\nNote that events such as [SceneFinishes](/api/core-events/class/SceneFinishes/) and ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) are emitted by Serenity/JS test runner adapters,\\nsuch as "},{"kind":"code","text":"`@serenity-js/cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`@serenity-js/mocha`"},{"kind":"text","text":", "},{"kind":"code","text":"`@serenity-js/jasmine`"},{"kind":"text","text":", and so on.\\nConsult their respective readmes to learn how to register them with your test runner of choice.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)"}]},"children":[{"id":572,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":25,"character":4}],"signatures":[{"id":573,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Discards the resources associated with this ability."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":25,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}],"groups":[{"title":"Methods","children":[572]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":20,"character":17}],"implementedBy":[{"type":"reference","target":1670,"name":"ScheduleWork"}],"permalink":"/api/core/interface/Discardable","categories":[],"previousId":542,"nextId":574},{"id":574,"name":"Initialisable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface to be implemented by any ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that needs to initialise\\nthe resources it uses, e.g. establish a database connection.\\n\\nThe ["},{"kind":"code","text":"`Initialisable.initialise`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#initialise) method is invoked whenever ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) method is called,\\nbut **only when** ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) returns false. This is to avoid initialising abilities more than once.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)"}]},"children":[{"id":575,"name":"initialise","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":24,"character":4}],"signatures":[{"id":576,"name":"initialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises the ability. Invoked whenever ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) method is called,\\nbut **only when** ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) returns false.\\n\\nMake sure to implement ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) so that it returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen the ability has been successfully initialised."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":24,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]},{"id":577,"name":"isInitialised","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":33,"character":4}],"signatures":[{"id":578,"name":"isInitialised","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Should return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when all the resources that the given ability needs\\nhave been initialised. Should return "},{"kind":"code","text":"`false`"},{"kind":"text","text":" if the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should\\ninitialise them again when ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) is called."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Methods","children":[575,577]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":15,"character":17}],"permalink":"/api/core/interface/Initialisable","categories":[],"previousId":571,"nextId":579},{"id":579,"name":"PerformActivities","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform a given ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n["},{"kind":"code","text":"`PerformActivities`"},{"kind":"text","text":"](/api/core/class/PerformActivities/) is used internally by ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo), and it is unlikely you\'ll ever need to use it directly in your code.\\nThat is, unless you\'re building a custom Serenity/JS extension and want to override the default behaviour of the framework,\\nin which case you should check out the [Contributor\'s Guide](/community/contributing)."}]},"children":[{"id":610,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":611,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":526,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":525,"name":"Ability.toJSON"}},{"id":612,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":613,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":528,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":527,"name":"Ability.abilityType"}},{"id":587,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":34,"character":4}],"signatures":[{"id":588,"name":"new PerformActivities","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":34,"character":4}],"parameters":[{"id":589,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":623,"name":"PerformsActivities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":590,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":591,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":35,"character":92}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[591]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":35,"character":90}]}}]}},{"id":592,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2630,"name":"EmitsDomainEvents","package":"@serenity-js/core"}}],"type":{"type":"reference","target":579,"name":"PerformActivities","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":524,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":523,"name":"Ability.constructor"}},{"id":597,"name":"perform","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":41,"character":10}],"signatures":[{"id":598,"name":"perform","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":41,"character":10}],"parameters":[{"id":599,"name":"activity","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[587]},{"title":"Methods","children":[610,612,597]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":33,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/PerformActivities","categories":[],"previousId":574,"nextId":614},{"id":614,"name":"SerialisedAbility","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":615,"name":"type","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":7,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":616,"name":"class","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":617,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":9,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"}}],"groups":[{"title":"Properties","children":[615,616,617]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":6,"character":17}],"permalink":"/api/core/interface/SerialisedAbility","categories":[],"previousId":579,"nextId":715},{"id":618,"name":"UsesAbilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can use their [abilities](/api/core/class/Ability/) to perform an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\nor answer a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/).\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":619,"name":"abilityTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":23,"character":4}],"signatures":[{"id":620,"name":"abilityTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the [actor\'s](/api/core/class/Actor/) ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to do something"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":23,"character":4}],"typeParameter":[{"id":621,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":622,"name":"doSomething","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The type of ability to look up, e.g. ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) or ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":621,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}}],"type":{"type":"reference","target":621,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[619]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":15,"character":17}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"}],"permalink":"/api/core/interface/UsesAbilities","categories":[],"previousId":566,"nextId":623},{"id":623,"name":"PerformsActivities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can perform a sequence of [activities](/api/core/class/Activity/),\\nsuch as [tasks](/api/core/class/Task/) or [interactions](/api/core/class/Interaction/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":624,"name":"attemptsTo","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempt to perform a sequence of [activities](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":4}],"type":{"type":"reflection","declaration":{"id":625,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":16}],"signatures":[{"id":626,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":16}],"parameters":[{"id":627,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}}],"groups":[{"title":"Properties","children":[624]}],"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":15,"character":17}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"}],"permalink":"/api/core/interface/PerformsActivities","categories":[],"previousId":618,"nextId":710},{"id":710,"name":"CollectsArtifacts","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can collect artifacts, such as photos or "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data.,\\nwhile the scenario is being executed\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":711,"name":"collect","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":77,"character":4}],"signatures":[{"id":712,"name":"collect","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) collect an artifact so that it can be included in the test report.\\n\\n#### Implementing a custom interaction to attach artifacts\\n\\n"},{"kind":"code","text":"```ts\\nimport * as fs from \'node:fs\'\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\nimport { Name, TextData } from \'@serenity-js/core/lib/model\'\\n\\nexport class Attach {\\n\\n  static contentsOf = (pathToFile: Path): Interaction =>\\n    Interaction.where(`#actor attaches contents of ${ pathToFile.basename() }`, async actor => {\\n      const data = fs.readFileSync(pathToFile.value).toString(\'utf-8\');\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        new Name(pathToFile.basename()),\\n      )\\n    })\\n\\n  static textData = (contents: Answerable<string>, name?: string): Interaction =>\\n    Interaction.where(the`#actor attaches text data`, async actor => {\\n      const data = await actor.answer(contents);\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        name && new Name(name),\\n      )\\n    })\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Attaching plain text\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.textData(\'some text\', \'some name\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Attaching contents of a text file\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.contentsOf(Path.from(__dirname, \'output/server.log\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":77,"character":4}],"parameters":[{"id":713,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The artifact to be collected, such as "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data."}]},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":714,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the artifact to make it easy to recognise in the test report"}]},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[711]}],"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":12,"character":17}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"}],"permalink":"/api/core/interface/CollectsArtifacts","categories":[],"previousId":623,"nextId":1067},{"id":715,"name":"Debug","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to evaluate and [log](/api/core/class/Log/) the provided [answerable](/api/core/#Answerable) values.\\n\\nSince this interaction **accepts a callback function** that receives the evaluated results,\\nthe best way to use it is while **running the test scenario via a Node.js debugger**.\\nSee the links below to learn how to do it in popular IDEs.\\n\\n## Debugging Answerable values\\n\\n["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values) accepts a callback function that receives an array of ["},{"kind":"code","text":"`DebuggingResult`"},{"kind":"text","text":"](/api/core/interface/DebuggingResult/) objects,\\nas well as the result of evaluating each provided [answerable](/api/core/#Answerable) with ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer).\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Debug } from \'@serenity-js/core\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\n// Running the below through the Node.js debugger makes the actor resolve the provided values\\n// and return them to the debugger function, where you can investigate their contents,\\n// or inspect any Errors the evaluation has resulted with.\\nawait actorCalled(\'Debbie\').attemptsTo(\\n    Navigate.to(\'http://example.org\'),\\n    Debug.values((results, title, url) => {\\n        // set a breakpoint here to view `results`, `title` and `url` in your IDE debugger\\n    }, Page.current().title(), Page.current().url()), // accepts multiple values\\n);\\n```"},{"kind":"text","text":"\\n\\n## Accessing Playwright Page\\n\\n[Playwright Test for VSCode](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright)\\nprovides features that allow for [experimenting with web UI locators](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright#tune-locators)\\nwhile the test is paused at breakpoint.\\n\\nSince this functionality is specific to [Playwright](/api/playwright),\\nyou can use it by passing ["},{"kind":"code","text":"`PlaywrightPage.current().nativePage()`"},{"kind":"text","text":"](/api/playwright/class/PlaywrightPage/#current)\\nto Serenity/JS ["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values). Also make sure to name the evaluated value "},{"kind":"code","text":"`page`"},{"kind":"text","text":", as this is the variable name that the Playwright VSCode extension expects.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Debug } from \'@serenity-js/core\'\\nimport { PlaywrightPage } from \'@serenity-js/playwright\'\\n\\n// Running the below through the Node.js debugger makes the actor resolve the provided values\\n// and return them to the debugger function, where you can investigate their contents,\\n// or inspect any Errors the evaluation has resulted with.\\nawait actorCalled(\'Debbie\').attemptsTo(\\n    Navigate.to(\'http://example.org\'),\\n    Debug.values((results, page) => {\\n        // set a breakpoint here to use Playwright locator debugging features\\n        page.locator(\'.example-css-class\')\\n        // note that you can change this selector while having the test paused at breakpoint\\n    }, PlaywrightPage.current().nativePage()),\\n);\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Node.js debugging - Getting started](https://nodejs.org/en/docs/guides/debugging-getting-started/)\\n- [Node.js debugging in VS Code](https://code.visualstudio.com/docs/nodejs/nodejs-debugging)\\n- [Running and debugging Node.js in WebStorm](https://www.jetbrains.com/help/webstorm/running-and-debugging-node-js.html)\\n- [Playwright Test for VSCode](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright)"}]},"children":[{"id":716,"name":"values","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":11}],"signatures":[{"id":717,"name":"values","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to evaluate the provided "},{"kind":"code","text":"`values`"},{"kind":"text","text":",\\nlog the results, and then pass them to your "},{"kind":"code","text":"`debuggerFunction`"},{"kind":"text","text":".\\n\\nTo use this interaction, run your test scenario in the Node.js debugger\\nand set a breakpoint inside the "},{"kind":"code","text":"`debuggerFunction`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":11}],"typeParameter":[{"id":718,"name":"Values","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":719,"name":"debuggerFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":720,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":79}],"signatures":[{"id":721,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":79}],"parameters":[{"id":722,"name":"results","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"mapped","parameter":"Index","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":770,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","typeArguments":[{"type":"reference","name":"Index","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Index","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":718,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"DebuggingResult","package":"@serenity-js/core"}}},{"id":723,"name":"answers","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"mapped","parameter":"Index","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":708,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","typeArguments":[{"type":"reference","name":"Index","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Index","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":718,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answered","package":"@serenity-js/core"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":724,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":718,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":755,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":756,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":831,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":830,"name":"Interaction.instantiationLocation"}},{"id":751,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":122,"character":10}],"signatures":[{"id":752,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":122,"character":10}],"parameters":[{"id":753,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":827,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":826,"name":"Interaction.performAs"}},{"id":757,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":758,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":759,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":760,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":761,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[761]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":833,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":832,"name":"Interaction.describedBy"}},{"id":767,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":768,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":843,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":842,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[716,755,751,757,767]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":75,"character":13}],"typeParameters":[{"id":769,"name":"Values","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Answerable","package":"@serenity-js/core"}}}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/Debug","categories":[],"previousId":614,"nextId":770},{"id":770,"name":"DebuggingResult","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface describing debugging data received by the callback function passed to ["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values)."}]},"children":[{"id":771,"name":"description","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":7,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":772,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":8,"character":4}],"type":{"type":"reference","target":774,"name":"T","package":"@serenity-js/core","qualifiedName":"DebuggingResult.T","refersToTypeParameter":true}},{"id":773,"name":"error","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":9,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"groups":[{"title":"Properties","children":[771,772,773]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":6,"character":17}],"typeParameters":[{"id":774,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/DebuggingResult","categories":[],"previousId":715,"nextId":775},{"id":775,"name":"Log","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto [collect](/api/core/interface/CollectsArtifacts/) arbitrary static values\\nand answers to [answerables](/api/core/#Answerable),\\nso that they can be sent to the [stage crew members](/api/core/interface/StageCrewMember/)\\nand printed to the terminal by the ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/)\\nor attached to the HTML report by the ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/).\\n\\n## Logging static and "},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":" values\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Laura\').attemptsTo(\\n  Log.the(\'Current page\', Page.current().title(), Page.current().url()),\\n)\\n```"}]},"children":[{"id":776,"name":"the","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":42,"character":11}],"signatures":[{"id":777,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Log`"},{"kind":"text","text":"](/api/core/class/Log/)\\n\\nNote that this method accepts [variable number of arguments](https://www.typescriptlang.org/docs/handbook/functions.html#rest-parameters),\\nso that you can easily log several values at the same time."}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":42,"character":11}],"parameters":[{"id":778,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"The items to be logged"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":797,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":798,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":831,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":830,"name":"Interaction.instantiationLocation"}},{"id":793,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":59,"character":10}],"signatures":[{"id":794,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":59,"character":10}],"parameters":[{"id":795,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":827,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":826,"name":"Interaction.performAs"}},{"id":799,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":800,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":801,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":802,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":803,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[803]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":833,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":832,"name":"Interaction.describedBy"}},{"id":809,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":810,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":843,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":842,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[776,797,793,799,809]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":31,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/Log","categories":[],"previousId":770,"nextId":1080},{"id":844,"name":"ChainableSetter","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":845,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":8,"character":4}],"signatures":[{"id":846,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":8,"character":4}],"typeParameter":[{"id":847,"name":"K","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":848,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":847,"name":"K","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":849,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":847,"name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":850,"name":"T","package":"@serenity-js/core","qualifiedName":"ChainableSetter.T","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":844,"typeArguments":[{"type":"reference","target":850,"name":"T","package":"@serenity-js/core","qualifiedName":"ChainableSetter.T","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"},{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}]}}]}],"groups":[{"title":"Methods","children":[845]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":7,"character":17}],"typeParameters":[{"id":850,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"implementedBy":[{"type":"reference","target":896,"name":"NotepadAdapter"}],"permalink":"/api/core/interface/ChainableSetter","categories":[],"previousId":1288,"nextId":851},{"id":851,"name":"Notepad","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores notes recorded by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\nSee ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) and [notes](/api/core/function/notes) for more usage examples.\\n\\n## Sharing a notepad between actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  auth: {\\n    username: string;\\n    password: string;\\n  }\\n}\\n\\nexport class Actors implements Cast {\\n\\n  // initialise a shared notepad when the Actors class is initialised\\n  private readonly sharedNotepad = Notepad.with<MyNotes>({\\n    auth: {\\n      username: \'test-user\',\\n      password: \'SuperSecretP@ssword!\',\\n    }\\n  });\\n\\n  prepare(actor: Actor): Actor {\\n    switch (actor.name) {\\n      case \'Alice\':\\n      case \'Bob\':\\n        // Alice and Bob will share their notepad\\n        return actor.whoCan(TakeNotes.using(this.sharedNotepad));\\n      default:\\n        // other actors will get their own notepads\\n        return actor.whoCan(TakeNotes.using(Notepad.empty<AuthCredentials>()));\\n    }\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"children":[{"id":852,"name":"empty","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":61,"character":11}],"signatures":[{"id":853,"name":"empty","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new empty Notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":61,"character":11}],"typeParameter":[{"id":854,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":854,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":855,"name":"with","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":100,"character":11}],"signatures":[{"id":856,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new Notepad with an initial state.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  personalDetails: {\\n    firstName: string;\\n    lastName: string;\\n  }\\n}\\n\\nactorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(\\n      Notepad.with<MyNotes>({\\n        personalDetails: {\\n          firstName: \'Leonard\',\\n          lastName: \'McLaud\',\\n        }\\n      })\\n    )\\n  )\\n  .attemptsTo(\\n    Ensure.that(\\n      notes<MyNotes>().get(\'personalDetails\').firstName,\\n      equals(\'Leonard\')\\n    ),\\n  )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":100,"character":11}],"typeParameter":[{"id":857,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":858,"name":"notes","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":857,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":857,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":859,"name":"notes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":113,"character":11}],"signatures":[{"id":860,"name":"notes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that simplifies access to the notes\\nstored in this notepad. Allows the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to record, read, and remove notes.\\n\\n#### Learn more\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)\\n- ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":113,"character":11}],"typeParameter":[{"id":861,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":896,"typeArguments":[{"type":"reference","target":861,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}]},{"id":867,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":136,"character":4}],"signatures":[{"id":868,"name":"has","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" exists in the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"code","text":"`true`"},{"kind":"text","text":" if the note exists, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":136,"character":4}],"typeParameter":[{"id":869,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":870,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":869,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":871,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":153,"character":4}],"signatures":[{"id":872,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a note, identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":", from the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The value of the previously recorded note."}]},{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n Throws a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/) if the note with a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":"\\n has never been recorded."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":153,"character":4}],"typeParameter":[{"id":873,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":874,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":873,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":873,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":895,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}}}]},{"id":875,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":170,"character":4}],"signatures":[{"id":876,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores a given "},{"kind":"code","text":"`value`"},{"kind":"text","text":" uniquely identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" in the notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":170,"character":4}],"typeParameter":[{"id":877,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":878,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":877,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":879,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to record."}]},"type":{"type":"indexedAccess","indexType":{"type":"reference","target":877,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":895,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}}}],"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":895,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":880,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":184,"character":4}],"signatures":[{"id":881,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes the note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" from the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"code","text":"`true`"},{"kind":"text","text":" if the item in the Notepad object existed and has been removed,\\n "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":184,"character":4}],"typeParameter":[{"id":882,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":883,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":882,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":884,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":194,"character":4}],"signatures":[{"id":885,"name":"clear","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes all the notes stored in this notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":194,"character":4}],"type":{"type":"intrinsic","name":"void"}}]},{"id":886,"name":"size","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":205,"character":4}],"signatures":[{"id":887,"name":"size","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of notes stored in the notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":205,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":888,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":889,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":890,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":891,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":892,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":893,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":894,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Methods","children":[852,855,859,867,871,875,880,884,886,888,891,893]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":56,"character":13}],"typeParameters":[{"id":895,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Notepad","categories":[],"previousId":844,"nextId":896},{"id":896,"name":"NotepadAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style adapter for the ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/),\\nthat makes it easier for the [actors](/api/core/class/Actor/) to access its APIs.\\n\\nSee ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/), ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) and ["},{"kind":"code","text":"`notes`"},{"kind":"text","text":"](/api/core/function/notes/) for more examples."}]},"children":[{"id":897,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":898,"name":"new NotepadAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":899,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":896,"typeArguments":[{"type":"reference","target":899,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}]},{"id":900,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":36,"character":4}],"signatures":[{"id":901,"name":"has","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" exists in the notepad.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.has`"},{"kind":"text","text":"](/api/core/class/Notepad/#has)}"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Question that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the note exists, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":36,"character":4}],"typeParameter":[{"id":902,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":903,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":902,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":904,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":58,"character":4}],"signatures":[{"id":905,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a note, identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":", from the notepad.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.get`"},{"kind":"text","text":"](/api/core/class/Notepad/#get)}"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The value of the previously recorded note."}]},{"tag":"@throws","content":[{"kind":"text","text":"Throws a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/) if the note with a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":"\\n has never been recorded."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":58,"character":4}],"typeParameter":[{"id":906,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":907,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":906,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":906,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":899,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":908,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":110,"character":4}],"signatures":[{"id":909,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves a given "},{"kind":"code","text":"`Answerable<value>`"},{"kind":"text","text":" and stores it in the notepad,\\nuniquely identified by its "},{"kind":"code","text":"`subject`"},{"kind":"text","text":".\\n\\n**Pro tip:** calls to "},{"kind":"code","text":"`set`"},{"kind":"text","text":" can be chained and result in an accumulation\\nof values to be recorded in the ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/).\\nThose values are resolved and recorded when the ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nreturned by this method is performed by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\nIf a note identified by a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" is set multiple times,\\nthe last call wins.\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, notes, TakeNotes } from \'@serenity-js/core\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n interface MyNotes {\\n     stringNote: string;\\n     numberNote: number;\\n }\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad<MyNotes>());\\n  .attemptsTo(\\n\\n    notes<MyNotes>()\\n      .set(\'stringNote\', \'example\')\\n      .set(\'numberNote\', Promise.resolve(42))\\n      .set(\'stringNote\', \'another example\'),\\n\\n    Ensure.equal(notes().toJSON(), {\\n      firstNote: \'another example\',\\n      secondNote: 42,\\n    })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.set`"},{"kind":"text","text":"](/api/core/class/Notepad/#set)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":110,"character":4}],"typeParameter":[{"id":910,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":911,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":910,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":912,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to record"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":910,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":899,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":844,"typeArguments":[{"type":"reference","target":899,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"},{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}]},"implementationOf":{"type":"reference","target":846,"name":"ChainableSetter.set"}}],"implementationOf":{"type":"reference","target":845,"name":"ChainableSetter.set"}},{"id":913,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":180,"character":4}],"signatures":[{"id":914,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes the note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" from the notepad.\\n\\n#### Using as an "},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, Log, notes } from \'@serenity-js/core\'\\nimport { isPresent } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n\\n    notes<MyNotes>().delete(\'myNote\'),\\n\\n    Check.whether(notes<MyNotes>().get(\'myNote\'), isPresent())\\n      .andIfSo(\\n        Log.the(\'myNote is present\'),\\n      )\\n      .otherwise(\\n        Log.the(\'myNote was deleted\'),\\n      )\\n  )\\n  // logs: myNote was deleted\\n```"},{"kind":"text","text":"\\n\\n#### Using as a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, Log, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n\\n    Check.whether(notes<MyNotes>().delete(\'myNote\'), isTrue())\\n      .andIfSo(\\n        Log.the(\'myNote was deleted\'),\\n      )\\n      .otherwise(\\n        Log.the(\'myNote could not be deleted because it was not set\'),\\n      )\\n  )\\n  // logs: myNote was deleted\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.delete`"},{"kind":"text","text":"](/api/core/class/Notepad/#delete)"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"When used as a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":", resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the item in the Notepad object existed and has been removed,\\n "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":180,"character":4}],"typeParameter":[{"id":915,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":916,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":915,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":917,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":210,"character":4}],"signatures":[{"id":918,"name":"clear","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes all the notes stored in this notepad.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n    Log.the(notes<MyNotes>().size()),   // emits 1\\n    notes<MyNotes>().clear(),\\n    Log.the(notes<MyNotes>().size()),   // emits 0\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.clear`"},{"kind":"text","text":"](/api/core/class/Notepad/#clear)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":210,"character":4}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":919,"name":"size","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":239,"character":4}],"signatures":[{"id":920,"name":"size","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of notes stored in the notepad.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    Log.the(notes<MyNotes>().size()),   // emits 0\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n    Log.the(notes<MyNotes>().size()),   // emits 1\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.size`"},{"kind":"text","text":"](/api/core/class/Notepad/#size)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":239,"character":4}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":921,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":276,"character":4}],"signatures":[{"id":922,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a "},{"kind":"code","text":"`JSONObject`"},{"kind":"text","text":"\\nrepresenting the resolved notes stored in the notepad.\\n\\nNote that serialisation to JSON will simplify some data types that might not be serialisable by default,\\nbut are commonly used in data structures representing actor\'s notes.\\nFor example a ["},{"kind":"code","text":"`Map`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) will be serialised as a regular JSON object, a ["},{"kind":"code","text":"`Set`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set) will be serialised as ["},{"kind":"code","text":"`Array`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array).\\n\\nAdditionally, notepad assumes that the data structure you use it with does not contain cyclic references.\\n\\nTo learn more about the serialisation mechanism used by the notepad, please refer to [TinyTypes documentation](https://jan-molak.github.io/tiny-types/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.with({\\n    aSet: new Set([\'apples\', \'bananas\', \'cucumbers\']),\\n    aPromisedValue: Promise.resolve(42),\\n    aString: \'example\'\\n  })))\\n  .attemptsTo(\\n    Log.the(notes().toJSON()),\\n  )\\n  // emits: {\\n  //    aSet: [\'apples\', \'bananas\', \'cucumbers\']\\n  //    aPromisedValue: 42,\\n  //    aString: \'example\',\\n  // }\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":276,"character":4}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":923,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":285,"character":4}],"signatures":[{"id":924,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":285,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[897]},{"title":"Methods","children":[900,904,908,913,917,919,921,923]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":22,"character":13}],"typeParameters":[{"id":925,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"implementedTypes":[{"type":"reference","target":844,"typeArguments":[{"type":"reference","target":899,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"}],"permalink":"/api/core/class/NotepadAdapter","categories":[],"previousId":851,"nextId":929},{"id":929,"name":"TakeNotes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to remember information\\nto be recalled during a test scenario.\\n\\nUnder the hood, ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) uses a ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/), which state\\ncan be populated both during initialisation or while the test scenario is executed.\\nPopulating the notepad when it\'s initialised can be useful to associate authentication credentials\\nor personal details with a given actor, while dynamic recording of notes during a test scenario\\ncan be useful when the data to be recorded is not known upfront - for example when we want\\nthe actor to remember a JWT stored in the browser and then use it when sending API requests.\\n\\n**Pro tip:** ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/), ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) and ["},{"kind":"code","text":"`notes`"},{"kind":"text","text":"](/api/core/function/notes/) can be typed\\nusing [TypeScript generics](https://www.typescriptlang.org/docs/handbook/2/generics.html)\\nto help you avoid typos when specifying note names.\\n\\nSee [notes](/api/core/function/notes) and ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) for more usage examples.\\n\\n## Remembering and retrieving a value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad())\\n  .attemptsTo(\\n    notes().set(\'my_note\', \'some value\'),\\n    Log.the(notes().get(\'my_note\')),\\n    // emits \'some value\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using generics\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\n interface MyNotes {\\n   personalDetails: {\\n     firstName: string;\\n     lastName: string;\\n   }\\n }\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad<MyNotes>())\\n  .attemptsTo(\\n    Log.the(notes<MyNotes>().has(\'personalDetails\')),\\n    // emits false\\n\\n    Log.the(notes<MyNotes>().get(\'personalDetails\').isPresent()),\\n    // emits false\\n\\n    notes<MyNotes>().set(\'personalDetails\', { firstName: \'Leonard\', lastName: \'McLaud\' }),\\n\\n    Log.the(notes<MyNotes>().has(\'personalDetails\')),\\n    // emits true\\n\\n    Log.the(notes<MyNotes>().get(\'personalDetails\').isPresent()),\\n    // emits true\\n\\n    Log.the(notes().get(\'personalDetails\').firstName),\\n    // emits \'Leonard\'\\n\\n    Log.the(notes().get(\'personalDetails\').firstName.toLocaleUpperCase()),\\n    // emits \'LEONARD\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Populating the notepad with initial state\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Note, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Leonard\',\\n      lastName: \'McLaud\',\\n    }))\\n  )\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'lastName\', \'Shelby\'),\\n    Log.the(notes().get(\'firstName\')),\\n    // emits \'Leonard\'\\n\\n    Log.the(notes().get(\'lastName\')),\\n    // emits \'Shelby\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Recording a dynamic note\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { By, Text, PageElement } from \'@serenity-js/web\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\'\\n\\ninterface OnlineShoppingNotes {\\n  promoCode: string;\\n}\\n\\nconst promoCodeBanner = () =>\\n  PageElement.located(By.css(\'[data-testid=\\"promo-code\\"]\'))\\n    .describedAs(\'promo code\');\\n\\nconst promoCodeInput = () =>\\n  PageElement.located(By.css(\'[data-testid=\\"promo-code-input\\"]\'))\\n    .describedAs(\'promo code field\');\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    BrowseTheWebWithWebdriverIO.using(browser),\\n    TakeNotes.using(Notepad.empty<OnlineShoppingNotes>())\\n  )\\n  .attemptsTo(\\n    notes<OnlineShoppingNotes>().set(\'promoCode\', Text.of(promoCode()),\\n    // ...\\n    Enter.theValue(notes<OnlineShoppingNotes>().get(\'promoCode\'))\\n      .into(promoCodeInput())\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Clearing a notepad before each test scenario (Mocha)\\n\\n"},{"kind":"code","text":"```ts\\nimport \'mocha\';\\n\\nbeforeEach(() =>\\n  actorCalled(\'Leonard\')\\n    .attemptsTo(\\n      notes().clear(),\\n    ))\\n```"},{"kind":"text","text":"\\n\\n## Clearing a notepad before each test scenario (Cucumber)\\n\\n"},{"kind":"code","text":"```ts\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() =>\\n  actorCalled(\'Leonard\')\\n    .attemptsTo(\\n      notes().clear(),\\n    ));\\n```"},{"kind":"text","text":"\\n\\n## Importing notes from an API response\\n\\n"},{"kind":"code","text":"```ts\\n // given an example API:\\n //   GET /generate-test-user\\n // which returns:\\n //   { \\"first_name\\": \\"Leonard\\", \\"last_name\\": \\"Shelby\\" }\\n\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, Send } from \'@serenity-js/rest\'\\n\\ninterface PersonalDetails {\\n  first_name: string;\\n  last_name: string;\\n}\\n\\ninterface MyNotes {\\n  personalDetails?: PersonalDetails;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    CallAnApi.at(\'https://api.example.org/\'),\\n    TakeNotes.using(Notepad.empty<MyNotes>())\\n  )\\n  .attemptsTo(\\n     Send.a(GetRequest.to(\'/generate-test-user\')),\\n     notes<MyNotes>().set(\'personalDetails\', LastResponse.body<PersonalDetails>()),\\n\\n     Log.the(notes<MyNotes>().get(\'personalDetails\').first_name),    // emits \'Leonard\'\\n     Log.the(notes<MyNotes>().get(\'personalDetails\').last_name),     // emits \'Shelby\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using the QuestionAdapter\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface AuthCredentials {\\n  username?: string;\\n  password?: string;\\n}\\n\\ninterface MyNotes {\\n  auth: AuthCredentials;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(\\n      Notepad.with<MyNotes>({     // typed initial state\\n        auth: {\\n          username: \'leonard@example.org\',\\n          password: \'SuperSecretP@ssword!\',\\n        }\\n      })\\n    )\\n  )\\n  .attemptsTo(\\n    Log.the(\\n      notes<MyNotes>()          // typed notes\\n        .get(\'auth\')            // returns QuestionAdapter<AuthCredentials>\\n        .password               // returns QuestionAdapter<string>\\n        .charAt(0)\\n        .toLocaleLowerCase(),   // emits \\"s\\"\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/)"}]},"children":[{"id":930,"name":"usingAnEmptyNotepad","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":237,"character":11}],"signatures":[{"id":931,"name":"usingAnEmptyNotepad","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) with ["},{"kind":"code","text":"`Notepad.empty`"},{"kind":"text","text":"](/api/core/class/Notepad/#empty)."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":237,"character":11}],"typeParameter":[{"id":932,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":929,"typeArguments":[{"type":"reference","target":932,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"}}]},{"id":933,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":247,"character":11}],"signatures":[{"id":934,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) using\\na ["},{"kind":"code","text":"`Notepad.with`"},{"kind":"text","text":"](/api/core/class/Notepad/#with) some initial state."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":247,"character":11}],"typeParameter":[{"id":935,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":936,"name":"notepad","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":935,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}],"type":{"type":"reference","target":929,"typeArguments":[{"type":"reference","target":935,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"}}]},{"id":951,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":952,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":528,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":527,"name":"Ability.abilityType"}},{"id":944,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":4}],"signatures":[{"id":945,"name":"new TakeNotes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":4}],"typeParameter":[{"id":946,"name":"Notes_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":947,"name":"notepad","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":946,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}],"type":{"type":"reference","target":929,"typeArguments":[{"type":"reference","target":946,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":524,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":523,"name":"Ability.constructor"}},{"id":948,"name":"notepad","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":32}],"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":946,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}},{"id":949,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":258,"character":4}],"signatures":[{"id":950,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":258,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":526,"name":"Ability.toJSON"}}],"overwrites":{"type":"reference","target":525,"name":"Ability.toJSON"}}],"groups":[{"title":"Constructors","children":[944]},{"title":"Properties","children":[948]},{"title":"Methods","children":[930,933,951,949]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":232,"character":13}],"typeParameters":[{"id":953,"name":"Notes_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/TakeNotes","categories":[],"previousId":896,"nextId":926},{"id":926,"name":"notes","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/notes.ts","line":118,"character":16}],"signatures":[{"id":927,"name":"notes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Alias for ["},{"kind":"code","text":"`Notepad.notes`"},{"kind":"text","text":"](/api/core/class/Notepad/#notes).\\n\\n**Pro tip:** "},{"kind":"code","text":"`notes<T>().get(subject)`"},{"kind":"text","text":" returns a ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/) to make accessing the APIs\\nof the underlying type easier. Check ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/) for more examples.\\n\\n## Working with untyped notes\\n\\nYou can use "},{"kind":"code","text":"`notes<T>()`"},{"kind":"text","text":" without parameterising it with an [interface](https://www.typescriptlang.org/docs/handbook/interfaces.html)\\ndescribing the structure of your notes.\\n\\n**Note:** this approach _is not type-safe_ and the type-safe alternative presented below should be used in most cases.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\';\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad())\\n  .attemptsTo(\\n    notes().set(\'my_note\', \'some value\'),\\n\\n    Log.the(notes().get(\'my_note\')),\\n    // emits \\"some value\\"\\n\\n    Log.the(notes().get(\'my_note\').toLocaleUpperCase()),\\n    // emits \\"SOME VALUE\\"\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Working with typed notes\\n\\nThe **recommended** way to use "},{"kind":"code","text":"`notes<T>()`"},{"kind":"text","text":" is to parameterise it\\nwith an [interface](https://www.typescriptlang.org/docs/handbook/interfaces.html)\\ndescribing the structure of your notes.\\n\\n**Note:** this approach _is type-safe_.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\';\\n\\ninterface MyNotes {\\n  username: string;\\n  token?: string;     // optional value\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.with<MyNotes>({\\n    username: \'Leonard.McLaud@example.org\',\\n  }))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'token\', \'my-auth-token\')\\n\\n    Log.the(notes<MyNotes>().get(\'token\').length),\\n    // emits 13\\n\\n    Log.the(notes<MyNotes>().get(\'username\').toLocaleLowerCase()),\\n    // emits \'leonard.mclaud@example.org\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Checking if a note is present\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { isPresent } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.empty()))\\n  .attemptsTo(\\n    Check.whether(notes().get(\'token\'), isPresent())\\n     .andIfSo(\\n       Authenticate.using(notes().get(\'token\')),\\n     )\\n     .otherwise(\\n       SignIn.using(\'username\', \'password\'),\\n     )\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Working with complex data structures\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  recordedItems: string[];\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.with<MyNotes>({\\n    recordedItems: [],\\n  }))\\n  .attemptsTo(\\n     // push 3 items\\n     notes().get(\'recordedItems\').push(\'apples\'),\\n     notes().get(\'recordedItems\').push(\'cucumbers\'),\\n     notes().get(\'recordedItems\').push(\'bananas\'),\\n\\n     // use QuestionAdapter to access Array.sort()\\n     notes().get(\'recordedItems\').sort(),\\n\\n     Log.the(notes().get(\'recordedItems\')),\\n     // emits \'apples\', \'bananas\', \'cucumbers\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/)\\n- ["},{"kind":"code","text":"`Notepad.notes`"},{"kind":"text","text":"](/api/core/class/Notepad/#notes)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/notes.ts","line":118,"character":16}],"typeParameter":[{"id":928,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":896,"typeArguments":[{"type":"reference","target":928,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/notes","categories":[],"previousId":929,"nextId":75},{"id":1067,"name":"AnswersQuestions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can answer a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) about the system under test.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":1068,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":19,"character":4}],"signatures":[{"id":1069,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) evaluate an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand return the value it holds."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":19,"character":4}],"typeParameter":[{"id":1070,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1071,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1070,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1070,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[1068]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":13,"character":17}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"}],"permalink":"/api/core/interface/AnswersQuestions","categories":[],"previousId":710,"nextId":144},{"id":1072,"name":"ChainableMetaQuestion","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A chainable meta-question is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be answered\\nin the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable),\\nand form a chain of transformations.\\n\\n[Meta-questions](/api/core/interface/MetaQuestion/) are typically used when filtering a ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"children":[{"id":1073,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":29,"character":4}],"signatures":[{"id":1074,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand returns another "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" ready for further chaining.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":29,"character":4}],"parameters":[{"id":1075,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1078,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":1079,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":1078,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1079,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]},"overwrites":{"type":"reference","target":1563,"name":"MetaQuestion.of"}}],"overwrites":{"type":"reference","target":1562,"name":"MetaQuestion.of"}},{"id":1076,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"signatures":[{"id":1077,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of this ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/),\\ntypically involving the description of the subject.\\n\\nFor example, a description of a meta question obout \\"the text of an element\\"\\nwould be "},{"kind":"code","text":"`text of ${ element.toString() }`"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1566,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":1565,"name":"MetaQuestion.toString"}}],"groups":[{"title":"Methods","children":[1073,1076]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":17,"character":17}],"typeParameters":[{"id":1078,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1079,"name":"Returned_Question_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":957,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"extendedTypes":[{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1078,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":1079,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":1078,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1079,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}],"name":"MetaQuestion","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":1426,"name":"MetaList"}],"permalink":"/api/core/interface/ChainableMetaQuestion","categories":[],"previousId":1949,"nextId":1131},{"id":1080,"name":"Check","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A [flow control statement](https://en.wikipedia.org/wiki/Control_flow)\\nthat enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to decide between two alternate series of [activities](/api/core/class/Activity/).\\n\\nThink of it as a Screenplay Pattern equivalent of the traditional "},{"kind":"code","text":"`if`"},{"kind":"text","text":" statement.\\n\\n## Choose between two alternative sequences of activities\\n\\n"},{"kind":"code","text":"```ts\\nimport { equals } from \'@serenity-js/assertions\'\\nimport { actorCalled, Check } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Chuck\').attemptsTo(\\n  Check.whether(process.env.MODE, equals(\'prod\'))\\n    .andIfSo(\\n      LogInAsProdUser(),\\n    )\\n    .otherwise(\\n      LogInAsTestUser(),\\n    )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Perform a sequence of activities when a condition is met\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check } from \'@serenity-js/core\'\\nimport { isVisible } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Chuck\').attemptsTo(\\n  Check.whether(CookieConsentBanner(), isVisible())\\n    .andIfSo(\\n        AcceptNecessaryCookies(),\\n    )\\n)\\n```"}]},"children":[{"id":1081,"name":"whether","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":11}],"signatures":[{"id":1082,"name":"whether","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":11}],"typeParameter":[{"id":1083,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1084,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1083,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1085,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1083,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1086,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1087,"name":"andIfSo","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":107}],"type":{"type":"reflection","declaration":{"id":1088,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":116}],"signatures":[{"id":1089,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":116}],"parameters":[{"id":1090,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1080,"typeArguments":[{"type":"reference","target":1083,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Check","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1087]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":105}]}}}]},{"id":1116,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1117,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1657,"name":"Task.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":1656,"name":"Task.instantiationLocation"}},{"id":1109,"name":"otherwise","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":71,"character":4}],"signatures":[{"id":1110,"name":"otherwise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":71,"character":4}],"parameters":[{"id":1111,"name":"alternativeActivities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of [activities](/api/core/class/Activity/) to perform when the ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) is not met."}]},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"}}]},{"id":1112,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":78,"character":10}],"signatures":[{"id":1113,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":78,"character":10}],"parameters":[{"id":1114,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)"}]},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":623,"name":"PerformsActivities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":1653,"name":"Task.performAs"}}],"overwrites":{"type":"reference","target":1652,"name":"Task.performAs"}},{"id":1118,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1119,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1120,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1121,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1122,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1122]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1659,"name":"Task.describedBy"}}],"inheritedFrom":{"type":"reference","target":1658,"name":"Task.describedBy"}},{"id":1128,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1129,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1669,"name":"Task.toString"}}],"inheritedFrom":{"type":"reference","target":1668,"name":"Task.toString"}}],"groups":[{"title":"Methods","children":[1081,1116,1109,1112,1118,1128]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":49,"character":13}],"typeParameters":[{"id":1130,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"}],"permalink":"/api/core/class/Check","categories":[],"previousId":775,"nextId":502},{"id":1131,"name":"Describable","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"children":[{"id":1135,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1136,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1137,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1138,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1139,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1139]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1145,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1146,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[1135,1145]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":11,"character":22}],"extendedBy":[{"type":"reference","target":628,"name":"Activity"},{"type":"reference","target":957,"name":"Question"},{"type":"reference","target":1156,"name":"Expectation"}],"permalink":"/api/core/class/Describable","categories":[],"previousId":1072,"nextId":1148},{"id":1148,"name":"DescriptionFormattingOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options for ["},{"kind":"code","text":"`Question.formattedValue`"},{"kind":"text","text":"](/api/core/class/Question/#formattedValue) and\\nthe ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/the/) function."}]},"children":[{"id":1149,"name":"maxLength","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The maximum length of the string representation of the value.\\nString representations longer than this value will be truncated and appended with an ellipsis."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/DescriptionFormattingOptions.ts","line":12,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1149]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/DescriptionFormattingOptions.ts","line":7,"character":17}],"permalink":"/api/core/interface/DescriptionFormattingOptions","categories":[],"previousId":1131,"nextId":1306},{"id":1150,"name":"Predicate","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":14,"character":12}],"typeParameters":[{"id":1155,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reflection","declaration":{"id":1151,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":14,"character":32}],"signatures":[{"id":1152,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1153,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}},{"id":1154,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1155,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"}]}}]}},"permalink":"/api/core#Predicate","categories":[],"previousId":446,"nextId":1156},{"id":1156,"name":"Expectation","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Defines an expectation to be used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until),\\n["},{"kind":"code","text":"`Check.whether`"},{"kind":"text","text":"](/api/core/class/Check/#whether),\\n["},{"kind":"code","text":"`Ensure.that`"},{"kind":"text","text":"](/api/assertions/class/Ensure/#that)\\nand as part of the Page Element Query Language with ["},{"kind":"code","text":"`PageElements.where`"},{"kind":"text","text":"](/api/web/class/PageElements/#where)\\nand ["},{"kind":"code","text":"`List.where`"},{"kind":"text","text":"](/api/core/class/List/#where)."}]},"children":[{"id":1157,"name":"define","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":115,"character":11}],"signatures":[{"id":1158,"name":"define","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A factory method to that makes defining custom [expectations](/api/core/class/Expectation/) easier\\n\\n#### Defining a custom expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { Expectation } from \'@serenity-js/core\'\\nimport { PageElement } from \'@serenity-js/web\'\\n\\nconst isEmpty = Expectation.define(\\n  \'isEmpty\',         // name of the expectation function to be used when producing an AssertionError\\n  \'become empty\',    // human-readable description of the relationship between expected and actual values\\n  async (actual: PageElement) => {\\n    const value = await actual.value();\\n    return value.length === 0;\\n  }\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in an assertion\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Clear, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Clear.the(nameField()),\\n  Ensure.that(nameField(), isEmpty())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a control flow statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Check, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Check.whether(nameField(), isEmpty())\\n    .andIfSo(\\n      Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a synchronisation statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n\\n  Wait.upTo(Duration.ofSeconds(2))\\n    .until(nameField(), not(isEmpty())),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":115,"character":11}],"typeParameter":[{"id":1159,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1160,"name":"PredicateArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":1161,"name":"functionName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the expectation function to be used when producing an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1162,"name":"relationship","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the relationship between the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" values.\\n Used when reporting [activities](/api/core/class/Activity/) performed by an [actor](/api/core/class/Actor/)"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1163,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":117,"character":23}],"signatures":[{"id":1164,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":117,"character":23}],"parameters":[{"id":1165,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","target":1160,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AnswerableArguments","package":"@serenity-js/core"}}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}]}},{"id":1166,"name":"predicate","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1167,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":118,"character":19}],"signatures":[{"id":1168,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":118,"character":19}],"parameters":[{"id":1169,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1159,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":1170,"name":"predicateArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":1160,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reflection","declaration":{"id":1171,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":119,"character":7}],"signatures":[{"id":1172,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":119,"character":7}],"parameters":[{"id":1173,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","target":1160,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AnswerableArguments","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1159,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}]},{"id":1174,"name":"thatActualShould","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":11}],"signatures":[{"id":1175,"name":"thatActualShould","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to define a simple ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n\\n#### Simple parameterised expectation\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Expectation } from \'@serenity-js/core\'\\n import { Ensure } from \'@serenity-js/assertions\'\\n\\n function isDivisibleBy(expected: Answerable<number>): Expectation<number> {\\n     return Expectation.thatActualShould<number, number>(\'have value divisible by\', expected)\\n         .soThat((actualValue, expectedValue) => actualValue % expectedValue === 0);\\n }\\n\\n await actorCalled(\'Erica\').attemptsTo(\\n     Ensure.that(4, isDivisibleBy(2)),\\n )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":11}],"typeParameter":[{"id":1176,"name":"Expected_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1177,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1178,"name":"relationshipName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the relationship between the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":". Use format "},{"kind":"code","text":"`have value <adjective>`"},{"kind":"text","text":"\\n so that the description works in both positive and negative contexts, e.g. "},{"kind":"code","text":"`Waited until 5 does have value greater than 2`"},{"kind":"text","text":",\\n "},{"kind":"code","text":"`Expected 5 to not have value greater than 2`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":1179,"name":"expectedValue","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1176,"name":"Expected_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1180,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1181,"name":"soThat","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":8}],"type":{"type":"reflection","declaration":{"id":1182,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":16}],"signatures":[{"id":1183,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":16}],"parameters":[{"id":1184,"name":"simplifiedPredicate","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1185,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":38}],"signatures":[{"id":1186,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":38}],"parameters":[{"id":1187,"name":"actualValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1177,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":1188,"name":"expectedValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1176,"name":"Expected_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1177,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1181]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":126}]}}}]},{"id":1189,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":11}],"signatures":[{"id":1190,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to compose [expectations](/api/core/class/Expectation/).\\n\\n#### Composing [expectations](/api/core/class/Expectation/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation } from \'@serenity-js/core\'\\nimport { Ensure, and, or, isGreaterThan, isLessThan, equals  } from \'@serenity-js/assertions\'\\n\\nfunction isWithin(lowerBound: number, upperBound: number) {\\n  return Expectation\\n    .to(`have value within ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(isGreaterThan(lowerBound), equals(lowerBound)),\\n        or(isLessThan(upperBound), equals(upperBound)),\\n      )\\n    )\\n }\\n\\n await actorCalled(\'Erica\').attemptsTo(\\n     Ensure.that(5, isWithin(3, 6)),\\n )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":11}],"typeParameter":[{"id":1191,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1192,"name":"relationshipName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the relationship between the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":". Use format "},{"kind":"code","text":"`have value <adjective>`"},{"kind":"text","text":"\\n so that the description works in both positive and negative contexts, e.g. "},{"kind":"code","text":"`Waited until 5 does have value greater than 2`"},{"kind":"text","text":",\\n "},{"kind":"code","text":"`Expected 5 to not have value greater than 2`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":1193,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1194,"name":"soThatActual","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":8}],"type":{"type":"reflection","declaration":{"id":1195,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":22}],"signatures":[{"id":1196,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":22}],"parameters":[{"id":1197,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1191,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1191,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1194]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":54}]}}}]},{"id":1212,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1213,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1214,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1215,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1216,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1216]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1136,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1135,"name":"Describable.describedBy"}},{"id":1222,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1223,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1146,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1145,"name":"Describable.toString"}},{"id":1206,"name":"isMetFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":267,"character":4}],"signatures":[{"id":1207,"name":"isMetFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/)\\nindicating that the [expectation was met](/api/core/class/ExpectationMet/)\\nor that the [expectation was not met](/api/core/class/ExpectationNotMet/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":267,"character":4}],"parameters":[{"id":1208,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1224,"name":"Actual","package":"@serenity-js/core","qualifiedName":"Expectation.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1209,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":274,"character":4}],"signatures":[{"id":1210,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":274,"character":4}],"parameters":[{"id":1211,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"this"}}]}],"groups":[{"title":"Methods","children":[1157,1174,1189,1212,1222,1206,1209]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":28,"character":13}],"typeParameters":[{"id":1224,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1131,"name":"Describable","package":"@serenity-js/core"}],"permalink":"/api/core/class/Expectation","categories":[],"previousId":1150,"nextId":1225},{"id":1306,"name":"List","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style wrapper around ["},{"kind":"code","text":"`Array`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)\\nand array-like structures - see ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)."}]},"children":[{"id":1307,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":22,"character":11},{"fileName":"packages/core/src/screenplay/questions/List.ts","line":23,"character":11},{"fileName":"packages/core/src/screenplay/questions/List.ts","line":24,"character":11}],"signatures":[{"id":1308,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":22,"character":11}],"typeParameter":[{"id":1309,"name":"IT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1310,"name":"CT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1311,"name":"RQT","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1309,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1309,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Question","package":"@serenity-js/core"}]}}],"parameters":[{"id":1312,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1309,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":1310,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":1311,"name":"RQT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1310,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":1309,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"}},{"id":1313,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":23,"character":11}],"typeParameter":[{"id":1314,"name":"IT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1315,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1314,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1306,"typeArguments":[{"type":"reference","target":1314,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1403,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":1404,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":1405,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":1025,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":1024,"name":"Question.describedAs"}},{"id":1406,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":1407,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":1408,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1409,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1410,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":1411,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":1412,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1028,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":1027,"name":"Question.as"}},{"id":1413,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1414,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1415,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1416,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1417,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1417]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1035,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":1034,"name":"Question.describedBy"}},{"id":1423,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1424,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1045,"name":"Question.toString"}}],"inheritedFrom":{"type":"reference","target":1044,"name":"Question.toString"}},{"id":1365,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":32,"character":4}],"signatures":[{"id":1366,"name":"new List","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":32,"character":4}],"typeParameter":[{"id":1367,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1368,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1306,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<Item_Type>>>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<Item_Type>>>.constructor"}},{"id":1371,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"signatures":[{"id":1372,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"parameters":[{"id":1373,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1374,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"signatures":[{"id":1375,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"parameters":[{"id":1376,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1551,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":1377,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":1378,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"}}]},{"id":1379,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":40,"character":13}],"signatures":[{"id":1380,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":40,"character":13}],"typeParameter":[{"id":1381,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1382,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1381,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1381,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1306,"typeArguments":[{"type":"reference","target":1381,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1383,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":44,"character":13}],"signatures":[{"id":1384,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":44,"character":13}],"typeParameter":[{"id":1385,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1386,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1385,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1385,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":1387,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1385,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1306,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1388,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":49,"character":13}],"signatures":[{"id":1389,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":49,"character":13}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1390,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":51,"character":13}],"signatures":[{"id":1391,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":51,"character":13}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1392,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":53,"character":13}],"signatures":[{"id":1393,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":53,"character":13}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1394,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":55,"character":13}],"signatures":[{"id":1395,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":55,"character":13}],"parameters":[{"id":1396,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1397,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"signatures":[{"id":1398,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"parameters":[{"id":1399,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":1022,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":1021,"name":"Question.answeredBy"}}],"groups":[{"title":"Constructors","children":[1365]},{"title":"Methods","children":[1307,1403,1406,1413,1423,1371,1379,1383,1388,1390,1392,1394,1397]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":19,"character":22}],"typeParameters":[{"id":1425,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1426,"name":"MetaList"}],"permalink":"/api/core/class/List","categories":[],"previousId":1148,"nextId":1426},{"id":1426,"name":"MetaList","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style wrapper around\\na ["},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":"](/api/core/interface/ChainableMetaQuestion/) representing a collection\\nthat can be resolved in "},{"kind":"code","text":"`Supported_Context_Type`"},{"kind":"text","text":" of another ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/).\\n\\nFor example, ["},{"kind":"code","text":"`PageElements.located`"},{"kind":"text","text":"](/api/web/class/PageElements/#located) returns "},{"kind":"code","text":"`MetaList<PageElement>`"},{"kind":"text","text":",\\nwhich allows for the collection of page elements to be resolved in the context\\nof dynamically-provided root element.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { By, PageElements, PageElement } from \'@serenity-js/web\'\\n\\nconst firstLabel = () =>\\n  PageElements.located(By.css(\'label\'))\\n     .first()\\n     .describedAs(\'first label\')\\n\\nconst exampleForm = () =>\\n  PageElement.located(By.css(\'form#example1\'))\\n     .describedAs(\'example form\')\\n\\nconst anotherExampleForm = () =>\\n  PageElement.located(By.css(\'form#example2\'))\\n     .describedAs(\'another example form\')\\n\\n// Next, you can compose the above questions dynamically with various \\"contexts\\":\\n//   firstLabel().of(exampleForm())\\n//   firstLabel().of(anotherExampleForm())\\n```"}]},"children":[{"id":1527,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":1528,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":1529,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":1404,"name":"List.describedAs"}}],"inheritedFrom":{"type":"reference","target":1403,"name":"List.describedAs"}},{"id":1530,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":1531,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":1532,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1533,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1534,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":1535,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":1536,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1407,"name":"List.as"}}],"inheritedFrom":{"type":"reference","target":1406,"name":"List.as"}},{"id":1537,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1538,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1539,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1540,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1541,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1541]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1414,"name":"List.describedBy"}}],"inheritedFrom":{"type":"reference","target":1413,"name":"List.describedBy"}},{"id":1547,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1548,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1424,"name":"List.toString"},"implementationOf":{"type":"reference","target":1077,"name":"ChainableMetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":1423,"name":"List.toString"},"implementationOf":{"type":"reference","target":1076,"name":"ChainableMetaQuestion.toString"}},{"id":1513,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"signatures":[{"id":1514,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"parameters":[{"id":1515,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1516,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"signatures":[{"id":1517,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"parameters":[{"id":1518,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1551,"typeArguments":[{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":1519,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":1520,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1372,"name":"List.forEach"}}],"inheritedFrom":{"type":"reference","target":1371,"name":"List.forEach"}},{"id":1521,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"signatures":[{"id":1522,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"parameters":[{"id":1523,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1398,"name":"List.answeredBy"}}],"inheritedFrom":{"type":"reference","target":1397,"name":"List.answeredBy"}},{"id":1485,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":190,"character":4}],"signatures":[{"id":1486,"name":"new MetaList","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":190,"character":4}],"typeParameter":[{"id":1487,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1488,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1489,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Question","package":"@serenity-js/core"}]}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1366,"name":"List.constructor"}}],"overwrites":{"type":"reference","target":1365,"name":"List.constructor"}},{"id":1491,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":196,"character":4}],"signatures":[{"id":1492,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand returns another "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" ready for further chaining.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":196,"character":4}],"parameters":[{"id":1493,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1074,"name":"ChainableMetaQuestion.of"}}],"implementationOf":{"type":"reference","target":1073,"name":"ChainableMetaQuestion.of"}},{"id":1494,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":202,"character":13}],"signatures":[{"id":1495,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":202,"character":13}],"typeParameter":[{"id":1496,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1497,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1496,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1496,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1496,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1380,"name":"List.eachMappedTo"}}],"overwrites":{"type":"reference","target":1379,"name":"List.eachMappedTo"}},{"id":1498,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":210,"character":13}],"signatures":[{"id":1499,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":210,"character":13}],"typeParameter":[{"id":1500,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1501,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1500,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1500,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":1502,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1500,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1384,"name":"List.where"}}],"overwrites":{"type":"reference","target":1383,"name":"List.where"}},{"id":1503,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":219,"character":13}],"signatures":[{"id":1504,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":219,"character":13}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"number"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1389,"name":"List.count"}}],"overwrites":{"type":"reference","target":1388,"name":"List.count"}},{"id":1505,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":229,"character":13}],"signatures":[{"id":1506,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":229,"character":13}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1391,"name":"List.first"}}],"overwrites":{"type":"reference","target":1390,"name":"List.first"}},{"id":1507,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":244,"character":13}],"signatures":[{"id":1508,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":244,"character":13}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1393,"name":"List.last"}}],"overwrites":{"type":"reference","target":1392,"name":"List.last"}},{"id":1509,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":259,"character":13}],"signatures":[{"id":1510,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":259,"character":13}],"parameters":[{"id":1511,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1395,"name":"List.nth"}}],"overwrites":{"type":"reference","target":1394,"name":"List.nth"}}],"groups":[{"title":"Constructors","children":[1485]},{"title":"Methods","children":[1527,1530,1537,1547,1513,1521,1491,1494,1498,1503,1505,1507,1509]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":186,"character":13}],"typeParameters":[{"id":1549,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1550,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1306,"typeArguments":[{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/core/class/MetaList","categories":[],"previousId":1306,"nextId":1551},{"id":1551,"name":"CurrentItem","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":1552,"name":"item","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":400,"character":4}],"type":{"type":"reference","target":1554,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"CurrentItem.Item_Type","refersToTypeParameter":true}},{"id":1553,"name":"actor","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":401,"character":4}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[1552,1553]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":399,"character":17}],"typeParameters":[{"id":1554,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/CurrentItem","categories":[],"previousId":1426,"nextId":1555},{"id":1555,"name":"Masked","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This question masks sensitive data handled by the actors and prevents\\nit from being shown in Serenity/JS reports and console logs.\\nYou should use it to wrap passwords, secret tokens, phone numbers,\\ncredit card numbers, or any other personally identifiable information (PII).\\nHowever, even though the wrapped value is masked in the output,\\nyou can still retrieve the unmasked value by making the actor answer\\nthe question in your custom interactions."}]},"children":[{"id":1556,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":37,"character":11}],"signatures":[{"id":1557,"name":"valueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the value of a sensitive parameter and mask it in any report.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nawait actorCalled(\'John\')\\n  .attemptsTo(\\n    Enter.theValue(Masked.valueOf(\'your little secret\')).into(Form.exampleInput())\\n  );\\n```"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) representing the masked value."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":37,"character":11}],"parameters":[{"id":1558,"name":"parameter","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) representing the masked value."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1559,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1560,"name":"new Masked","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1555,"name":"Masked","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1559]},{"title":"Methods","children":[1556]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":15,"character":13}],"permalink":"/api/core/class/Masked","categories":[],"previousId":1551,"nextId":1561},{"id":1561,"name":"MetaQuestion","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A meta-question is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that can be answered\\nin the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable),\\ntypically to transform its value.\\n\\nFor example, the question ["},{"kind":"code","text":"`Text.of`"},{"kind":"text","text":"](/api/web/class/Text/#of) can be answered in the context\\nof a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) to return its text content.\\n\\n[Meta-questions](/api/core/interface/MetaQuestion/) are typically used when filtering a ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"children":[{"id":1562,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":27,"character":4}],"signatures":[{"id":1563,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":27,"character":4}],"parameters":[{"id":1564,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1567,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaQuestion.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1568,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"MetaQuestion.Returned_Question_Type","refersToTypeParameter":true}}]},{"id":1565,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"signatures":[{"id":1566,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of this ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/),\\ntypically involving the description of the subject.\\n\\nFor example, a description of a meta question obout \\"the text of an element\\"\\nwould be "},{"kind":"code","text":"`text of ${ element.toString() }`"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[1562,1565]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":19,"character":17}],"typeParameters":[{"id":1567,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1568,"name":"Returned_Question_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":957,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"extendedBy":[{"type":"reference","target":1072,"name":"ChainableMetaQuestion"}],"permalink":"/api/core/interface/MetaQuestion","categories":[],"previousId":1555,"nextId":1569},{"id":1569,"name":"Numeric","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides methods to perform calculations on numeric values returned by other [questions](/api/core/class/Question/).\\n\\n## Example\\n\\nThe examples in this section demonstrate interacting with an HTML widget representing a price list.\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"price-list\\">\\n    <li class=\\"item\\">\\n        <span class=\\"name\\">apples</span>\\n        <span class=\\"quantity\\">5</span>\\n        <span class=\\"price\\">\xa32.25</span>\\n    </li>\\n    <li class=\\"item\\">\\n        <span class=\\"name\\">apricots</span>\\n        <span class=\\"quantity\\">4</span>\\n        <span class=\\"price\\">\xa33.70</span>\\n    </li>\\n    <li class=\\"item\\">\\n        <span class=\\"name\\">bananas</span>\\n        <span class=\\"quantity\\">2</span>\\n        <span class=\\"price\\">\xa31.50</span>\\n    </li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n### Lean Page Objects\\n\\nTo represent our example HTML widget,\\nwe follow the [Lean Page Objects pattern](/handbook/web-testing/page-objects-pattern/)\\nto define the "},{"kind":"code","text":"`PriceList`"},{"kind":"text","text":" and "},{"kind":"code","text":"`PriceListItem`"},{"kind":"text","text":" classes\\nand use the Serenity/JS [Page Element Query Language (PEQL)](/handbook/web-testing/page-element-query-language/)\\nto identify the elements of interest.\\n\\n"},{"kind":"code","text":"```ts\\n// ui/price-list.ts\\n\\nimport { PageElement, PageElements, By } from \'@serenity-js/web\'\\n\\nexport class PriceList {\\n  static container = () =>\\n     PageElement.located(By.id(\'price-list\'))\\n         .describedAs(\'price list\')\\n\\n  static items = () =>\\n     PageElements.located(PriceListItem.containerSelector())\\n         .of(this.container())\\n         .describedAs(\'items\')\\n}\\n\\nexport class PriceListItem {\\n  static containerSelector = () =>\\n    By.css(\'.item\')\\n\\n  static container = () =>\\n    PageElement.located(this.containerSelector())\\n      .describedAs(\'item\')\\n\\n  static name = () =>\\n    PageElement.located(By.css(\'.name\'))\\n      .of(this.container())\\n      .describedAs(\'name\')\\n\\n  static quantity = () =>\\n    PageElement.located(By.css(\'.quantity\'))\\n      .of(this.container())\\n      .describedAs(\'quantity\')\\n\\n  static price = () =>\\n    PageElement.located(By.css(\'.price\'))\\n      .of(this.container())\\n      .describedAs(\'price\')\\n}\\n```"}]},"children":[{"id":1570,"name":"sum","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":276,"character":11}],"signatures":[{"id":1571,"name":"sum","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that sums up the values provided\\nand throws if any of the values is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Adding static numbers\\n\\nThe most basic example of using the "},{"kind":"code","text":"`Numeric.sum`"},{"kind":"text","text":" method is to add up a few numbers.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(1, 2, 3),\\n    equals(6),\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\nThe numbers can be provided individually, as an array, or as a combination of both.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum([ 1, 2 ], 3, [ 4, 5 ]),\\n    equals(15),\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Adding numbers returned by other questions\\n\\nApart from adding static numbers, you can also add numbers returned by other questions.\\nThis is particularly useful when you need to calculate the sum of numbers extracted from a list of UI elements\\nor from an API response.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst myNumber = () =>\\n  Question.about(\'my number\', actor => 42)\\n\\nconst myArrayOfNumbers = () =>\\n  Question.about(\'my array of numbers\', actor => [ 1, 2, 3 ])\\n\\nconst myObjectWithNumbers = () =>\\n  Question.about(\'my object with numbers\', actor => ({ a: 1, b: 2, c: 3 }))\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(\\n      myNumber(),            // a question returning a number\\n      myArrayOfNumbers(),    // a question returning an array of numbers\\n    ),\\n    equals(48),\\n  ),\\n  Ensure.that(\\n    Numeric.sum(\\n      myObjectWithNumbers()  // a question returning an object with numbers\\n         .as(Object.values), // from which we extract the numeric values\\n    ),\\n    equals(6),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\nOf course, you can also mix and match static numbers with numbers returned by questions.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst myObjectWithNumbers = () =>\\n  Question.about(\'my object with numbers\', actor => ({ a: 1, b: 2, c: 3 }))\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(\\n      myObjectWithNumbers().as(Object.values),\\n      [ 4, 5 ],\\n      6,\\n    ),\\n    equals(21),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Adding numbers extracted from a UI\\n\\nTo add numbers extracted from a UI:\\n- use the ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement) and ["},{"kind":"code","text":"`PageElements`"},{"kind":"text","text":"](/api/web/class/PageElements) classes to identify the elements of interest,\\n- use the ["},{"kind":"code","text":"`Text.of`"},{"kind":"text","text":"](/api/web/class/Text/) or ["},{"kind":"code","text":"`Text.ofAll`"},{"kind":"text","text":"](/api/web/class/Text/) questions to extract the text of the element or elements,\\n- and then interpret this text as number using either the ["},{"kind":"code","text":"`.as(Number)`"},{"kind":"text","text":"](/api/core/class/Question/#as) mapping function,\\n  or the ["},{"kind":"code","text":"`Numeric.intValue()`"},{"kind":"text","text":"](/api/core/class/Numeric/#intValue) or ["},{"kind":"code","text":"`Numeric.floatValue()`"},{"kind":"text","text":"](/api/core/class/Numeric/#floatValue) meta-questions.\\n\\nFor example, we could calculate the sum of quantities of items in our example price list by specifying each element explicitly\\nand mapping its text to ["},{"kind":"code","text":"`Number`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number):\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(\\n      Text.of(PriceListItem.quantity().of(PriceList.items().first())).as(Number),\\n      Text.of(PriceListItem.quantity().of(PriceList.items().at(1))).as(Number),\\n      Text.of(PriceListItem.quantity().of(PriceList.items().last())).as(Number),\\n    ),\\n    equals(11),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\nA more elegant approach would be to use the Serenity/JS [Page Element Query Language (PEQL)](/handbook/web-testing/page-element-query-language/#mapping-page-elements-in-a-collection)\\nto map each item in the collection to its quantity and then calculate the sum.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(\\n      PriceList.items()                      // get all the li.item elements\\n        .eachMappedTo(\\n          Text.of(PriceListItem.quantity())  // extract the text of the .quantity element\\n        )\\n        .eachMappedTo(                       // interpret the quantity as an integer value\\n          Numeric.intValue(),\\n        ),\\n    ),\\n    equals(11),                              // 5 apples, 4 apricots, 2 bananas\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\nUsing PEQL allows us to express the intent more concisely and, for example,\\nintroduce helper functions that limit the scope of the operation to a subset of elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, Numeric, the } from \'@serenity-js/core\'\\nimport { Ensure, equals, startsWith } from \'@serenity-js/assertions\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nconst quantitiesOfItemsWhichName = (expectation: Expectation<string>) =>\\n  PriceList.items()                      // get all the li.item elements\\n    .where(                              // leave only those which name matches the expectation\\n       Text.of(PriceListItem.name()),\\n       expectation\\n    )\\n    .eachMappedTo(\\n      Text.of(PriceListItem.quantity())  // extract the text of the .quantity element\\n    )\\n    .eachMappedTo(                       // interpret the quantity as an integer value\\n      Numeric.intValue(),\\n    )\\n    .describedAs(the`quantities of items which name does ${ expectation }`)\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(\\n      quantitiesOfItemsWhichName(startsWith(\'ap\')),  // apples and apricots\\n    ),\\n    equals(9),                                       // 5 apples, 4 apricots\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":276,"character":11}],"parameters":[{"id":1572,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1573,"name":"difference","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":316,"character":11}],"signatures":[{"id":1574,"name":"difference","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)  that calculates the difference between\\ntwo numbers and throws if any of the values is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Subtracting numbers\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.difference(\\n      Text.of(PriceListItem.quantity().of(PriceList.items().first())).as(Number),    // 5 (apples)\\n      2,                                                                             // - 2\\n    ),\\n    equals(3),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":316,"character":11}],"parameters":[{"id":1575,"name":"minuend","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1576,"name":"subtrahend","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1577,"name":"ceiling","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":355,"character":11}],"signatures":[{"id":1578,"name":"ceiling","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that calculates\\nthe ceiling of a number and throws if the value is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Calculating the ceiling of a number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.ceiling().of(\\n      Text.of(PriceListItem.price().of(PriceList.items().first()))   // \'\xa32.25\' (apples)\\n         .replace(\'\xa3\', \'\')                                           // \'2.25\'\\n         .as(Number.parseFloat),                                     // 2.25\\n    ),\\n    equals(3),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":355,"character":11}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1579,"name":"floor","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":395,"character":11}],"signatures":[{"id":1580,"name":"floor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that calculates\\nthe floor of a number and throws if the value is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Calculating the floor of a number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.floor().of(\\n      Text.of(PriceListItem.price().of(PriceList.items().first()))   // \'\xa32.25\' (apples)\\n         .replace(\'\xa3\', \'\')                                           // \'2.25\'\\n         .as(Number.parseFloat),                                     // 2.25\\n    ),\\n    equals(2),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":395,"character":11}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1581,"name":"max","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":441,"character":11}],"signatures":[{"id":1582,"name":"max","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that calculates\\nthe maximum value in the lists of numbers provided and throws if any of the values is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Calculating the maximum value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.max(\\n      PriceList.items()                      // get all the li.item elements\\n        .eachMappedTo(\\n          Text.of(PriceListItem.quantity())  // extract the text of the .quantity element\\n        )\\n        .eachMappedTo(                       // interpret the quantity as an integer value\\n          Numeric.intValue(),\\n        ),\\n    ),\\n    equals(5),                               // 5 (apples)\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":441,"character":11}],"parameters":[{"id":1583,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1584,"name":"min","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":484,"character":11}],"signatures":[{"id":1585,"name":"min","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that calculates\\nthe minimum value in the lists of numbers provided and throws if any of the values is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Calculating the minimum value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.min(\\n      PriceList.items()                      // get all the li.item elements\\n        .eachMappedTo(\\n          Text.of(PriceListItem.quantity())  // extract the text of the .quantity element\\n        )\\n        .eachMappedTo(                       // interpret the quantity as an integer value\\n          Numeric.intValue(),\\n        ),\\n    ),\\n    equals(2),                               // 2 (bananas)\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":484,"character":11}],"parameters":[{"id":1586,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1587,"name":"intValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":528,"character":11}],"signatures":[{"id":1588,"name":"intValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that parses a string "},{"kind":"code","text":"`value`"},{"kind":"text","text":"\\nand returns an integer of the specified "},{"kind":"code","text":"`base`"},{"kind":"text","text":".\\nLeading whitespace in the value to parse argument is ignored.\\n\\n#### Parsing a string as an integer\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.intValue().of(\\n      Text.of(                           // \'5\' (apples)\\n        PriceListItem.quantity().of(\\n          PriceList.items().first()\\n        )\\n      )\\n    ),\\n    equals(5),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":528,"character":11}],"parameters":[{"id":1589,"name":"base","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An integer between 2 and 36 that represents the base in mathematical numeral systems of the string.\\n If base is undefined or 0, it is assumed to be 10 except when the number begins with the code unit pairs 0x or 0X, in which case a radix of 16 is assumed."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1590,"name":"bigIntValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":586,"character":11}],"signatures":[{"id":1591,"name":"bigIntValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that parses a string "},{"kind":"code","text":"`value`"},{"kind":"text","text":"\\nand returns a ["},{"kind":"code","text":"`BigInt`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt).\\nLeading whitespace in the value to parse argument is ignored.\\n\\n#### Parsing a string as a bigint\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.bigIntValue().of(\\n      Text.of(                                                  // \'5\' (apples)\\n        PriceListItem.quantity().of(PriceList.items().first())\\n      )\\n    ),\\n    equals(BigInt(\'5\')),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":586,"character":11}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1592,"name":"floatValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":636,"character":11}],"signatures":[{"id":1593,"name":"floatValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that parses a string "},{"kind":"code","text":"`value`"},{"kind":"text","text":"\\nand returns a floating-point number.\\n\\n#### Parsing a string as a floating point number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.floatValue().of(\\n      Text.of(                                                  // \'\xa32.25\'\\n          PriceListItem.price().of(PriceList.items().first())\\n      ).replace(\'\xa3\', \'\')                                        // \'2.25\'\\n    ),\\n    equals(2.25),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":636,"character":11}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1602,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1603,"name":"new Numeric","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1569,"name":"Numeric","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1602]},{"title":"Methods","children":[1570,1573,1577,1579,1581,1584,1587,1590,1592]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":89,"character":13}],"permalink":"/api/core/class/Numeric","categories":[],"previousId":1561,"nextId":1620},{"id":1620,"name":"Unanswered","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A placeholder value signifying that a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\nhas not been answered by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) when producing an ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/).\\nThis happens when Serenity/JS decides that answering a given question\\nwon\'t affect the outcome.\\n\\nFor example, making the actor answer questions about the expected value\\nand the actual value of each list item is unnecessary if we already know that the list itself is empty."}]},"children":[{"id":1621,"name":"isUnanswered","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":17,"character":11}],"signatures":[{"id":1622,"name":"isUnanswered","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":17,"character":11}],"parameters":[{"id":1623,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","target":1620,"name":"Unanswered","package":"@serenity-js/core"}}}]},{"id":1624,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1625,"name":"new Unanswered","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1620,"name":"Unanswered","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1630,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":21,"character":4}],"signatures":[{"id":1631,"name":"[custom]","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1626,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":25,"character":4}],"signatures":[{"id":1627,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1628,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":29,"character":4}],"signatures":[{"id":1629,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":29,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1632,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1633,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1634,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1624]},{"title":"Methods","children":[1621,1630,1626,1628,1632]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Unanswered","categories":[],"previousId":1569,"nextId":1604},{"id":1225,"name":"ExpectationDetails","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used with ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/) to describe an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) and the arguments it\'s been executed with."}]},"children":[{"id":1226,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":15,"character":11}],"signatures":[{"id":1227,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":15,"character":11}],"parameters":[{"id":1228,"name":"functionName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1229,"name":"functionArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"},{"type":"reference","target":1620,"name":"Unanswered","package":"@serenity-js/core"}]}}}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}}]},{"id":1230,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":19,"character":11}],"signatures":[{"id":1231,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":19,"character":11}],"parameters":[{"id":1232,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}}]},{"id":1237,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":36,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":1238,"name":"args","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":37,"character":24}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"},{"type":"reference","target":1620,"name":"Unanswered","package":"@serenity-js/core"}]}}},{"id":1239,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":44,"character":4}],"signatures":[{"id":1240,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":44,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1241,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":4}],"signatures":[{"id":1242,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":4}],"type":{"type":"reflection","declaration":{"id":1243,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1244,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":16}],"type":{"type":"intrinsic","name":"string"}},{"id":1245,"name":"args","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":30}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":1246,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1247,"name":"type","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":44}],"type":{"type":"intrinsic","name":"string"}},{"id":1248,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":58}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"}}],"groups":[{"title":"Properties","children":[1247,1248]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":42}]}}}}],"groups":[{"title":"Properties","children":[1244,1245]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":14}]}},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1249,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1250,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1251,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Properties","children":[1237,1238]},{"title":"Methods","children":[1226,1230,1239,1241,1249]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/ExpectationDetails","categories":[],"previousId":1156,"nextId":1252},{"id":1252,"name":"ExpectationMet","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) was met."}]},"children":[{"id":1253,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1254,"name":"new ExpectationMet","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1255,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1256,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1257,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1258,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1252,"name":"ExpectationMet","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1290,"name":"ExpectationOutcome.constructor"}}],"inheritedFrom":{"type":"reference","target":1289,"name":"ExpectationOutcome.constructor"}},{"id":1259,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1295,"name":"ExpectationOutcome.message"}},{"id":1260,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1296,"name":"ExpectationOutcome.expectation"}},{"id":1261,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1297,"name":"ExpectationOutcome.expected"}},{"id":1262,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1298,"name":"ExpectationOutcome.actual"}},{"id":1263,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1264,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1265,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1300,"name":"ExpectationOutcome.equals"}}],"inheritedFrom":{"type":"reference","target":1299,"name":"ExpectationOutcome.equals"}},{"id":1266,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1267,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1303,"name":"ExpectationOutcome.toString"}}],"inheritedFrom":{"type":"reference","target":1302,"name":"ExpectationOutcome.toString"}},{"id":1268,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1269,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":1305,"name":"ExpectationOutcome.toJSON"}}],"inheritedFrom":{"type":"reference","target":1304,"name":"ExpectationOutcome.toJSON"}}],"groups":[{"title":"Constructors","children":[1253]},{"title":"Properties","children":[1259,1260,1261,1262]},{"title":"Methods","children":[1263,1266,1268]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationMet.ts","line":8,"character":13}],"extendedTypes":[{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"permalink":"/api/core/class/ExpectationMet","categories":[],"previousId":1225,"nextId":1270},{"id":1270,"name":"ExpectationNotMet","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) was not met."}]},"children":[{"id":1271,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1272,"name":"new ExpectationNotMet","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1273,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1274,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1275,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1276,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1270,"name":"ExpectationNotMet","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1290,"name":"ExpectationOutcome.constructor"}}],"inheritedFrom":{"type":"reference","target":1289,"name":"ExpectationOutcome.constructor"}},{"id":1277,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1295,"name":"ExpectationOutcome.message"}},{"id":1278,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1296,"name":"ExpectationOutcome.expectation"}},{"id":1279,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1297,"name":"ExpectationOutcome.expected"}},{"id":1280,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1298,"name":"ExpectationOutcome.actual"}},{"id":1281,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1282,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1283,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1300,"name":"ExpectationOutcome.equals"}}],"inheritedFrom":{"type":"reference","target":1299,"name":"ExpectationOutcome.equals"}},{"id":1284,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1285,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1303,"name":"ExpectationOutcome.toString"}}],"inheritedFrom":{"type":"reference","target":1302,"name":"ExpectationOutcome.toString"}},{"id":1286,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1287,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":1305,"name":"ExpectationOutcome.toJSON"}}],"inheritedFrom":{"type":"reference","target":1304,"name":"ExpectationOutcome.toJSON"}}],"groups":[{"title":"Constructors","children":[1271]},{"title":"Properties","children":[1277,1278,1279,1280]},{"title":"Methods","children":[1281,1284,1286]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationNotMet.ts","line":8,"character":13}],"extendedTypes":[{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"permalink":"/api/core/class/ExpectationNotMet","categories":[],"previousId":1252,"nextId":1288},{"id":1288,"name":"ExpectationOutcome","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An outcome of an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/),\\nwhich could be either [met](/api/core/class/ExpectationMet/) or [not met](/api/core/class/ExpectationNotMet/)."}]},"children":[{"id":1289,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1290,"name":"new ExpectationOutcome","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1291,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1292,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1293,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1294,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1295,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":1296,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1297,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1298,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1299,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1300,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1301,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":1302,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1303,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1304,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1305,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[1289]},{"title":"Properties","children":[1295,1296,1297,1298]},{"title":"Methods","children":[1299,1302,1304]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":1252,"name":"ExpectationMet"},{"type":"reference","target":1270,"name":"ExpectationNotMet"}],"permalink":"/api/core/class/ExpectationOutcome","categories":[],"previousId":1270,"nextId":844},{"id":1604,"name":"the","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":16},{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":172,"character":16},{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":173,"character":16}],"signatures":[{"id":1605,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a single-line description of an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) by transforming\\na [template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates),\\nparameterised with [primitive data types](https://developer.mozilla.org/en-US/docs/Glossary/Primitive),\\n[complex data structures](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#objects),\\nor any other [answerables](/api/core/#Answerable),\\ninto a ["},{"kind":"code","text":"`QuestionAdapter<string>`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\nthat can be used with ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) and ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) methods.\\n\\n"},{"kind":"code","text":"```ts\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(the `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(\'(555) 123-4567\'),\\n  // reported as: Alice dials \\"(555) 123-4567\\"\\n)\\n```"},{"kind":"text","text":"\\n\\n## Trimming the output\\n\\nUse ["},{"kind":"code","text":"`DescriptionFormattingOptions`"},{"kind":"text","text":"](http://serenity-js.org/api/core/interface/DescriptionFormattingOptions/)\\nto trim the descriptions of template parameters.\\nBy default, the output is displayed in full.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Task, the } from \'@serenity-js/core\'\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(\'(555) 123-4567\'),\\n  // reported as: Alice dials \\"(555) 123-...\'\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with Questions\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with [questions](/api/core/class/Question/),\\nit retrieves their description by calling ["},{"kind":"code","text":"`Question.describedBy`"},{"kind":"text","text":"](/api/core/class/Question/#describedBy)\\nin the context of the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) performing the ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question, Task, the } from \'@serenity-js/core\'\\n\\nconst phoneNumber = (areaCode: string, centralOfficeCode: string, lineNumber: string) =>\\n Question.about(\'phone number\', actor => {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  })\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(phoneNumber(\'555\', \'123\', \'4567\'),\\n  // reported as: Alice dials phone number\\n)\\n```"},{"kind":"text","text":"\\n\\nIf you\'d like the question to be described using its formatted value instead of its description, use ["},{"kind":"code","text":"`Question.formattedValue`"},{"kind":"text","text":"](/api/core/class/Question/#formattedValue).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question, Task, the } from \'@serenity-js/core\'\\n\\nconst phoneNumber = (areaCode: string, centralOfficeCode: string, lineNumber: string) =>\\n  Question.about(\'phone number\', actor => {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  }).describedAs(Question.formattedValue())\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(phoneNumber(\'555\', \'123\', \'4567\'),\\n  // reported as: Alice dials \\"(555) 123-4567\\"\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with objects with a custom "},{"kind":"code","text":"`toString`"},{"kind":"text","text":" method\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with objects that have\\na custom ["},{"kind":"code","text":"`toString()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString) method,\\nor [answerables](/api/core/#Answerable) resolving to such objects, the "},{"kind":"code","text":"`toString()`"},{"kind":"text","text":" method is called to produce the resulting description.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\nclass PhoneNumber {\\n  constructor(\\n    private readonly areaCode: string,\\n    private readonly centralOfficeCode: string,\\n    private readonly lineNumber: string,\\n  ) {}\\n\\n  toString() {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  }\\n}\\n\\nconst dial = (phoneNumber: Answerable<PhoneNumber>) =>\\n Task.where(description `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(new PhoneNumber(\'555\', \'123\', \'4567\')),\\n  // reported as: Alice dials (555) 123-4567\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with objects without a custom "},{"kind":"code","text":"`toString`"},{"kind":"text","text":" method\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with complex objects that don\'t have a custom "},{"kind":"code","text":"`toString()`"},{"kind":"text","text":" method,\\nor ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)s resolving to such objects,\\nthe resulting description will contain a JSON-like string representation of the object.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\ninterface PhoneNumber {\\n  areaCode: string;\\n  centralOfficeCode: string;\\n  lineNumber: string;\\n}\\n\\nconst dial = (phoneNumber: Answerable<PhoneNumber>) =>\\n Task.where(the `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial({ areaCode: \'555\', centralOfficeCode: \'123\', lineNumber: \'4567\' }),\\n  // reported as: Alice dials { areaCode: \\"555\\", centralOfficeCode: \\"123\\", lineNumber: \\"4567\\" }\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with masked values\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with [masked values](/api/core/class/Masked/),\\nthe resulting description will contain a masked representation of the values.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(description `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(Masked.valueOf(\'(555) 123-4567\')),\\n  // reported as: Alice dials [a masked value]\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Question.describedAs`"},{"kind":"text","text":"](/api/core/class/Question/#describedAs)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":16}],"parameters":[{"id":1606,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1148,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1607,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":60}],"signatures":[{"id":1608,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"typeParameter":[{"id":1611,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1609,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1610,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1611,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"MetaQuestion","package":"@serenity-js/core"},{"type":"intrinsic","name":"any"}]}}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1611,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]}}},{"id":1612,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":172,"character":16}],"typeParameter":[{"id":1613,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1614,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1615,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1613,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/the","categories":[],"previousId":1620,"nextId":1616},{"id":1616,"name":"q","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":246,"character":16}],"signatures":[{"id":1617,"name":"q","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Serenity/JS Screenplay Pattern-flavour\\nof a [tagged template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates),\\n"},{"kind":"code","text":"`q`"},{"kind":"text","text":" is a tag function capable of resolving any "},{"kind":"code","text":"`Answerable<string>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Answerable<number>`"},{"kind":"text","text":"\\nyou parametrise it with, and returning a "},{"kind":"code","text":"`QuestionAdapter<string>`"},{"kind":"text","text":".\\n\\nUse "},{"kind":"code","text":"`q`"},{"kind":"text","text":" to concatenate "},{"kind":"code","text":"`string`"},{"kind":"text","text":" and "},{"kind":"code","text":"`number`"},{"kind":"text","text":" values returned from synchronous an asynchronous sources.\\n\\n## Interpolating questions\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\nimport { Text } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using a custom description\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`.describedAs(\'/articles/:id\')\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Transforming the interpolated string\\n\\nThe mechanism presented below relies on ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter).\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`.toLocaleLowerCase()\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Question.describedAs`"},{"kind":"text","text":"](/api/core/class/Question/#describedAs)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":246,"character":16}],"parameters":[{"id":1618,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1619,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/q","categories":[],"previousId":1604,"nextId":628},{"id":1946,"name":"TellsTime","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or a supporting class capable of telling\\nthe current wall clock time.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Serenity`"},{"kind":"text","text":"](/api/core/class/Serenity/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"children":[{"id":1947,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"signatures":[{"id":1948,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[1947]}],"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":14,"character":17}],"extendedBy":[{"type":"reference","target":2630,"name":"EmitsDomainEvents"}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"},{"type":"reference","target":2250,"name":"StageManager"}],"permalink":"/api/core/interface/TellsTime","categories":[],"previousId":2114,"nextId":1670},{"id":1670,"name":"ScheduleWork","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to schedule a callback function\\nto be executed with a delay, or until some condition is met.\\n\\nUsed internally by the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)."}],"modifierTags":["@experimental"]},"children":[{"id":1695,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":1696,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":528,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":527,"name":"Ability.abilityType"}},{"id":1678,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":20,"character":4}],"signatures":[{"id":1679,"name":"new ScheduleWork","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":20,"character":4}],"parameters":[{"id":1680,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"}},{"id":1681,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1670,"name":"ScheduleWork","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":524,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":523,"name":"Ability.constructor"}},{"id":1683,"name":"repeatUntil","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":29,"character":4}],"signatures":[{"id":1684,"name":"repeatUntil","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":29,"character":4}],"typeParameter":[{"id":1685,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1686,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1788,"typeArguments":[{"type":"reference","target":1685,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}},{"id":1687,"name":"limits","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1852,"typeArguments":[{"type":"reference","target":1685,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RepeatUntilLimits","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1685,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1688,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":36,"character":4}],"signatures":[{"id":1689,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":36,"character":4}],"parameters":[{"id":1690,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1691,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":40,"character":4}],"signatures":[{"id":1692,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Discards the resources associated with this ability."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":40,"character":4}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":573,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":572,"name":"Discardable.discard"}},{"id":1693,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":44,"character":13}],"signatures":[{"id":1694,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":44,"character":13}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":526,"name":"Ability.toJSON"}}],"overwrites":{"type":"reference","target":525,"name":"Ability.toJSON"}}],"groups":[{"title":"Constructors","children":[1678]},{"title":"Methods","children":[1695,1683,1688,1691,1693]}],"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":571,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/core/class/ScheduleWork","categories":[],"previousId":1946,"nextId":1697},{"id":1697,"name":"Wait","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`Wait`"},{"kind":"text","text":" is a synchronisation statement that instructs the [actor](/api/core/class/Actor/)\\nto wait before proceeding with their next [activity](/api/core/class/Activity/),\\neither for a set [duration](/api/core/class/Duration/), or until a given [expectation](/api/core/class/Expectation/) is met.\\n\\nYou can configure the timeout of the interaction to ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until):\\n- globally, using ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)\\n- locally, on a per-interaction basis using ["},{"kind":"code","text":"`Wait.upTo`"},{"kind":"text","text":"](/api/core/class/Wait/#upTo)\\n\\n:::tip Portable waiting\\nSerenity/JS implements "},{"kind":"code","text":"`Wait`"},{"kind":"text","text":" from scratch, so that the behaviour is consistent no matter the integration tool you use (Playwright, WebdriverIO, Selenium, etc.)\\nor the type of testing you do (Web, REST API, component testing, etc.)\\n:::\\n\\n## Wait with Web-based tests\\n\\n### Example widget\\n\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n    After about 1 second, the text will change from \'Loading...\' to \'Ready!\'\\n--\x3e\\n<h1 id=\\"status\\">Loading...</h1>\\n<script>\\n    (function () {\\n        setTimeout(function () {\\n            document.getElementById(\'status\').textContent = \'Ready!\'\\n        }, 1000);\\n    })();\\n<\/script>\\n```"},{"kind":"text","text":"\\n\\n### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nclass App {\\n  static status = () =>\\n     Text.of(PageElement.located(By.id(\'status\'))\\n         .describedAs(\'status widget\'))\\n }\\n```"},{"kind":"text","text":"\\n\\n### Waiting for a set duration\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Duration, Wait } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'In\xeas\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n      Wait.for(Duration.ofMilliseconds(1_500)),\\n      Ensure.that(App.status(), equals(\'Ready!\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n**Please note** that while the above implementation works,\\nthis approach is inefficient because at best\\nthe actor might wait too long and at worst the test\\nmight become \\"flaky\\" if any external interference\\n(like network glitches, animations taking a bit too long etc.)\\nmakes the actor wait not long enough.\\n\\n### Waiting until a condition is met\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'Wendy\')\\n    .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n    .attemptsTo(\\n        Wait.until(App.status(), equals(\'Ready!\')),\\n        // app is ready, proceed with the scenario\\n    );\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":" makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nkeep asking the ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/),\\nin this case "},{"kind":"code","text":"`Text.of(App.status)`"},{"kind":"text","text":", until the answer meets\\nthe expectation, or a timeout expires (default: 5s).\\n\\n**Please note** that both Ensure and Wait can be used with\\nthe same expectations, like "},{"kind":"code","text":"`equals`"},{"kind":"text","text":" or "},{"kind":"code","text":"`includes`"},{"kind":"text","text":".\\n\\n### Changing the default timeout\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Duration, Wait } from \'@serenity-js/core\';\\n import { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\';\\n import { equals } from \'@serenity-js/assertions\';\\n import { Browser, chromium } from \'playwright\';\\n\\n const browser: Browser = await chromium.launch({ headless: true });\\n\\n await actorCalled(\'Polly\')\\n     .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n     .attemptsTo(\\n         Wait.upTo(Duration.ofSeconds(3))\\n             .until(App.status(), equals(\'Ready!\')),\\n         // app is ready, proceed with the scenario\\n     );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)"}]},"children":[{"id":1698,"name":"minimumTimeout","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum timeout that can be used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until),\\ndefaults to 250 milliseconds,"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":141,"character":20}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1699,"name":"defaultPollingInterval","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The amount of time ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until) should wait between condition checks,\\ndefaults to 500ms.\\n\\nUse ["},{"kind":"code","text":"`WaitUntil.pollingEvery`"},{"kind":"text","text":"](/api/core/class/WaitUntil/#pollingEvery) to override it for a given interaction."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":151,"character":20}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1700,"name":"minimumPollingInterval","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum polling interval of 50ms between condition checks, used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":156,"character":20}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1701,"name":"for","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":165,"character":11}],"signatures":[{"id":1702,"name":"for","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to wait for a set duration."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":165,"character":11}],"parameters":[{"id":1703,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A set duration the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should wait for before proceeding."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":1704,"name":"upTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":11}],"signatures":[{"id":1705,"name":"upTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to wait until the answer to the question "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":",\\nor the "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" expires."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":11}],"parameters":[{"id":1706,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom timeout to override ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)"}]},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1707,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1708,"name":"until","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":38}],"type":{"type":"reflection","declaration":{"id":1709,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":45}],"signatures":[{"id":1710,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":45}],"typeParameter":[{"id":1711,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1712,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1711,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1713,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1711,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1721,"typeArguments":[{"type":"reference","target":1711,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1708]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":36}]}}}]},{"id":1714,"name":"until","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":197,"character":11}],"signatures":[{"id":1715,"name":"until","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) configured to\\npoll every ["},{"kind":"code","text":"`Wait.defaultPollingInterval`"},{"kind":"text","text":"](/api/core/class/Wait/#defaultPollingInterval) for the result of the provided\\nquestion ("},{"kind":"code","text":"`actual`"},{"kind":"text","text":") until it meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":",\\nor the timeout expires."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":197,"character":11}],"typeParameter":[{"id":1716,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1717,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) will keep answering\\n until the answer meets the ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) provided, or the timeout expires."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1716,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1718,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) to be met before proceeding"}]},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1716,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1721,"typeArguments":[{"type":"reference","target":1716,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"}}]},{"id":1719,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1720,"name":"new Wait","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1697,"name":"Wait","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1719]},{"title":"Properties","children":[1698,1699,1700]},{"title":"Methods","children":[1701,1704,1714]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":135,"character":13}],"permalink":"/api/core/class/Wait","categories":[],"previousId":1670,"nextId":1721},{"id":1721,"name":"WaitUntil","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Synchronisation statement that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to wait before proceeding until a given ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) is met.\\n\\n:::tip\\nTo instantiate the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`WaitUntil`"},{"kind":"text","text":"](/api/core/class/WaitUntil/),\\nuse the factory method ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until).\\n:::\\n\\n## Learn more\\n* ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"children":[{"id":1750,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1751,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":831,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":830,"name":"Interaction.instantiationLocation"}},{"id":1752,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1753,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1754,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1755,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1756,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1756]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":833,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":832,"name":"Interaction.describedBy"}},{"id":1762,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1763,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":843,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":842,"name":"Interaction.toString"}},{"id":1732,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":231,"character":4}],"signatures":[{"id":1733,"name":"new WaitUntil","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":231,"character":4}],"typeParameter":[{"id":1734,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1735,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1734,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1736,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1734,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}},{"id":1737,"name":"pollingInterval","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":1738,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1721,"typeArguments":[{"type":"reference","target":1734,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":823,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":822,"name":"Interaction.constructor"}},{"id":1743,"name":"pollingEvery","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":256,"character":4}],"signatures":[{"id":1744,"name":"pollingEvery","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configure how frequently the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should check if the answer meets the expectation.\\n\\nNote that the polling interval defines the delay between subsequent attempts\\nto evaluate the expected value, and doesn\'t include the amount of time\\nit take the actor to evaluate the value itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":256,"character":4}],"parameters":[{"id":1745,"name":"interval","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":1746,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":263,"character":10}],"signatures":[{"id":1747,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":263,"character":10}],"parameters":[{"id":1748,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":827,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":826,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[1732]},{"title":"Methods","children":[1750,1752,1762,1743,1746]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":230,"character":13}],"typeParameters":[{"id":1764,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/WaitUntil","categories":[],"previousId":1697,"nextId":1765},{"id":1765,"name":"Clock","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`Clock`"},{"kind":"text","text":"](/api/core/class/Clock/) tells the time. This abstraction allows Serenity/JS to have a single place\\nin the framework responsible for telling the time, and one that can be easily mocked for internal testing.\\n\\n"},{"kind":"code","text":"```ts\\nconst now: Timestamp = new Clock().now()\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)"}]},"children":[{"id":1767,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":4}],"signatures":[{"id":1768,"name":"new Clock","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":4}],"parameters":[{"id":1769,"name":"checkTime","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1770,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":44}],"signatures":[{"id":1771,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":44}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"}}]}},"defaultValue":"..."}],"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"}}]},{"id":1776,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":27,"character":4}],"signatures":[{"id":1777,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}]},{"id":1778,"name":"setAhead","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":41,"character":4}],"signatures":[{"id":1779,"name":"setAhead","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets the clock ahead to force early resolution of promises\\nreturned by ["},{"kind":"code","text":"`Clock.waitFor`"},{"kind":"text","text":"](/api/core/class/Clock/#waitFor).\\n\\nUseful for test purposes to avoid unnecessary delays."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":41,"character":4}],"parameters":[{"id":1780,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1781,"name":"tick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":50,"character":10}],"signatures":[{"id":1782,"name":"tick","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that resolves after one tick of the clock.\\n\\nUseful for test purposes to avoid unnecessary delays."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":50,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1783,"name":"now","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":57,"character":4}],"signatures":[{"id":1784,"name":"now","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":57,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1785,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":66,"character":10}],"signatures":[{"id":1786,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that will be resolved after the given duration"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":66,"character":10}],"parameters":[{"id":1787,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[1767]},{"title":"Methods","children":[1776,1778,1781,1783,1785]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":20,"character":13}],"permalink":"/api/core/class/Clock","categories":[],"previousId":1721,"nextId":1788},{"id":1788,"name":"DelayedCallback","variant":"declaration","kind":256,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":6,"character":17}],"typeParameters":[{"id":1789,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"signatures":[{"id":1790,"name":"DelayedCallback","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":4}],"parameters":[{"id":1791,"name":"stats","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1792,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1793,"name":"currentTime","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":14}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}},{"id":1794,"name":"i","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":38}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1793,1794]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":12}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1789,"name":"Result","package":"@serenity-js/core","qualifiedName":"DelayedCallback.Result","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1789,"name":"Result","package":"@serenity-js/core","qualifiedName":"DelayedCallback.Result","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}],"permalink":"/api/core/interface/DelayedCallback","categories":[],"previousId":1765,"nextId":1795},{"id":1795,"name":"Duration","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a duration in milliseconds between two [timestamps](/api/core/class/Timestamp/)."}]},"children":[{"id":1801,"name":"ofMilliseconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":17,"character":11}],"signatures":[{"id":1802,"name":"ofMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":17,"character":30}],"parameters":[{"id":1803,"name":"milliseconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1804,"name":"ofSeconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":18,"character":11}],"signatures":[{"id":1805,"name":"ofSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":18,"character":30}],"parameters":[{"id":1806,"name":"seconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1807,"name":"ofMinutes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":19,"character":11}],"signatures":[{"id":1808,"name":"ofMinutes","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":19,"character":30}],"parameters":[{"id":1809,"name":"minutes","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1810,"name":"ofHours","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":20,"character":11}],"signatures":[{"id":1811,"name":"ofHours","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":20,"character":30}],"parameters":[{"id":1812,"name":"hours","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1813,"name":"ofDays","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":21,"character":11}],"signatures":[{"id":1814,"name":"ofDays","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":21,"character":30}],"parameters":[{"id":1815,"name":"days","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1816,"name":"ofYears","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":22,"character":11}],"signatures":[{"id":1817,"name":"ofYears","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":22,"character":30}],"parameters":[{"id":1818,"name":"years","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1819,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":11}],"signatures":[{"id":1820,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":11}],"parameters":[{"id":1821,"name":"__namedParameters","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1822,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1823,"name":"milliseconds","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":40}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1823]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":38}]}}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1824,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":28,"character":4}],"signatures":[{"id":1825,"name":"new Duration","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":28,"character":4}],"parameters":[{"id":1826,"name":"milliseconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1828,"name":"isLessThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":33,"character":4}],"signatures":[{"id":1829,"name":"isLessThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":33,"character":4}],"parameters":[{"id":1830,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1831,"name":"isLessThanOrEqualTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":37,"character":4}],"signatures":[{"id":1832,"name":"isLessThanOrEqualTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":37,"character":4}],"parameters":[{"id":1833,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1834,"name":"isGreaterThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":41,"character":4}],"signatures":[{"id":1835,"name":"isGreaterThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":41,"character":4}],"parameters":[{"id":1836,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1837,"name":"isGreaterThanOrEqualTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":45,"character":4}],"signatures":[{"id":1838,"name":"isGreaterThanOrEqualTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":45,"character":4}],"parameters":[{"id":1839,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1840,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":49,"character":4}],"signatures":[{"id":1841,"name":"plus","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":49,"character":4}],"parameters":[{"id":1842,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1843,"name":"inMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":53,"character":4}],"signatures":[{"id":1844,"name":"inMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":53,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1845,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":57,"character":4}],"signatures":[{"id":1846,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":57,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1847,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":75,"character":4}],"signatures":[{"id":1848,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":75,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1849,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1850,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1851,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1824]},{"title":"Methods","children":[1801,1804,1807,1810,1813,1816,1819,1828,1831,1834,1837,1840,1843,1845,1847,1849]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":9,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Duration","categories":[],"previousId":1788,"nextId":1852},{"id":1852,"name":"RepeatUntilLimits","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":1853,"name":"exitCondition","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":4}],"type":{"type":"reflection","declaration":{"id":1854,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":20}],"signatures":[{"id":1855,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":20}],"parameters":[{"id":1856,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1868,"name":"Result","package":"@serenity-js/core","qualifiedName":"RepeatUntilLimits.Result","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":1857,"name":"maxInvocations","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1858,"name":"delayBetweenInvocations","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":4}],"type":{"type":"reflection","declaration":{"id":1859,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":30}],"signatures":[{"id":1860,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":30}],"parameters":[{"id":1861,"name":"i","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]}}},{"id":1862,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":10,"character":4}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":1863,"name":"errorHandler","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":4}],"type":{"type":"reflection","declaration":{"id":1864,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":19}],"signatures":[{"id":1865,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":19}],"parameters":[{"id":1866,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":1867,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1868,"name":"Result","package":"@serenity-js/core","qualifiedName":"RepeatUntilLimits.Result","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[1853,1857,1858,1862,1863]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":6,"character":17}],"typeParameters":[{"id":1868,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/RepeatUntilLimits","categories":[],"previousId":1795,"nextId":1869},{"id":1869,"name":"Scheduler","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":1870,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":22,"character":4}],"signatures":[{"id":1871,"name":"new Scheduler","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":22,"character":4}],"parameters":[{"id":1872,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"}},{"id":1873,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The maximum amount of time to give to a callback to complete before throwing an error"}]},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1869,"name":"Scheduler","package":"@serenity-js/core"}}]},{"id":1877,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":28,"character":4}],"signatures":[{"id":1878,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":28,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}]},{"id":1879,"name":"after","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":41,"character":4}],"signatures":[{"id":1880,"name":"after","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a callback function to be invoked after a delay"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":41,"character":4}],"typeParameter":[{"id":1881,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1882,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":1883,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1788,"typeArguments":[{"type":"reference","target":1881,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1881,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1884,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":57,"character":4}],"signatures":[{"id":1885,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" to be resolved after a "},{"kind":"code","text":"`delay`"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":57,"character":4}],"parameters":[{"id":1886,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1887,"name":"repeatUntil","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":76,"character":10}],"signatures":[{"id":1888,"name":"repeatUntil","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a callback function to be repeated, according to configured limits."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":76,"character":10}],"typeParameter":[{"id":1889,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1890,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1788,"typeArguments":[{"type":"reference","target":1889,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}},{"id":1891,"name":"limits","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1852,"typeArguments":[{"type":"reference","target":1889,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RepeatUntilLimits","package":"@serenity-js/core"},"defaultValue":"{}"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1889,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1892,"name":"stop","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":105,"character":4}],"signatures":[{"id":1893,"name":"stop","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":105,"character":4}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","children":[1870]},{"title":"Methods","children":[1877,1879,1884,1887,1892]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":13,"character":13}],"permalink":"/api/core/class/Scheduler","categories":[],"previousId":1852,"nextId":1894},{"id":1894,"name":"Timestamp","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a point in time.\\n\\n"},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":" makes it easier for you to work with information related to time, like [Serenity/JS domain events](/api/core-events/class/DomainEvent/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)\\n- [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)"}]},"children":[{"id":1895,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":18,"character":11}],"signatures":[{"id":1896,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":18,"character":11}],"parameters":[{"id":1897,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1898,"name":"fromTimestampInSeconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":22,"character":11}],"signatures":[{"id":1899,"name":"fromTimestampInSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":22,"character":11}],"parameters":[{"id":1900,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1901,"name":"fromTimestampInMilliseconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":26,"character":11}],"signatures":[{"id":1902,"name":"fromTimestampInMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":26,"character":11}],"parameters":[{"id":1903,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1904,"name":"now","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":30,"character":11}],"signatures":[{"id":1905,"name":"now","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":30,"character":11}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1906,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":4}],"signatures":[{"id":1907,"name":"new Timestamp","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":4}],"parameters":[{"id":1908,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},"defaultValue":"..."}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1909,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":32}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},"defaultValue":"..."},{"id":1910,"name":"diff","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":39,"character":4}],"signatures":[{"id":1911,"name":"diff","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":39,"character":4}],"parameters":[{"id":1912,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1913,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":44,"character":4}],"signatures":[{"id":1914,"name":"plus","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":44,"character":4}],"parameters":[{"id":1915,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1916,"name":"less","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":49,"character":4}],"signatures":[{"id":1917,"name":"less","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":49,"character":4}],"parameters":[{"id":1918,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1919,"name":"isBefore","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":54,"character":4}],"signatures":[{"id":1920,"name":"isBefore","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":54,"character":4}],"parameters":[{"id":1921,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1922,"name":"isBeforeOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":59,"character":4}],"signatures":[{"id":1923,"name":"isBeforeOrEqual","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":59,"character":4}],"parameters":[{"id":1924,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1925,"name":"isAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":64,"character":4}],"signatures":[{"id":1926,"name":"isAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":64,"character":4}],"parameters":[{"id":1927,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1928,"name":"isAfterOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":69,"character":4}],"signatures":[{"id":1929,"name":"isAfterOrEqual","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":69,"character":4}],"parameters":[{"id":1930,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1931,"name":"toMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":74,"character":4}],"signatures":[{"id":1932,"name":"toMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":74,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1933,"name":"toSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":78,"character":4}],"signatures":[{"id":1934,"name":"toSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1935,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":82,"character":4}],"signatures":[{"id":1936,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1937,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":86,"character":4}],"signatures":[{"id":1938,"name":"toISOString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":86,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1939,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":90,"character":4}],"signatures":[{"id":1940,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1941,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":94,"character":4}],"signatures":[{"id":1942,"name":"[custom]","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":94,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1943,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1944,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1945,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1906]},{"title":"Properties","children":[1909]},{"title":"Methods","children":[1895,1898,1901,1904,1910,1913,1916,1919,1922,1925,1928,1931,1933,1935,1937,1939,1941,1943]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Timestamp","categories":[],"previousId":1869},{"id":2000,"name":"Cast","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS uses the concept of a _**cast of actors**_ to centralise the process of configuring the [actors](/api/core/class/Actor/) and assigning their [abilities](/api/core/class/Ability/).\\n\\nWhen you invoke ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) for the first time in a test scenario,\\nSerenity/JS [instantiates a new actor](/api/core/class/Actor/)\\nand passes it through the ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare) method.\\nSpecifying a **custom cast** gives you an opportunity to configure the actor with the abilities\\nthey need before it\'s returned to the caller,\\nor configure the actors differently **depending on their name**.\\nIt also helps you to avoid having to configure abilities individually in every test scenario.\\n\\n:::tip Remember\\nA **cast** is responsible for assigning **abilities** to **actors** in a central location.\\n:::\\n\\n## Configuring a cast of actors for the entire test suite\\n\\nWhen working with relatively **simple scenarios** where all the actors should always receive the same set of abilities,\\nyou can ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) Serenity/JS to use a generic ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Cast, configure } from \'@serenity-js/core\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nconfigure({\\n  actors: Cast.where(actor => actor.whoCan(\\n    CallAnApi.at(\'http://api.example.org\'),\\n    // other abilities\\n  ))\\n})\\n```"},{"kind":"text","text":"\\n\\nIf you\'re using Serenity/JS with one of the [supported test runners](/handbook/test-runners/),\\nyou might prefer to use your test runner\'s native configuration mechanism\\ninstead of invoking ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) explicitly.\\n\\n:::tip configure vs engage\\nCalling ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) resets the entire Serenity/JS configuration\\nand should be done exactly once in your entire test suite.\\nIf you want to retain the configuration but reset the cast, use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead.\\n:::\\n\\nLearn more about configuring Serenity/JS with:\\n- [Cucumber.js](/handbook/test-runners/cucumber)\\n- [Jasmine](/handbook/test-runners/jasmine)\\n- [Mocha](/handbook/test-runners/mocha)\\n- [Playwright Test](/handbook/test-runners/playwright-test)\\n- [Protractor](/handbook/test-runners/protractor)\\n- [WebdriverIO](/handbook/test-runners/webdriverio)\\n\\n## Engaging a cast of actors for the specific scenario\\n\\nIf you want to retain Serenity/JS configuration, but set a different [cast](/api/core/class/Cast/)\\nfor the given test scenario you should use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead of ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/).\\n\\nThis approach is useful for example when your entire test suite is dedicated to interacting with the system\\nunder test via its REST APIs, and you have a handful of scenarios that need a web browser.\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, beforeEach } from \'mocha\'\\nimport { engage, Cast } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\ndescribe(\'My UI feature\', () => {\\n  beforeEach(async () => {\\n    const browser = await chromium.launch({ headless: true })\\n    engage(Cast.where(actor => actor.whoCan(BrowseTheWebWithPlaywright.using(browser))))\\n  })\\n\\n  // test scenarios\\n})\\n```"},{"kind":"text","text":"\\n\\n## Writing custom casts for complex scenarios\\n\\nIn **complex scenarios** that involve multiple **actors with different abilities**,\\nyou should create a custom implementation of the [cast](/api/core/class/Cast/).\\n\\nExamples of such scenarios include those where actors use separate browser instances, interact with different REST APIs,\\nor start with different data in their [notepads](/api/core/class/Notepad/).\\n\\n### Defining a custom cast of actors interacting with a Web UI\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { engage, Actor, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright, PlaywrightOptions } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nexport class UIActors implements Cast {\\n  constructor(\\n    private readonly browser: Browser,\\n    private readonly options?: PlaywrightOptions,\\n  ) {\\n  }\\n\\n  prepare(actor: Actor): Actor {\\n    return actor.whoCan(\\n      BrowseTheWebWithPlaywright.using(this.browser, this.options),\\n    )\\n  }\\n}\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n  engage(new UIActors(browser));\\n});\\n```"},{"kind":"text","text":"\\n\\n### Preparing actors differently based on their name\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { actorCalled, engage, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nclass Actors implements Cast {\\n  constructor(\\n    private readonly browser: Browser,\\n    private readonly options: PlaywrightOptions,\\n  ) {\\n  }\\n\\n  prepare(actor: Actor) {\\n    switch (actor.name) {\\n      case \'James\':\\n        return actor.whoCan(BrowseTheWebWithPlaywright.using(this.browser, this.options));\\n      default:\\n        return actor.whoCan(CallAnApi.at(this.options.baseURL));\\n    }\\n  }\\n}\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n  engage(new Actors(browser, { baseURL: \'https://example.org\' }));\\n});\\n\\nactorCalled(\'James\') // returns an actor using a browser\\nactorCalled(\'Alice\') // returns an actor interacting with an API\\n```"}]},"children":[{"id":2001,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":11}],"signatures":[{"id":2002,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a generic "},{"kind":"code","text":"`Cast`"},{"kind":"text","text":" implementation, where new actors receive the abilities\\nconfigured by the "},{"kind":"code","text":"`prepareFunction`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":11}],"parameters":[{"id":2003,"name":"prepareFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2004,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":34}],"signatures":[{"id":2005,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":34}],"parameters":[{"id":2006,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]}}}],"type":{"type":"reference","target":2000,"name":"Cast","package":"@serenity-js/core"}}]},{"id":2007,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":2008,"name":"new Cast","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":2000,"name":"Cast","package":"@serenity-js/core"}}]},{"id":2009,"name":"prepare","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":174,"character":13}],"signatures":[{"id":2010,"name":"prepare","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) instantiated when ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor) is invoked."}]},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":174,"character":13}],"parameters":[{"id":2011,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)"}]},"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[2007]},{"title":"Methods","children":[2001,2009]}],"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":150,"character":22}],"permalink":"/api/core/class/Cast","categories":[],"previousId":499,"nextId":2074},{"id":2074,"name":"ListensToDomainEvents","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that can listen and react to [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":2075,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"signatures":[{"id":2076,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthat this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"parameters":[{"id":2077,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[2075]}],"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":15,"character":17}],"extendedBy":[{"type":"reference","target":2234,"name":"StageCrewMember"}],"permalink":"/api/core/interface/ListensToDomainEvents","categories":[],"previousId":2000,"nextId":2156},{"id":2156,"name":"Stage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stage is the place where [actors](/api/core/class/Actor/) perform.\\n\\nIn more technical terms, the Stage is the main event bus propagating [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nto [actors](/api/core/class/Actor/) it instantiates and [stage crew members](/api/core/interface/StageCrewMember/) that have been registered with it.\\n\\nIt is unlikely that you\'ll ever need to interact with the "},{"kind":"code","text":"`Stage`"},{"kind":"text","text":" directly in your tests. Instead, you\'ll use functions like\\n["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) and ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"children":[{"id":2157,"name":"unknownSceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":40,"character":27}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"defaultValue":"..."},{"id":2158,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":72,"character":4}],"signatures":[{"id":2159,"name":"new Stage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":72,"character":4}],"parameters":[{"id":2160,"name":"cast","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2000,"name":"Cast","package":"@serenity-js/core"}},{"id":2161,"name":"manager","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2250,"name":"StageManager","package":"@serenity-js/core"}},{"id":2162,"name":"errors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":144,"name":"ErrorFactory","package":"@serenity-js/core"}},{"id":2163,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"}},{"id":2164,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}]},{"id":2179,"name":"theActorCalled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":91,"character":4}],"signatures":[{"id":2180,"name":"theActorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An alias for ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":91,"character":4}],"parameters":[{"id":2181,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2182,"name":"actor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":102,"character":4}],"signatures":[{"id":2183,"name":"actor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or fetches an existing one\\nidentified by their name if they\'ve already been instantiated."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":102,"character":4}],"parameters":[{"id":2184,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Case-sensitive name of the Actor, e.g. "},{"kind":"code","text":"`Alice`"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2185,"name":"theActorInTheSpotlight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":152,"character":4}],"signatures":[{"id":2186,"name":"theActorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the last ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) instantiated via ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor).\\nUseful when you don\'t can\'t or choose not to reference the actor by their name."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If no ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) has been activated yet"}]}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":152,"character":4}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2187,"name":"theShowHasStarted","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":163,"character":4}],"signatures":[{"id":2188,"name":"theShowHasStarted","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if there is an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the spotlight, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":163,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":2189,"name":"engage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":173,"character":4}],"signatures":[{"id":2190,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the Stage to prepare [actors](/api/core/class/Actor/)\\ninstantiated via ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor) using the provided [cast](/api/core/class/Cast/)."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":173,"character":4}],"parameters":[{"id":2191,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2000,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2192,"name":"assign","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":185,"character":4}],"signatures":[{"id":2193,"name":"assign","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns listeners to be notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nemitted via ["},{"kind":"code","text":"`Stage.announce`"},{"kind":"text","text":"](/api/core/class/Stage/#announce).s"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":185,"character":4}],"parameters":[{"id":2194,"name":"listeners","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2074,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2195,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":195,"character":4}],"signatures":[{"id":2196,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Notifies all the assigned listeners of the events,\\nemitting them one by one."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":195,"character":4}],"parameters":[{"id":2197,"name":"events","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2637,"name":"EmitsDomainEvents.announce"}}],"implementationOf":{"type":"reference","target":2636,"name":"EmitsDomainEvents.announce"}},{"id":2201,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":227,"character":4}],"signatures":[{"id":2202,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time. This method should be used whenever\\n["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects are instantiated by you programmatically."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":227,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2642,"name":"EmitsDomainEvents.currentTime"}}],"implementationOf":{"type":"reference","target":2641,"name":"EmitsDomainEvents.currentTime"}},{"id":2203,"name":"assignNewSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":241,"character":4}],"signatures":[{"id":2204,"name":"assignNewSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates and remembers a "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":"\\nfor the current scene.\\n\\nThis method should be used in custom test runner adapters\\nwhen instantiating a [SceneStarts](/api/core-events/class/SceneStarts/) event.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.currentSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#currentSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":241,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2205,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":254,"character":4}],"signatures":[{"id":2206,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":" for the current scene.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.assignNewSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#assignNewSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":254,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2632,"name":"EmitsDomainEvents.currentSceneId"}}],"implementationOf":{"type":"reference","target":2631,"name":"EmitsDomainEvents.currentSceneId"}},{"id":2207,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":268,"character":4}],"signatures":[{"id":2208,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates and remembers a "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":"\\nfor the current ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\nThis method should be used in custom test runner adapters\\nwhen instantiating the [ActivityStarts](/api/core-events/class/ActivityStarts/) event.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.currentActivityId`"},{"kind":"text","text":"](/api/core/class/Stage/#currentActivityId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":268,"character":4}],"parameters":[{"id":2209,"name":"activityDetails","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2634,"name":"EmitsDomainEvents.assignNewActivityId"}}],"implementationOf":{"type":"reference","target":2633,"name":"EmitsDomainEvents.assignNewActivityId"}},{"id":2210,"name":"currentActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":283,"character":4}],"signatures":[{"id":2211,"name":"currentActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":" for the current ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.assignNewSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#assignNewSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":283,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2212,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":299,"character":4}],"signatures":[{"id":2213,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that will be resolved when any asynchronous\\npost-processing activities performed by Serenity/JS are completed.\\n\\nInvoked in Serenity/JS test runner adapters to inform the test runner when\\nthe scenario has finished and when it\'s safe for the test runner to proceed\\nwith the next test, or finish execution."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":299,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":2640,"name":"EmitsDomainEvents.waitForNextCue"}}],"implementationOf":{"type":"reference","target":2639,"name":"EmitsDomainEvents.waitForNextCue"}},{"id":2214,"name":"createError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":303,"character":4}],"signatures":[{"id":2215,"name":"createError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":303,"character":4}],"typeParameter":[{"id":2216,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":2217,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2218,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":303,"character":52}],"signatures":[{"id":2219,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":303,"character":52}],"parameters":[{"id":2220,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":2216,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":2221,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":166,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2216,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[2158]},{"title":"Properties","children":[2157]},{"title":"Methods","children":[2179,2182,2185,2187,2189,2192,2195,2201,2203,2205,2207,2210,2212,2214]}],"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":38,"character":13}],"implementedTypes":[{"type":"reference","target":2630,"name":"EmitsDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/core/class/Stage","categories":[],"previousId":2074,"nextId":2234},{"id":2234,"name":"StageCrewMember","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can think of the ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) as an in-memory microservice that reacts to [Serenity/JS domain events](/api/core-events/class/DomainEvent/),\\npublished by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/), and originally emitted by [actors](/api/core/class/Actor/) performing activities and Serenity/JS\\ntest runner adapters notifying the framework about test scenario-specific events like [SceneStarts](/api/core-events/class/SceneStarts/) or [SceneFinishes](/api/core-events/class/SceneFinishes/).\\n\\nEvery [stage crew member](/api/core/interface/StageCrewMember/) receives a reference to the [stage](/api/core/class/Stage/),\\nand therefore the [stage manager](/api/core/class/StageManager/), which enables them to emit [domain events](/api/core-events/class/DomainEvent/) back.\\n\\nThis interface is useful when you\'re interested in implementing custom Serenity/JS reporters or supporting services.\\n\\n## Implementing a custom StageCrewMember\\n\\n"},{"kind":"code","text":"```ts\\nimport { Stage, StageCrewMember } from \'@serenity-js/core\'\\nimport * as events from \'@serenity-js/core/lib/events\'\\nimport { ArbitraryTag } from \'@serenity-js/core/lib/model\'\\n\\nexport class TestRunnerTagger implements StageCrewMember {\\n\\n  static using(tagName: string) {\\n    return new TestRunnerTagger(tagName);\\n  }\\n\\n  protected constructor(\\n    private readonly tagName: string,\\n    private stage?: Stage,\\n  ) {\\n  }\\n\\n  assignedTo(stage: Stage): StageCrewMember {\\n    this.stage = stage;\\n    return this;\\n  }\\n\\n  notifyOf(event: events.DomainEvent): void {\\n    if (event instanceof events.TestRunnerDetected) {\\n      this.stage.announce(\\n        new events.SceneTagged(\\n          this.stage.currentSceneId(),\\n          new ArbitraryTag(this.tagName),\\n          this.stage.currentTime()\\n        )\\n      )\\n    }\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using the custom StageCrewMember\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    TestRunnerTagger.using(`Node:${ process.version }`),\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`ListensToDomainEvents`"},{"kind":"text","text":"](/api/core/interface/ListensToDomainEvents/)\\n- ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/)"}]},"children":[{"id":2238,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"signatures":[{"id":2239,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthat this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"parameters":[{"id":2240,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":2076,"name":"ListensToDomainEvents.notifyOf"}}],"inheritedFrom":{"type":"reference","target":2075,"name":"ListensToDomainEvents.notifyOf"}},{"id":2235,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":78,"character":4}],"signatures":[{"id":2236,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) to this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":78,"character":4}],"parameters":[{"id":2237,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[2238,2235]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":73,"character":17}],"extendedTypes":[{"type":"reference","target":2074,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":2012,"name":"ArtifactArchiver"},{"type":"reference","target":2055,"name":"StreamReporter"}],"permalink":"/api/core/interface/StageCrewMember","categories":[],"previousId":2156,"nextId":2241},{"id":2241,"name":"StageCrewMemberBuilder","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Use a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/) to configure complex ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) objects.\\n\\nUseful when you\'re interested in implementing custom reporters with multiple configuration options.\\nSee ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/) for an example.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMemberBuilderDependencies`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilderDependencies/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":2242,"name":"build","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":23,"character":4}],"signatures":[{"id":2243,"name":"build","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/), giving it access to shared dependencies\\nsuch as ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) or ["},{"kind":"code","text":"`OutputStream`"},{"kind":"text","text":"](/api/core-adapter/interface/OutputStream/)"}]},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":23,"character":4}],"parameters":[{"id":2244,"name":"dependencies","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2246,"name":"StageCrewMemberBuilderDependencies","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2245,"name":"T","package":"@serenity-js/core","qualifiedName":"StageCrewMemberBuilder.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[2242]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":17,"character":17}],"typeParameters":[{"id":2245,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":2074,"name":"ListensToDomainEvents","package":"@serenity-js/core"},"default":{"type":"reference","target":2074,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}],"permalink":"/api/core/interface/StageCrewMemberBuilder","categories":[],"previousId":2234,"nextId":2246},{"id":2246,"name":"StageCrewMemberBuilderDependencies","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Dependencies injected by ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure) into ["},{"kind":"code","text":"`StageCrewMemberBuilder.build`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/#build)\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)"}]},"children":[{"id":2247,"name":"stage","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":14,"character":4}],"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}},{"id":2248,"name":"fileSystem","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":15,"character":4}],"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":2249,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":16,"character":4}],"type":{"type":"reference","target":2274,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2247,2248,2249]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":13,"character":17}],"permalink":"/api/core/interface/StageCrewMemberBuilderDependencies","categories":[],"previousId":2241,"nextId":2250},{"id":2250,"name":"StageManager","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2251,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":14,"character":4}],"signatures":[{"id":2252,"name":"new StageManager","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":14,"character":4}],"parameters":[{"id":2253,"name":"cueTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":2254,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2250,"name":"StageManager","package":"@serenity-js/core"}}]},{"id":2259,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":18,"character":4}],"signatures":[{"id":2260,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":18,"character":4}],"parameters":[{"id":2261,"name":"subscribers","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2074,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2262,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":22,"character":4}],"signatures":[{"id":2263,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":22,"character":4}],"parameters":[{"id":2264,"name":"subscriber","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2074,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2265,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":26,"character":4}],"signatures":[{"id":2266,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":26,"character":4}],"parameters":[{"id":2267,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2268,"name":"waitForAsyncOperationsToComplete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":32,"character":4}],"signatures":[{"id":2269,"name":"waitForAsyncOperationsToComplete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":32,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2270,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":52,"character":10}],"signatures":[{"id":2271,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":52,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2272,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":69,"character":4}],"signatures":[{"id":2273,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":69,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1948,"name":"TellsTime.currentTime"}}],"implementationOf":{"type":"reference","target":1947,"name":"TellsTime.currentTime"}}],"groups":[{"title":"Constructors","children":[2251]},{"title":"Methods","children":[2259,2262,2265,2268,2270,2272]}],"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":10,"character":13}],"implementedTypes":[{"type":"reference","target":1946,"name":"TellsTime","package":"@serenity-js/core"}],"permalink":"/api/core/class/StageManager","categories":[],"previousId":2246,"nextId":2012},{"id":2012,"name":"ArtifactArchiver","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores any artifacts emitted via ["},{"kind":"code","text":"`ArtifactGenerated`"},{"kind":"text","text":"](/api/core-events/class/ArtifactGenerated/) events on the file system.\\n\\n## Registering Artifact Archiver programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { ArtifactArchiver, configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.storingArtifactsAt(`/target/site/serenity`),\\n  ]\\n  // other Serenity/JS config\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n  testDir: \'./spec\',\\n\\n  reporter: [\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/serenity-bdd\',\\n        [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      ]\\n      // other Serenity/JS config\\n    }]\\n  ],\\n  // other Playwright Test config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n     \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ]\\n    // other Serenity/JS config\\n  },\\n  // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"}]},"children":[{"id":2013,"name":"storingArtifactsAt","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":110,"character":11}],"signatures":[{"id":2014,"name":"storingArtifactsAt","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" storing artifacts in a given "},{"kind":"code","text":"`destination`"},{"kind":"text","text":".\\nThe "},{"kind":"code","text":"`destination`"},{"kind":"text","text":" directory will be created automatically and recursively if it doesn\'t exist."}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":110,"character":11}],"parameters":[{"id":2015,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":2016,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":11}],"signatures":[{"id":2017,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" storing artifacts in a given "},{"kind":"code","text":"`outputDirectory`"},{"kind":"text","text":".\\nThe "},{"kind":"code","text":"`outputDirectory`"},{"kind":"text","text":" will be created automatically and recursively if it doesn\'t exist."}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":11}],"parameters":[{"id":2018,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2019,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2020,"name":"outputDirectory","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":30}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2020]}],"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":28}]}}}],"type":{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":2021,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":135,"character":4}],"signatures":[{"id":2022,"name":"new ArtifactArchiver","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":135,"character":4}],"parameters":[{"id":2023,"name":"fileSystem","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":2024,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2012,"name":"ArtifactArchiver","package":"@serenity-js/core"}}]},{"id":2027,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":141,"character":4}],"signatures":[{"id":2028,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) to this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":141,"character":4}],"parameters":[{"id":2029,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2236,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":2235,"name":"StageCrewMember.assignedTo"}},{"id":2030,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":156,"character":4}],"signatures":[{"id":2031,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/)."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},{"tag":"@listens","content":[]},{"tag":"@emits","content":[]}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":156,"character":4}],"parameters":[{"id":2032,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2239,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":2238,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[2021]},{"title":"Methods","children":[2013,2016,2027,2030]}],"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":102,"character":13}],"implementedTypes":[{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/core/class/ArtifactArchiver","categories":[],"previousId":2250,"nextId":2055},{"id":2055,"name":"StreamReporter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serialises all the ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects it receives and streams\\nthem as [ndjson](http://ndjson.org/) to the output stream or file.\\n\\nUseful when debugging issues related to custom Serenity/JS test runner adapters.\\n\\n## Registering Stream Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, StreamReporter } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    new StreamReporter(process.stdout)\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Writing Domain Events to a file\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, StreamReporter } from \'@serenity-js/core\'\\nimport fs = require(\'fs\')\\n\\nconfigure({\\n  crew: [\\n    new StreamReporter(fs.createWriteStream(\'./events.ndjson\'))\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' } ]\\n      ]\\n      // other Serenity/JS config\\n    }]\\n  ],\\n  // other Playwright Test config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' }]\\n    ]\\n    // other Serenity/JS config\\n  },\\n  // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' }]\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"}]},"children":[{"id":2056,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":11}],"signatures":[{"id":2057,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`StreamReporter`"},{"kind":"text","text":" outputting a stream of [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nto an "},{"kind":"code","text":"`outputFile`"},{"kind":"text","text":" at the given location."}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":11}],"parameters":[{"id":2058,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2059,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2060,"name":"outputFile","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":30}],"type":{"type":"intrinsic","name":"string"}},{"id":2061,"name":"cwd","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":50}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2060,2061]}],"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":28}]}}}],"type":{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":2062,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":125,"character":4}],"signatures":[{"id":2063,"name":"new StreamReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":125,"character":4}],"parameters":[{"id":2064,"name":"output","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Writable stream that should receive the output"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/stream.d.ts","qualifiedName":"internal.Writable"},"name":"Writable","package":"@types/node","qualifiedName":"internal.Writable"},"defaultValue":"process.stdout"},{"id":2065,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2055,"name":"StreamReporter","package":"@serenity-js/core"}}]},{"id":2068,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":140,"character":4}],"signatures":[{"id":2069,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a new instance of this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) and assigns it to a given ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A new instance of this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":140,"character":4}],"parameters":[{"id":2070,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) will be assigned to"}]},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2236,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":2235,"name":"StageCrewMember.assignedTo"}},{"id":2071,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":151,"character":4}],"signatures":[{"id":2072,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/)."}],"blockTags":[{"tag":"@listens","content":[]}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":151,"character":4}],"parameters":[{"id":2073,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2239,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":2238,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[2062]},{"title":"Methods","children":[2056,2068,2071]}],"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":101,"character":13}],"implementedTypes":[{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/core/class/StreamReporter","categories":[],"previousId":2012,"nextId":2078},{"id":2078,"name":"DomainEventQueue","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2079,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":4}],"signatures":[{"id":2080,"name":"new DomainEventQueue","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":4}],"parameters":[{"id":2081,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2082,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2083,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":48}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2083]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":46}]}}]}}}],"type":{"type":"reference","target":2078,"name":"DomainEventQueue","package":"@serenity-js/core"}}]},{"id":2087,"name":"sceneId","variant":"declaration","kind":262144,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":16,"character":8}],"getSignature":{"id":2088,"name":"sceneId","variant":"signature","kind":524288,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":16,"character":8}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}},{"id":2089,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":4}],"signatures":[{"id":2090,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2091,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2092,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":29}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2092]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":27}]}}]}}]},{"id":2093,"name":"enqueue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":4}],"signatures":[{"id":2094,"name":"enqueue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":4}],"parameters":[{"id":2095,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2096,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2097,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2097]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":33}]}}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2098,"name":"drain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":4}],"signatures":[{"id":2099,"name":"drain","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":4}],"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2100,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2101,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2101]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":33}]}}]}}}]},{"id":2102,"name":"reduce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":4}],"signatures":[{"id":2103,"name":"reduce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":4}],"typeParameter":[{"id":2104,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2105,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2106,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":18}],"signatures":[{"id":2107,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":18}],"parameters":[{"id":2108,"name":"previousValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2104,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":2109,"name":"currentValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2110,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2111,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":67}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2111]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":65}]}}]}},{"id":2112,"name":"currentIndex","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":2104,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":2113,"name":"initialValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2104,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2104,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[2079]},{"title":"Accessors","children":[2087]},{"title":"Methods","children":[2089,2093,2098,2102]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":9,"character":13}],"permalink":"/api/core/class/DomainEventQueue","categories":[],"previousId":2055,"nextId":2114},{"id":2114,"name":"DomainEventQueues","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2115,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":2116,"name":"new DomainEventQueues","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":2114,"name":"DomainEventQueues","package":"@serenity-js/core"}}]},{"id":2124,"name":"enqueue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":4}],"signatures":[{"id":2125,"name":"enqueue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":4}],"parameters":[{"id":2126,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2127,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2128,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2128]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":33}]}}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2129,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":4}],"signatures":[{"id":2130,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":4}],"parameters":[{"id":2131,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2132,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":22}],"signatures":[{"id":2133,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":22}],"parameters":[{"id":2134,"name":"queue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2078,"name":"DomainEventQueue","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2135,"name":"drainQueueFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":4}],"signatures":[{"id":2136,"name":"drainQueueFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":4}],"parameters":[{"id":2137,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2138,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2139,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":65}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2139]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":63}]}}]}}}]}],"groups":[{"title":"Constructors","children":[2115]},{"title":"Methods","children":[2124,2129,2135]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":11,"character":13}],"permalink":"/api/core/class/DomainEventQueues","categories":[],"previousId":2078,"nextId":1946}],"groups":[{"title":"Abilities","children":[529,542,571,574,579,614]},{"title":"Activities","children":[715,770,775,1080]},{"title":"Actors","children":[502,505,1637,566,618,623,710,1067]},{"title":"Errors","children":[144,166,94,138,472,175,189,199,211,237,263,289,315,341,367,394,420,446]},{"title":"Expectations","children":[1150,1156,1225,1252,1270,1288]},{"title":"Notes","children":[844,851,896,929,926]},{"title":"Questions","children":[75,71,67,706,708,954,1047,1059,1064,1635,1949,1072,1131,1148,1306,1426,1551,1555,1561,1569,1620,1604,1616]},{"title":"Screenplay Pattern","children":[628,655,811,957,1640,508]},{"title":"Serenity","children":[1951,84,85,507,496,499]},{"title":"Stage","children":[2000,2074,2156,2234,2241,2246,2250,2012,2055,2078,2114]},{"title":"Time","children":[1946,1670,1697,1721,1765,1788,1795,1852,1869,1894]}],"sources":[{"fileName":"packages/core/src/index.ts","line":1,"character":0}],"permalink":"/api/core"},"urlSlug":"core"}],"packageName":"@serenity-js/core","packageVersion":"3.31.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":57,"name":"@serenity-js/cucumber/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22787,"name":"CucumberCLIAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Cucumber test scenarios.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":22788,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":26,"character":4}],"signatures":[{"id":22789,"name":"new CucumberCLIAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":26,"character":4}],"parameters":[{"id":22790,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22852,"name":"CucumberConfig","package":"@serenity-js/cucumber"}},{"id":22791,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}},{"id":22792,"name":"fileSystem","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":22793,"name":"output","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22887,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}}],"type":{"type":"reference","target":22787,"name":"CucumberCLIAdapter","package":"@serenity-js/cucumber"}}]},{"id":22798,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":4}],"signatures":[{"id":22799,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner, calculated based on ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22800,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22801,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22801]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":22802,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":50,"character":10}],"signatures":[{"id":22803,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads feature files."}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":50,"character":10}],"parameters":[{"id":22804,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Absolute or relative paths to feature files"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":22805,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":68,"character":4}],"signatures":[{"id":22806,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":68,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":22807,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":83,"character":10}],"signatures":[{"id":22808,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs Cucumber to execute feature files located at "},{"kind":"code","text":"`pathsToScenarios`"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":83,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[22788]},{"title":"Methods","children":[22798,22802,22805,22807]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":20,"character":13}],"implementedTypes":[{"type":"reference","target":2278,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/cucumber-adapter/class/CucumberCLIAdapter","categories":[],"previousId":22852,"nextId":22872},{"id":22852,"name":"CucumberConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options to be passed to [Cucumber CLI](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md).\\nYou can specify the options using either camelCase (i.e. "},{"kind":"code","text":"`retryTagFilter`"},{"kind":"text","text":") or kebab-case (i.e. "},{"kind":"code","text":"`retry-tag-filter`"},{"kind":"text","text":")\\nas Serenity/JS will convert them to an appropriate format for you."}]},"children":[{"id":22853,"name":"paths","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Paths to where your feature files are. Note that you don\'t need to specify the paths when\\nusing Serenity/JS with WebdriverIO or Protractor, as their respective adapters will do it for you.\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":17,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22854,"name":"dryRun","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Prepare a test run but don\'t run it\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)\\n- [Cucumber docs: dry run mode](https://github.com/cucumber/cucumber-js/blob/main/docs/dry_run.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22855,"name":"failFast","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Stop running tests when a test fails\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)\\n- [Cucumber docs: fail fast](https://github.com/cucumber/cucumber-js/blob/main/docs/fail_fast.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":39,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22856,"name":"colors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable/disable colors in output. Cucumber 1.x only!\\nFor Cucumber 2.x and above use "},{"kind":"code","text":"`formatOptions: { colorsEnabled: false }`"},{"kind":"text","text":"\\n\\n**Note** For Cucumber 2.x and above use the ["},{"kind":"code","text":"`CucumberConfig.formatOptions`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/#formatOptions) instead.\\n\\n#### Disable colors in output in Cucumber 1.x\\n\\n"},{"kind":"code","text":"```ts\\ncolors: false\\n```"},{"kind":"text","text":"\\n\\n#### Disable colors in output in Cucumber 2.x and above\\n\\n "},{"kind":"code","text":"```ts\\n formatOptions: { colorsEnabled: false }\\n ```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber 1.x CLI options](https://github.com/cucumber/cucumber-js/blob/1.x/lib/cucumber/cli.js#L38)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"1.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":64,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22857,"name":"compiler","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Step definitions and support files can be written in languages that transpile to JavaScript.\\nTo do set the "},{"kind":"code","text":"`compiler`"},{"kind":"text","text":" option to "},{"kind":"code","text":"`<file_extension>:<module_name>`"},{"kind":"text","text":"\\n\\n**NoteL** For Cucumber 4.x and above use the ["},{"kind":"code","text":"`CucumberConfig.require`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/#require) option instead.\\n\\n#### Enable TypeScript support in Cucumber 1.x - 3.x\\n"},{"kind":"code","text":"```ts\\ncompiler: \'ts:ts-node/register\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber 3.x documentation](https://github.com/cucumber/cucumber-js/blob/3.x/docs/cli.md#transpilers)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"1.x - 3.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22858,"name":"format","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify additional output formats, optionally supply PATH to redirect formatter output\\n\\n#### Learn more\\n- [Cucumber output formats](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#formats)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":90,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":22859,"name":"formatOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Provide options for formatters\\n\\n#### Cucumber 1.x\\n"},{"kind":"code","text":"```ts\\nformatOptions: JSON.stringify({ option: \'value\' })\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber format options](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#format-options)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":103,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}},{"id":22860,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only execute the scenarios with name matching the expression.\\n\\n#### Learn more\\n- [Cucumber docs: running specific features](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#running-specific-features)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":111,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22861,"name":"profile","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"In order to store and reuse commonly used CLI options,\\nyou can add a "},{"kind":"code","text":"`cucumber.js`"},{"kind":"text","text":" file to your project root directory.\\nThe file should export an object where the key is the profile name\\nand the value is a string of CLI options.\\n\\nThe profile can be applied with "},{"kind":"code","text":"`-p <NAME>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`--profile <NAME>`"},{"kind":"text","text":".\\nThis will prepend the profile\'s CLI options to the ones provided by the command line.\\nMultiple profiles can be specified at a time.\\n\\nIf no profile is specified and a profile named default exists,\\nit will be applied.\\n\\n#### Learn more\\n- [Cucumber profiles](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#profiles)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":129,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22862,"name":"retry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of times to retry a failing scenario before marking it as failed.\\n\\n#### Cucumber 7.x\\n\\n"},{"kind":"code","text":"```ts\\nretry: 3\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber docs: retry failing tests](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#retry-failing-tests)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"7.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":145,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22863,"name":"rerun","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Relative path to an output file produced by Cucumber.js ["},{"kind":"code","text":"`rerun`"},{"kind":"text","text":" formatter](https://github.com/cucumber/cucumber-js/blob/master/features/rerun_formatter.feature).\\n\\n**Note:** that the name of the output file *must* start with an "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n#### Saving details of failed scenarios to "},{"kind":"code","text":"`@rerun-output.txt`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nformat: [ \'rerun:@rerun-output.txt\' ]\\n```"},{"kind":"text","text":"\\n\\n#### Re-running scenarios saved to "},{"kind":"code","text":"`@rerun-output.txt`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nrerun: \'@rerun-output.txt\'\\n```"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":163,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22864,"name":"retryTagFilter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only retry tests matching the given [tag expression](https://github.com/cucumber/cucumber/tree/master/tag-expressions).\\n\\n#### Cucumber 7.x\\n"},{"kind":"code","text":"```ts\\nretry: 3,\\nretryTagFilter: \'@flaky\',\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber docs: retry failing tests](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#retry-failing-tests)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"7.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":179,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22865,"name":"require","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require files or node modules before executing features\\n\\n#### Enable TypeScript support in Cucumber 4.x and above\\n"},{"kind":"code","text":"```ts\\nrequire: \'ts:ts-node/register\'\\n```"},{"kind":"text","text":"\\n#### Learn more\\n- [Cucumber docs: requiring support files](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#requiring-support-files)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":191,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22866,"name":"import","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Paths to where your support code is.\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":201,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22867,"name":"requireModule","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Names of transpilation modules to load, loaded via require()\\n\\n#### Learn more\\n- [Cucumber docs: transpiling](https://github.com/cucumber/cucumber-js/blob/main/docs/transpiling.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":211,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22868,"name":"language","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default language for your feature files\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":221,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22869,"name":"tags","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run scenarios that match the given tags.\\n\\n**Note**: Cucumber 1.x requires the "},{"kind":"code","text":"`tags`"},{"kind":"text","text":" option to be an array of Cucumber tags,\\nwhile Cucumber 2.x and above uses a "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\nwith a [tag expression](https://github.com/cucumber/cucumber/tree/master/tag-expressions).\\n\\n#### Cucumber 1.x\\n"},{"kind":"code","text":"```ts\\n// Run all scenarios tagged with `@smoketest`, but not with `@wip`:\\ntag: [ \'@smoketest\', \'~@wip\' ]\\n```"},{"kind":"text","text":"\\n\\n#### Cucumber >= 2.x\\n"},{"kind":"code","text":"```ts\\n// Run all scenarios tagged with `@smoketest`, but not with `@wip`:\\ntag: \'@smoketest and not @wip\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- [Cucumber 1.x docs: tags](https://github.com/cucumber/cucumber-js/blob/1.x/docs/cli.md#tags)\\n- [Cucumber 2.x docs: tags](https://github.com/cucumber/cucumber-js/blob/2.x/docs/cli.md#tags)\\n- [Cucumber docs: tag expressions](https://github.com/cucumber/cucumber/tree/master/tag-expressions)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":248,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":22870,"name":"strict","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fail if there are any undefined or pending steps"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":253,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22871,"name":"worldParameters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Provide parameters that will be passed to the world constructor\\n\\n#### Specifying "},{"kind":"code","text":"`worldParameters`"},{"kind":"text","text":" as "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nworldParameters: JSON.stringify({ isDev: process.env.NODE_ENV !== \'production\' })\\n```"},{"kind":"text","text":"\\n\\n#### Specifying "},{"kind":"code","text":"`worldParameters`"},{"kind":"text","text":" as "},{"kind":"code","text":"`object`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nworldParameters: { isDev: process.env.NODE_ENV !== \'production\' }\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- [Cucumber docs: world parameters](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#world-parameters)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":272,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}}],"groups":[{"title":"Properties","children":[22853,22854,22855,22856,22857,22858,22859,22860,22861,22862,22863,22864,22865,22866,22867,22868,22869,22870,22871]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":8,"character":17}],"permalink":"/api/cucumber-adapter/interface/CucumberConfig","categories":[],"nextId":22787},{"id":22872,"name":"CucumberFormat","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a Cucumber.js formatter\\n\\n## Learn more\\n\\n- [Cucumber formatters](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#built-in-formatters)"}]},"children":[{"id":22879,"name":"formatter","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":13,"character":20}],"type":{"type":"intrinsic","name":"string"}},{"id":22880,"name":"output","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":14,"character":20}],"type":{"type":"intrinsic","name":"string"}},{"id":22876,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":4}],"signatures":[{"id":22877,"name":"new CucumberFormat","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":4}],"parameters":[{"id":22878,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Cucumber format expression, like "},{"kind":"code","text":"`pretty`"},{"kind":"text","text":" or "},{"kind":"code","text":"`json:out.json`"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":22872,"name":"CucumberFormat","package":"@serenity-js/cucumber"}}]},{"id":22881,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Cucumber format expression, like "},{"kind":"code","text":"`pretty`"},{"kind":"text","text":" or "},{"kind":"code","text":"`json:out.json`"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":32}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Constructors","children":[22876]},{"title":"Properties","children":[22879,22880,22881]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":12,"character":13}],"permalink":"/api/cucumber-adapter/class/CucumberFormat","categories":[],"previousId":22787,"nextId":22882},{"id":22882,"name":"OutputDescriptor","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":22883,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":5,"character":4}],"signatures":[{"id":22884,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":5,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":22885,"name":"cleanUp","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":6,"character":4}],"signatures":[{"id":22886,"name":"cleanUp","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":6,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[22883,22885]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":4,"character":17}],"permalink":"/api/cucumber-adapter/interface/OutputDescriptor","categories":[],"previousId":22872,"nextId":22887},{"id":22887,"name":"SerenityFormatterOutput","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":22888,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":7,"character":4}],"signatures":[{"id":22889,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":7,"character":4}],"type":{"type":"reference","target":22882,"name":"OutputDescriptor","package":"@serenity-js/cucumber"}}]}],"groups":[{"title":"Methods","children":[22888]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":6,"character":17}],"implementedBy":[{"type":"reference","target":22890,"name":"StandardOutput"},{"type":"reference","target":22895,"name":"TempFileOutput"}],"permalink":"/api/cucumber-adapter/interface/SerenityFormatterOutput","categories":[],"previousId":22882,"nextId":22890},{"id":22890,"name":"StandardOutput","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":22891,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":22892,"name":"new StandardOutput","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":22890,"name":"StandardOutput","package":"@serenity-js/cucumber"}}]},{"id":22893,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":9,"character":4}],"signatures":[{"id":22894,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":9,"character":4}],"type":{"type":"reference","target":22882,"name":"OutputDescriptor","package":"@serenity-js/cucumber"},"implementationOf":{"type":"reference","target":22889,"name":"SerenityFormatterOutput.get"}}],"implementationOf":{"type":"reference","target":22888,"name":"SerenityFormatterOutput.get"}}],"groups":[{"title":"Constructors","children":[22891]},{"title":"Methods","children":[22893]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":8,"character":13}],"implementedTypes":[{"type":"reference","target":22887,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}],"permalink":"/api/cucumber-adapter/class/StandardOutput","categories":[],"previousId":22887,"nextId":22895},{"id":22895,"name":"TempFileOutput","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":22896,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":12,"character":4}],"signatures":[{"id":22897,"name":"new TempFileOutput","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":12,"character":4}],"parameters":[{"id":22898,"name":"fs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22895,"name":"TempFileOutput","package":"@serenity-js/cucumber"}}]},{"id":22900,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":15,"character":4}],"signatures":[{"id":22901,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":15,"character":4}],"type":{"type":"reference","target":22882,"name":"OutputDescriptor","package":"@serenity-js/cucumber"},"implementationOf":{"type":"reference","target":22889,"name":"SerenityFormatterOutput.get"}}],"implementationOf":{"type":"reference","target":22888,"name":"SerenityFormatterOutput.get"}}],"groups":[{"title":"Constructors","children":[22896]},{"title":"Methods","children":[22900]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":11,"character":13}],"implementedTypes":[{"type":"reference","target":22887,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}],"permalink":"/api/cucumber-adapter/class/TempFileOutput","categories":[],"previousId":22890}],"groups":[{"title":"Configuration","children":[22852]},{"title":"Integration","children":[22787,22872,22882,22887,22890,22895]}],"sources":[{"fileName":"packages/cucumber/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/cucumber-adapter"},"urlSlug":"cucumber-adapter"},{"index":true,"label":"index","reflection":{"id":55,"name":"@serenity-js/cucumber","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":56,"name":"export=","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"comment":{"summary":[{"kind":"text","text":"Registers a Cucumber reporter that emits [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nand informs Serenity/JS when test scenarios and Cucumber steps start, finish, and with what result."}]},"sources":[{"fileName":"packages/cucumber/src/index.ts","line":16,"character":6}],"type":{"type":"intrinsic","name":"unknown"},"defaultValue":"...","permalink":"/api/cucumber#export=","categories":[]}],"groups":[{"title":"Variables","children":[56]}],"sources":[{"fileName":"packages/cucumber/src/index.ts","line":1,"character":0}],"permalink":"/api/cucumber"},"urlSlug":"cucumber"}],"packageName":"@serenity-js/cucumber","packageVersion":"3.31.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":59,"name":"@serenity-js/jasmine/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22906,"name":"JasmineAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Jasmine test scenarios,\\nusing ["},{"kind":"code","text":"`SerenityReporterForJasmine`"},{"kind":"text","text":"](/api/jasmine/function/default/) to report progress.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":22912,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":45,"character":4}],"signatures":[{"id":22913,"name":"new JasmineAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":45,"character":4}],"parameters":[{"id":22914,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22941,"name":"JasmineConfig","package":"@serenity-js/jasmine"}},{"id":22915,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22906,"name":"JasmineAdapter","package":"@serenity-js/jasmine"}}]},{"id":22920,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":4}],"signatures":[{"id":22921,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22922,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22923,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22923]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":22924,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":63,"character":10}],"signatures":[{"id":22925,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":63,"character":10}],"parameters":[{"id":22926,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":22934,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":133,"character":4}],"signatures":[{"id":22935,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":133,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":22939,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":151,"character":10}],"signatures":[{"id":22940,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":151,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[22912]},{"title":"Methods","children":[22920,22924,22934,22939]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2278,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/jasmine-adapter/class/JasmineAdapter","categories":[],"previousId":22941},{"id":22941,"name":"JasmineConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object that will be passed to the JasmineRunner.\\n\\n## Learn more\\n- [Jasmine configuration](https://jasmine.github.io/setup/nodejs.html)"}]},"children":[{"id":22942,"name":"specDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Spec dir is used as a prefix for all spec files and helpers"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22943,"name":"helpers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of paths to helper files that should be loaded and executed before the "},{"kind":"code","text":"`requires`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`specs`"},{"kind":"text","text":".\\nAccepts relative and absolute paths as well as glob expressions.\\n\\n#### Learn more\\n- [Jasmine tutorial](https://jasmine.github.io/tutorials/react_with_npm)"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":25,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22944,"name":"requires","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of paths to files that should be required after the "},{"kind":"code","text":"`helpers`"},{"kind":"text","text":", but before the "},{"kind":"code","text":"`specs`"},{"kind":"text","text":".\\nThe paths need to be compatible with Node "},{"kind":"code","text":"`require`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":31,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22945,"name":"random","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not the tests should be executed in a pseudo-random order."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22946,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used to exclude any test scenarios which name doesn\'t match the pattern from the run."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":41,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}},{"id":22947,"name":"invertGrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts \'grep\' matches, defaults to "},{"kind":"code","text":"`false`"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22948,"name":"specFilter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Receives the full name of a test scenario and returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nfor those that should be executed.\\n\\nTakes precedence over "},{"kind":"code","text":"`grep`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":4}],"type":{"type":"reflection","declaration":{"id":22949,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":17}],"signatures":[{"id":22950,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":17}],"parameters":[{"id":22951,"name":"specName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22952,"name":"seed","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The randomisation seed that will be used to determine the pseudo-random order of execution,\\nif "},{"kind":"code","text":"`random`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`true`"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22953,"name":"defaultTimeoutInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sets the global "},{"kind":"code","text":"`jasmine.DEFAULT_TIMEOUT_INTERVAL`"},{"kind":"text","text":",\\nwhich defines the default number of milliseconds Jasmine will wait for an asynchronous spec to complete.\\n\\n#### Learn more\\n- [Jasmine default timeout interval](https://jasmine.github.io/api/edge/jasmine#.DEFAULT_TIMEOUT_INTERVAL)"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":69,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22954,"name":"reporters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of Jasmine reporters to be added to the test runner.\\n\\nUseful for situations like configuring ReportPortal, because you cannot use "},{"kind":"code","text":"`jasmine.addReporter()`"},{"kind":"text","text":" in the Protractor config.\\n\\n**Note:** reporters must be instantiated before adding them to the configuration.\\n\\n#### Using ReportPortal with Protractor and Jasmine\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nconst AgentJasmine = require(\'@reportportal/agent-js-jasmine\')\\nconst agent = new AgentJasmine(require(\'./reportportalConf\'))\\n// ...\\njasmineNodeOpts: {\\n  // ...\\n  reporters: [ agent.getJasmineReporter() ],\\n}\\n\\nafterLaunch:() => {\\n  return agent.getExitPromise();\\n},\\n```"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":95,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"JasmineReporter","package":"@serenity-js/jasmine"}}}],"groups":[{"title":"Properties","children":[22942,22943,22944,22945,22946,22947,22948,22952,22953,22954]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":11,"character":17}],"permalink":"/api/jasmine-adapter/interface/JasmineConfig","categories":[],"nextId":22906}],"groups":[{"title":"Configuration","children":[22941]},{"title":"Integration","children":[22906]}],"sources":[{"fileName":"packages/jasmine/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/jasmine-adapter"},"urlSlug":"jasmine-adapter"},{"index":true,"label":"index","reflection":{"id":58,"name":"@serenity-js/jasmine","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22902,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/bootstrap.ts","line":29,"character":16}],"signatures":[{"id":22903,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Monkey-patches Jasmine\'s Suite and Spec so that they provide more accurate information,\\nand returns a bootstrapped instance of the ["},{"kind":"code","text":"`SerenityReporterForJasmine`"},{"kind":"text","text":"](/api/jasmine/function/default/) to be registered with Jasmine.\\n\\n## Registering the reporter from the command line\\n\\n"},{"kind":"code","text":"```terminal\\njasmine --reporter=@serenity-js/jasmine\\n```"},{"kind":"text","text":"\\n\\n## Registering the reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport serenityReporterForJasmine = require(\'@serenity-js/jasmine\');\\n\\njasmine.getEnv().addReporter(serenityReporterForJasmine);\\n```"}]},"sources":[{"fileName":"packages/jasmine/src/bootstrap.ts","line":29,"character":16}],"parameters":[{"id":22904,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"SerenityReporterForJasmineConfig","package":"@serenity-js/jasmine"},"defaultValue":"{}"},{"id":22905,"name":"jasmine","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"the global.jasmine instance"}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"..."}],"type":{"type":"reference","name":"SerenityReporterForJasmine","package":"@serenity-js/jasmine"}}],"permalink":"/api/jasmine/function/default","categories":[]}],"groups":[{"title":"Functions","children":[22902]}],"sources":[{"fileName":"packages/jasmine/src/index.ts","line":1,"character":0}],"permalink":"/api/jasmine"},"urlSlug":"jasmine"}],"packageName":"@serenity-js/jasmine","packageVersion":"3.31.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":46,"name":"@serenity-js/local-server","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22585,"name":"ManageALocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto manage a local [Node.js](https://nodejs.org/) server.\\n\\n## Managing a raw Node.js server\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, Send } from \'@serenity-js/rest\'\\nimport { ManageALocalServer, LocalTestServer, StartLocalTestServer, StopLocalTestServer } from \'@serenity-js/local-server\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport * as axios from \'axios\'\\nimport * as http from \'http\'\\n\\nconst server = http.createServer(function (request, response) {\\n  response.setHeader(\'Connection\', \'close\');\\n  response.end(\'Hello!\');\\n})\\n\\nawait actorCalled(\'Apisit\')\\n  .whoCan(\\n    ManageALocalServer.using(server),\\n    CallAnApi.using(axios.create()),\\n  )\\n  .attemptsTo(\\n    StartLocalTestServer.onRandomPort(),\\n    Send.a(GetRequest.to(LocalServer.url())),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.body<string>(), equals(\'Hello!\')),\\n    StopLocalTestServer.ifRunning(),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Anatomy of an HTTP transaction](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/)\\n- [Node.js HTTP server](https://nodejs.org/api/http.html#http_class_http_server)"}]},"children":[{"id":22586,"name":"runningAHttpListener","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":57,"character":11}],"signatures":[{"id":22587,"name":"runningAHttpListener","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to manage a Node.js HTTP server using the provided "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":57,"character":11}],"parameters":[{"id":22588,"name":"listener","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":22622,"name":"RequestListener","package":"@serenity-js/local-server"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"Server","package":"@types/node","qualifiedName":"\\"net\\".Server"}]}}],"type":{"type":"reference","target":22585,"name":"ManageALocalServer","package":"@serenity-js/local-server"}}]},{"id":22589,"name":"runningAHttpsListener","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":74,"character":11}],"signatures":[{"id":22590,"name":"runningAHttpsListener","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to manage a Node.js HTTPS server using the provided server "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":74,"character":11}],"parameters":[{"id":22591,"name":"listener","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":22622,"name":"RequestListener","package":"@serenity-js/local-server"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".Server"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage","preferValues":true}},{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse","preferValues":true}}],"name":"Server","package":"@types/node","qualifiedName":"\\"https\\".Server"}]}},{"id":22592,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Accepts an options object from "},{"kind":"code","text":"`tls.createServer()`"},{"kind":"text","text":", "},{"kind":"code","text":"`tls.createSecureContext()`"},{"kind":"text","text":" and "},{"kind":"code","text":"`http.createServer()`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".ServerOptions"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage","preferValues":true}},{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse","preferValues":true}}],"name":"ServerOptions","package":"@types/node","qualifiedName":"\\"https\\".ServerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","target":22585,"name":"ManageALocalServer","package":"@serenity-js/local-server"}}]},{"id":22618,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":22619,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}},{"id":22620,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":22621,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}},{"id":22600,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":91,"character":4}],"signatures":[{"id":22601,"name":"new ManageALocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.npmjs.com/package/http-shutdown"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":91,"character":4}],"parameters":[{"id":22602,"name":"protocol","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protocol to be used when communicating with the running server; "},{"kind":"code","text":"`http`"},{"kind":"text","text":" or "},{"kind":"code","text":"`https`"}]},"type":{"type":"reference","target":22643,"name":"SupportedProtocols","package":"@serenity-js/local-server"}},{"id":22603,"name":"server","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Node.js server requestListener, with support for [server shutdown](https://www.npmjs.com/package/http-shutdown)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"Server","package":"@types/node","qualifiedName":"\\"net\\".Server"}}],"type":{"type":"reference","target":22585,"name":"ManageALocalServer","package":"@serenity-js/local-server"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":22606,"name":"listen","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":105,"character":4}],"signatures":[{"id":22607,"name":"listen","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts the server on the first free port between "},{"kind":"code","text":"`preferredPort`"},{"kind":"text","text":" and "},{"kind":"code","text":"`highestPort`"},{"kind":"text","text":", inclusive."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":105,"character":4}],"parameters":[{"id":22608,"name":"preferredPort","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Lower bound of the preferred port range"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"8000"},{"id":22609,"name":"highestPort","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"highestPort\\n Upper bound of the preferred port range"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"65535"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":22610,"name":"mapInstance","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":4}],"signatures":[{"id":22611,"name":"mapInstance","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the server "},{"kind":"code","text":"`requestListener`"}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":4}],"typeParameter":[{"id":22612,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":22613,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22614,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":23}],"signatures":[{"id":22615,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":23}],"parameters":[{"id":22616,"name":"server","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22627,"name":"ServerWithShutdown","package":"@serenity-js/local-server"}},{"id":22617,"name":"protocol","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":22643,"name":"SupportedProtocols","package":"@serenity-js/local-server"}}],"type":{"type":"reference","target":22612,"name":"T","package":"@serenity-js/local-server","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":22612,"name":"T","package":"@serenity-js/local-server","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[22600]},{"title":"Methods","children":[22586,22589,22618,22620,22606,22610]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":48,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/local-server/class/ManageALocalServer","categories":[],"nextId":22646},{"id":22622,"name":"RequestListener","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":" function accepted by Node\'s\\n["},{"kind":"code","text":"`http.createServer`"},{"kind":"text","text":"](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener)\\nor ["},{"kind":"code","text":"`https.createServer`"},{"kind":"text","text":"](https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":141,"character":12}],"type":{"type":"reflection","declaration":{"id":22623,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":141,"character":30}],"signatures":[{"id":22624,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22625,"name":"request","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"http.IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage"}},{"id":22626,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"http.ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse"}}],"type":{"type":"intrinsic","name":"void"}}]}},"permalink":"/api/local-server#RequestListener","categories":[],"previousId":22693,"nextId":22627},{"id":22627,"name":"ServerWithShutdown","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`net.Server`"},{"kind":"text","text":"](https://nodejs.org/api/net.html#class-netserver) with an added shutdown method."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.npmjs.com/package/http-shutdown"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":148,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"net.Server","package":"@types/node","qualifiedName":"\\"net\\".Server"},{"type":"reflection","declaration":{"id":22628,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22629,"name":"shutdown","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":4}],"type":{"type":"reflection","declaration":{"id":22630,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":14}],"signatures":[{"id":22631,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22632,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22633,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":25}],"signatures":[{"id":22634,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22635,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":22636,"name":"forceShutdown","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":4}],"type":{"type":"reflection","declaration":{"id":22637,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":19}],"signatures":[{"id":22638,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22639,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22640,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":30}],"signatures":[{"id":22641,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22642,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[22629,22636]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":148,"character":46}]}}]},"permalink":"/api/local-server#ServerWithShutdown","categories":[],"previousId":22622},{"id":22643,"name":"SupportedProtocols","variant":"declaration","kind":8,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The protocol supported by the instance of the ["},{"kind":"code","text":"`ServerWithShutdown`"},{"kind":"text","text":"](/api/local-server/#ServerWithShutdown),\\nwrapped by the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`ManageALocalServer`"},{"kind":"text","text":"](/api/local-server/class/ManageALocalServer/)."}]},"children":[{"id":22644,"name":"HTTP","variant":"declaration","kind":16,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":161,"character":4}],"type":{"type":"literal","value":"http"}},{"id":22645,"name":"HTTPS","variant":"declaration","kind":16,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":162,"character":4}],"type":{"type":"literal","value":"https"}}],"groups":[{"title":"Enumeration Members","children":[22644,22645]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":160,"character":12}],"permalink":"/api/local-server/enum/SupportedProtocols","categories":[],"previousId":22658,"nextId":22693},{"id":22646,"name":"StartLocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts local server so that a test can interact with it."}]},"children":[{"id":22647,"name":"onRandomPort","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":16,"character":11}],"signatures":[{"id":22648,"name":"onRandomPort","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts local test server on a random available ports."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":16,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22649,"name":"onPort","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":26,"character":11}],"signatures":[{"id":22650,"name":"onPort","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to start a local test server on a "},{"kind":"code","text":"`preferredPort`"},{"kind":"text","text":",\\nor a random one if that\'s not available."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":26,"character":11}],"parameters":[{"id":22651,"name":"preferredPort","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22652,"name":"onRandomPortBetween","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":40,"character":11}],"signatures":[{"id":22653,"name":"onRandomPortBetween","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to start a local test server on a random port\\nbetween "},{"kind":"code","text":"`lowestPort`"},{"kind":"text","text":" and "},{"kind":"code","text":"`highestPort`"},{"kind":"text","text":", inclusive."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":40,"character":11}],"parameters":[{"id":22654,"name":"lowestPort","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Lower bound of the preferred port range"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":22655,"name":"highestPort","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Upper bound of the preferred port range"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22656,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":22657,"name":"new StartLocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":22646,"name":"StartLocalServer","package":"@serenity-js/local-server"}}]}],"groups":[{"title":"Constructors","children":[22656]},{"title":"Methods","children":[22647,22649,22652]}],"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":11,"character":13}],"permalink":"/api/local-server/class/StartLocalServer","categories":[],"previousId":22585,"nextId":22658},{"id":22658,"name":"StopLocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stops the local server. Should be used in "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" block to make sure that the server\\nis correctly shut down even when the test fails."}]},"children":[{"id":22659,"name":"ifRunning","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":17,"character":11}],"signatures":[{"id":22660,"name":"ifRunning","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stops the server if it\'s running. If the server hasn\'t been started, this interaction does nothing."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":17,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22671,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":21,"character":4}],"signatures":[{"id":22672,"name":"new StopLocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":21,"character":4}],"parameters":[{"id":22673,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":22674,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22658,"name":"StopLocalServer","package":"@serenity-js/local-server"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":22679,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":22680,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":22681,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":22682,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":22683,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22684,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22685,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[22685]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":22691,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":22692,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":22675,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":24,"character":4}],"signatures":[{"id":22676,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":24,"character":4}],"parameters":[{"id":22677,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[22671]},{"title":"Methods","children":[22659,22679,22681,22691,22675]}],"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/local-server/class/StopLocalServer","categories":[],"previousId":22646,"nextId":22643},{"id":22693,"name":"LocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":22694,"name":"url","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":17,"character":11}],"signatures":[{"id":22695,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the URL of the local server started\\nusing the ["},{"kind":"code","text":"`StartLocalServer`"},{"kind":"text","text":"](/api/local-server/class/StartLocalServer/) [interaction](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":17,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22696,"name":"port","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":45,"character":11}],"signatures":[{"id":22697,"name":"port","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the port number of the local server started\\nusing the ["},{"kind":"code","text":"`StartLocalServer`"},{"kind":"text","text":"](/api/local-server/class/StartLocalServer/) [interaction](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":45,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22698,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":22699,"name":"new LocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":22693,"name":"LocalServer","package":"@serenity-js/local-server"}}]}],"groups":[{"title":"Constructors","children":[22698]},{"title":"Methods","children":[22694,22696]}],"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":11,"character":13}],"permalink":"/api/local-server/class/LocalServer","categories":[],"previousId":22643,"nextId":22622}],"groups":[{"title":"Abilities","children":[22585]},{"title":"Activities","children":[22646,22658]},{"title":"Models","children":[22643]},{"title":"Questions","children":[22693]},{"title":"Type Aliases","children":[22622,22627]}],"sources":[{"fileName":"packages/local-server/src/index.ts","line":1,"character":0}],"permalink":"/api/local-server"},"urlSlug":"local-server"}],"packageName":"@serenity-js/local-server","packageVersion":"3.31.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":65,"name":"@serenity-js/mocha/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22955,"name":"MochaAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Mocha test scenarios,\\nusing ["},{"kind":"code","text":"`SerenityReporterForMocha`"},{"kind":"text","text":"](/api/mocha/function/export=/) to report progress.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":22956,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":26,"character":4}],"signatures":[{"id":22957,"name":"new MochaAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":26,"character":4}],"parameters":[{"id":22958,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22978,"name":"MochaConfig","package":"@serenity-js/mocha"}},{"id":22959,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22955,"name":"MochaAdapter","package":"@serenity-js/mocha"}}]},{"id":22964,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":4}],"signatures":[{"id":22965,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22966,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22967,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22967]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":22968,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":46,"character":10}],"signatures":[{"id":22969,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":46,"character":10}],"parameters":[{"id":22970,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":22971,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":81,"character":4}],"signatures":[{"id":22972,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":81,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":22973,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":95,"character":4}],"signatures":[{"id":22974,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":95,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[22956]},{"title":"Methods","children":[22964,22968,22971,22973]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2278,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/mocha-adapter/class/MochaAdapter","categories":[],"previousId":22978},{"id":22978,"name":"MochaConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object for the Mocha test runner.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`.mocharc.yml`"},{"kind":"text","text":" example](https://github.com/mochajs/mocha/blob/v8.0.1/example/config/.mocharc.yml)"}]},"children":[{"id":22979,"name":"config","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to config file.\\n\\n#### Learn more\\n- [Mocha configuration examples](https://github.com/mochajs/mocha/tree/v8.0.1/example/config)"}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":18,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22980,"name":"allow-uncaught","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Allow uncaught errors to propagate."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22981,"name":"async-only","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require all tests to use a callback (async) or return a Promise."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22982,"name":"bail","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Abort (\\"bail\\") after first test failure."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22983,"name":"check-leaks","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Check for global variable leaks."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":38,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22984,"name":"delay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Delay initial execution of root suite."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":43,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22985,"name":"fgrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run tests containing this string.\\n\\n**Note:** ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) and ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) are mutually exclusive."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":50,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22986,"name":"file","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Files to be loaded prior to root suite execution."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":55,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22987,"name":"forbid-only","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fail if exclusive test(s) encountered."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22988,"name":"forbid-pending","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Fail if pending test(s) encountered."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":65,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22989,"name":"global","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of allowed global variables."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":70,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22990,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run tests matching this string or regexp.\\n\\n**Note:** ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) and ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) are mutually exclusive."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":77,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}},{"id":22991,"name":"growl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable Growl notifications."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22992,"name":"invert","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) and ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) matches."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":87,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22993,"name":"require","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require module."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":92,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22994,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Retry failed tests this many times."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":97,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22995,"name":"slow","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify \\"slow\\" test threshold (in milliseconds)."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":102,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22996,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify test timeout threshold (in milliseconds).\\n\\n**Note:** setting this property to 0 means \\"no timeout\\"."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":109,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22997,"name":"ui","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify user interface. Defaults to "},{"kind":"code","text":"`bdd`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [Mocha interfaces](https://mochajs.org/#interfaces)"}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":118,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22998,"name":"strict","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":", a skipped test is considered a failure."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":123,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[22979,22980,22981,22982,22983,22984,22985,22986,22987,22988,22989,22990,22991,22992,22993,22994,22995,22996,22997,22998]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":10,"character":17}],"permalink":"/api/mocha-adapter/interface/MochaConfig","categories":[],"nextId":22955}],"groups":[{"title":"Configuration","children":[22978]},{"title":"Integration","children":[22955]}],"sources":[{"fileName":"packages/mocha/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/mocha-adapter"},"urlSlug":"mocha-adapter"},{"index":true,"label":"index","reflection":{"id":60,"name":"@serenity-js/mocha","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":61,"name":"export=","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/index.ts","line":11,"character":9}],"signatures":[{"id":62,"name":"export=","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers a Mocha reporter that emits [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nand informs Serenity/JS when a test scenario starts, finishes, and with what result."}]},"sources":[{"fileName":"packages/mocha/src/index.ts","line":11,"character":9}],"parameters":[{"id":63,"name":"runner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"","qualifiedName":"Runner"},"name":"Runner"}},{"id":64,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"","qualifiedName":"MochaOptions"},"name":"MochaOptions"}}],"type":{"type":"reference","name":"SerenityReporterForMocha","package":"@serenity-js/mocha"}}],"permalink":"/api/mocha/function/export=","categories":[]}],"groups":[{"title":"Functions","children":[61]}],"sources":[{"fileName":"packages/mocha/src/index.ts","line":1,"character":0}],"permalink":"/api/mocha"},"urlSlug":"mocha"}],"packageName":"@serenity-js/mocha","packageVersion":"3.31.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":6,"name":"@serenity-js/playwright","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":5169,"name":"PlaywrightOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific options used to configure the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n\\n## Learn more\\n- [Playwright "},{"kind":"code","text":"`Browser.newContext`"},{"kind":"text","text":" options](https://playwright.dev/docs/api/class-browser#browser-new-context)"}]},"children":[{"id":5170,"name":"defaultNavigationTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Changes the default maximum navigation time for the browser context used by ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`browserContext.setDefaultNavigationTimeout(timeout)`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-navigation-timeout)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":5171,"name":"defaultNavigationWaitUntil","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When to consider navigation operation succeeded, defaults to "},{"kind":"code","text":"`load`"},{"kind":"text","text":". Events can be either:\\n- "},{"kind":"code","text":"`\'domcontentloaded\'`"},{"kind":"text","text":" - consider operation to be finished when the "},{"kind":"code","text":"`DOMContentLoaded`"},{"kind":"text","text":" event is fired.\\n- "},{"kind":"code","text":"`\'load\'`"},{"kind":"text","text":" - consider operation to be finished when the "},{"kind":"code","text":"`load`"},{"kind":"text","text":" event is fired.\\n- "},{"kind":"code","text":"`\'networkidle\'`"},{"kind":"text","text":" - consider operation to be finished when there are no network connections for at least "},{"kind":"code","text":"`500`"},{"kind":"text","text":" ms.\\n- "},{"kind":"code","text":"`\'commit\'`"},{"kind":"text","text":" - consider operation to be finished when network response is received and the document started loading.\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`page.goto(url[, options])`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page#page-goto-option-wait-until)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":31,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"load"},{"type":"literal","value":"domcontentloaded"},{"type":"literal","value":"networkidle"},{"type":"literal","value":"commit"}]}},{"id":5172,"name":"defaultTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This setting will change the default maximum time for all Playwright methods accepting "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" option.\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`page.setDefaultTimeout(timeout)`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page#page-set-default-timeout)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":39,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":5173,"name":"acceptDownloads","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to automatically download all the attachments. Defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" where all the downloads are accepted."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.acceptDownloads"}},{"id":5174,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When using [page.goto(url[, options])](https://playwright.dev/docs/api/class-page#page-goto),\\n[page.route(url, handler[, options])](https://playwright.dev/docs/api/class-page#page-route),\\n[page.waitForURL(url[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-url),\\n[page.waitForRequest(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-request),\\nor\\n[page.waitForResponse(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-response)\\nit takes the base URL in consideration by using the\\n["},{"kind":"code","text":"`URL()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL) constructor for building the corresponding URL.\\nUnset by default. Examples:\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000`"},{"kind":"text","text":" and navigating to "},{"kind":"code","text":"`/bar.html`"},{"kind":"text","text":" results in "},{"kind":"code","text":"`http://localhost:3000/bar.html`"},{"kind":"text","text":"\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000/foo/`"},{"kind":"text","text":" and navigating to "},{"kind":"code","text":"`./bar.html`"},{"kind":"text","text":" results in\\n  "},{"kind":"code","text":"`http://localhost:3000/foo/bar.html`"},{"kind":"text","text":"\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000/foo`"},{"kind":"text","text":" (without trailing slash) and navigating to "},{"kind":"code","text":"`./bar.html`"},{"kind":"text","text":" results in\\n  "},{"kind":"code","text":"`http://localhost:3000/bar.html`"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.baseURL"}},{"id":5175,"name":"bypassCSP","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Toggles bypassing page\'s Content-Security-Policy. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.bypassCSP"}},{"id":5176,"name":"clientCertificates","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"TLS Client Authentication allows the server to request a client certificate and verify it.\\n\\n**Details**\\n\\nAn array of client certificates to be used. Each certificate object must have either both "},{"kind":"code","text":"`certPath`"},{"kind":"text","text":" and "},{"kind":"code","text":"`keyPath`"},{"kind":"text","text":",\\na single "},{"kind":"code","text":"`pfxPath`"},{"kind":"text","text":", or their corresponding direct value equivalents ("},{"kind":"code","text":"`cert`"},{"kind":"text","text":" and "},{"kind":"code","text":"`key`"},{"kind":"text","text":", or "},{"kind":"code","text":"`pfx`"},{"kind":"text","text":"). Optionally,\\n"},{"kind":"code","text":"`passphrase`"},{"kind":"text","text":" property should be provided if the certificate is encrypted. The "},{"kind":"code","text":"`origin`"},{"kind":"text","text":" property should be provided\\nwith an exact match to the request origin that the certificate is valid for.\\n\\n**NOTE** When using WebKit on macOS, accessing "},{"kind":"code","text":"`localhost`"},{"kind":"text","text":" will not pick up client certificates. You can make it\\nwork by replacing "},{"kind":"code","text":"`localhost`"},{"kind":"text","text":" with "},{"kind":"code","text":"`local.playwright`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5177,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5178,"name":"origin","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Exact origin that the certificate is valid for. Origin includes "},{"kind":"code","text":"`https`"},{"kind":"text","text":" protocol, a hostname and optionally a port."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5179,"name":"certPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the file with the certificate in PEM format."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5180,"name":"cert","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Direct value of the certificate in PEM format."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/ts5.6/buffer.buffer.d.ts","qualifiedName":"__global.Buffer"},"name":"Buffer","package":"@types/node","qualifiedName":"__global.Buffer"}},{"id":5181,"name":"keyPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the file with the private key in PEM format."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5182,"name":"key","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Direct value of the private key in PEM format."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/ts5.6/buffer.buffer.d.ts","qualifiedName":"__global.Buffer"},"name":"Buffer","package":"@types/node","qualifiedName":"__global.Buffer"}},{"id":5183,"name":"pfxPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the PFX or PKCS12 encoded private key and certificate chain."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5184,"name":"pfx","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Direct value of the PFX or PKCS12 encoded private key and certificate chain."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/ts5.6/buffer.buffer.d.ts","qualifiedName":"__global.Buffer"},"name":"Buffer","package":"@types/node","qualifiedName":"__global.Buffer"}},{"id":5185,"name":"passphrase","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Passphrase for the private key (PEM or PFX)."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[5178,5179,5180,5181,5182,5183,5184,5185]}],"sources":[]}}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.clientCertificates"}},{"id":5186,"name":"colorScheme","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates [prefers-colors-scheme](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme)\\nmedia feature, supported values are "},{"kind":"code","text":"`\'light\'`"},{"kind":"text","text":" and "},{"kind":"code","text":"`\'dark\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'light\'`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"no-preference"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.colorScheme"}},{"id":5187,"name":"deviceScaleFactor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify device scale factor (can be thought of as dpr). Defaults to "},{"kind":"code","text":"`1`"},{"kind":"text","text":". Learn more about\\n[emulating devices with device scale factor](https://playwright.dev/docs/emulation#devices)."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.deviceScaleFactor"}},{"id":5188,"name":"extraHTTPHeaders","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An object containing additional HTTP headers to be sent with every request. Defaults to none."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5189,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"indexSignature":{"id":5190,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":5191,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.extraHTTPHeaders"}},{"id":5192,"name":"forcedColors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates "},{"kind":"code","text":"`\'forced-colors\'`"},{"kind":"text","text":" media feature, supported values are "},{"kind":"code","text":"`\'active\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'none\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'none\'`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"none"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.forcedColors"}},{"id":5193,"name":"geolocation","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Geolocation"},"name":"Geolocation","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.geolocation"}},{"id":5194,"name":"hasTouch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specifies if viewport supports touch events. Defaults to false. Learn more about\\n[mobile emulation](https://playwright.dev/docs/emulation#devices)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.hasTouch"}},{"id":5195,"name":"httpCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication). If no\\norigin is specified, the username and password are sent to any servers upon unauthorized responses."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"HTTPCredentials"},"name":"HTTPCredentials","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.httpCredentials"}},{"id":5196,"name":"ignoreHTTPSErrors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to ignore HTTPS errors when sending network requests. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.ignoreHTTPSErrors"}},{"id":5197,"name":"isMobile","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the "},{"kind":"code","text":"`meta viewport`"},{"kind":"text","text":" tag is taken into account and touch events are enabled. isMobile is a part of device,\\nso you don\'t actually need to set it manually. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" and is not supported in Firefox. Learn more\\nabout [mobile emulation](https://playwright.dev/docs/emulation#ismobile)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.isMobile"}},{"id":5198,"name":"javaScriptEnabled","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not to enable JavaScript in the context. Defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":". Learn more about\\n[disabling JavaScript](https://playwright.dev/docs/emulation#javascript-enabled)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.javaScriptEnabled"}},{"id":5199,"name":"locale","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify user locale, for example "},{"kind":"code","text":"`en-GB`"},{"kind":"text","text":", "},{"kind":"code","text":"`de-DE`"},{"kind":"text","text":", etc. Locale will affect "},{"kind":"code","text":"`navigator.language`"},{"kind":"text","text":" value,\\n"},{"kind":"code","text":"`Accept-Language`"},{"kind":"text","text":" request header value as well as number and date formatting rules. Defaults to the system default\\nlocale. Learn more about emulation in our [emulation guide](https://playwright.dev/docs/emulation#locale--timezone)."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.locale"}},{"id":5200,"name":"logger","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Logger sink for Playwright logging."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Logger"},"name":"Logger","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.logger"}},{"id":5201,"name":"offline","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to emulate network being offline. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". Learn more about\\n[network emulation](https://playwright.dev/docs/emulation#offline)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.offline"}},{"id":5202,"name":"permissions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of permissions to grant to all pages in this context. See\\n[browserContext.grantPermissions(permissions[, options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-grant-permissions)\\nfor more details. Defaults to none."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.permissions"}},{"id":5203,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Network proxy settings to use with this context. Defaults to none."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5204,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5205,"name":"server","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Proxy to be used for all requests. HTTP and SOCKS proxies are supported, for example "},{"kind":"code","text":"`http://myproxy.com:3128`"},{"kind":"text","text":" or\\n"},{"kind":"code","text":"`socks5://myproxy.com:3128`"},{"kind":"text","text":". Short form "},{"kind":"code","text":"`myproxy.com:3128`"},{"kind":"text","text":" is considered an HTTP proxy."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5206,"name":"bypass","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional comma-separated domains to bypass proxy, for example "},{"kind":"code","text":"`\\".com, chromium.org, .domain.com\\"`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5207,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional username to use if HTTP proxy requires authentication."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5208,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional password to use if HTTP proxy requires authentication."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[5205,5206,5207,5208]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.proxy"}},{"id":5209,"name":"recordHar","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enables [HAR](http://www.softwareishard.com/blog/har-12-spec) recording for all pages into "},{"kind":"code","text":"`recordHar.path`"},{"kind":"text","text":" file.\\nIf not specified, the HAR is not recorded. Make sure to await\\n[browserContext.close([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for\\nthe HAR to be saved."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5210,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5211,"name":"omitContent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional setting to control whether to omit request content from the HAR. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". Deprecated, use\\n"},{"kind":"code","text":"`content`"},{"kind":"text","text":" policy instead."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":5212,"name":"content","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional setting to control resource content management. If "},{"kind":"code","text":"`omit`"},{"kind":"text","text":" is specified, content is not persisted. If\\n"},{"kind":"code","text":"`attach`"},{"kind":"text","text":" is specified, resources are persisted as separate files or entries in the ZIP archive. If "},{"kind":"code","text":"`embed`"},{"kind":"text","text":" is\\nspecified, content is stored inline the HAR file as per HAR specification. Defaults to "},{"kind":"code","text":"`attach`"},{"kind":"text","text":" for "},{"kind":"code","text":"`.zip`"},{"kind":"text","text":" output\\nfiles and to "},{"kind":"code","text":"`embed`"},{"kind":"text","text":" for all other file extensions."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"omit"},{"type":"literal","value":"embed"},{"type":"literal","value":"attach"}]}},{"id":5213,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Path on the filesystem to write the HAR file to. If the file name ends with "},{"kind":"code","text":"`.zip`"},{"kind":"text","text":", "},{"kind":"code","text":"`content: \'attach\'`"},{"kind":"text","text":" is used by\\ndefault."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5214,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When set to "},{"kind":"code","text":"`minimal`"},{"kind":"text","text":", only record information necessary for routing from HAR. This omits sizes, timing, page,\\ncookies, security and other types of HAR information that are not used when replaying from HAR. Defaults to "},{"kind":"code","text":"`full`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"full"},{"type":"literal","value":"minimal"}]}},{"id":5215,"name":"urlFilter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A glob or regex pattern to filter requests that are stored in the HAR. When a\\n["},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-base-url) via the context\\noptions was provided and the passed URL is a path, it gets merged via the\\n["},{"kind":"code","text":"`new URL()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL) constructor. Defaults to none."}]},"sources":[],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}}],"groups":[{"title":"Properties","children":[5211,5212,5213,5214,5215]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.recordHar"}},{"id":5216,"name":"recordVideo","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enables video recording for all pages into "},{"kind":"code","text":"`recordVideo.dir`"},{"kind":"text","text":" directory. If not specified videos are not recorded.\\nMake sure to await\\n[browserContext.close([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for\\nvideos to be saved."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5217,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5218,"name":"dir","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Path to the directory to put videos into."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5219,"name":"size","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional dimensions of the recorded videos. If not specified the size will be equal to "},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" scaled down to\\nfit into 800x800. If "},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" is not configured explicitly the video size defaults to 800x450. Actual picture of\\neach page will be scaled down if necessary to fit the specified size."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5220,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5221,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame width."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5222,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame height."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5221,5222]}],"sources":[]}}}],"groups":[{"title":"Properties","children":[5218,5219]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.recordVideo"}},{"id":5223,"name":"reducedMotion","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates "},{"kind":"code","text":"`\'prefers-reduced-motion\'`"},{"kind":"text","text":" media feature, supported values are "},{"kind":"code","text":"`\'reduce\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'no-preference\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'no-preference\'`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"reduce"},{"type":"literal","value":"no-preference"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.reducedMotion"}},{"id":5224,"name":"screen","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates consistent window screen size available inside web page via "},{"kind":"code","text":"`window.screen`"},{"kind":"text","text":". Is only used when the\\n["},{"kind":"code","text":"`viewport`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-viewport) is set."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5225,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5226,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"page width in pixels."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5227,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"page height in pixels."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5226,5227]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.screen"}},{"id":5228,"name":"serviceWorkers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to allow sites to register Service workers. Defaults to "},{"kind":"code","text":"`\'allow\'`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`\'allow\'`"},{"kind":"text","text":": [Service Workers](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API) can be\\n  registered.\\n- "},{"kind":"code","text":"`\'block\'`"},{"kind":"text","text":": Playwright will block all registration of Service Workers."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"allow"},{"type":"literal","value":"block"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.serviceWorkers"}},{"id":5229,"name":"storageState","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Learn more about [storage state and auth](https://playwright.dev/docs/auth).\\n\\nPopulates context with given storage state. This option can be used to initialize context with logged-in\\ninformation obtained via\\n[browserContext.storageState([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-storage-state)."}]},"sources":[],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5230,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5231,"name":"cookies","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Cookies to set for context"}]},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5232,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5233,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5234,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5235,"name":"domain","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Domain and path are required. For the cookie to apply to all subdomains as well, prefix domain with a dot, like\\nthis: \\".example.com\\""}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5236,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Domain and path are required"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5237,"name":"expires","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Unix time in seconds."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5238,"name":"httpOnly","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":5239,"name":"secure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":5240,"name":"sameSite","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"sameSite flag"}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"Lax"},{"type":"literal","value":"Strict"},{"type":"literal","value":"None"}]}}],"groups":[{"title":"Properties","children":[5233,5234,5235,5236,5237,5238,5239,5240]}],"sources":[]}}}},{"id":5241,"name":"origins","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"localStorage to set for context"}]},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5242,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5243,"name":"origin","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5244,"name":"localStorage","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5245,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5246,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5247,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[5246,5247]}],"sources":[]}}}}],"groups":[{"title":"Properties","children":[5243,5244]}],"sources":[]}}}}],"groups":[{"title":"Properties","children":[5231,5241]}],"sources":[]}}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.storageState"}},{"id":5248,"name":"strictSelectors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set to true, enables strict selectors mode for this context. In the strict selectors mode all operations on\\nselectors that imply single target DOM element will throw when more than one element matches the selector. This\\noption does not affect any Locator APIs (Locators are always strict). Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". See\\n[Locator](https://playwright.dev/docs/api/class-locator) to learn more about the strict mode."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.strictSelectors"}},{"id":5249,"name":"timezoneId","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Changes the timezone of the context. See\\n[ICU\'s metaZones.txt](https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1)\\nfor a list of supported timezone IDs. Defaults to the system timezone."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.timezoneId"}},{"id":5250,"name":"userAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specific user agent to use in this context."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.userAgent"}},{"id":5251,"name":"videoSize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use ["},{"kind":"code","text":"`recordVideo`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-record-video) instead."}]}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5252,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5253,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame width."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5254,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame height."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5253,5254]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.videoSize"}},{"id":5255,"name":"videosPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use ["},{"kind":"code","text":"`recordVideo`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-record-video) instead."}]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.videosPath"}},{"id":5256,"name":"viewport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates consistent viewport for each page. Defaults to an 1280x720 viewport. Use "},{"kind":"code","text":"`null`"},{"kind":"text","text":" to disable the consistent\\nviewport emulation. Learn more about [viewport emulation](https://playwright.dev/docs/emulation#viewport).\\n\\n**NOTE** The "},{"kind":"code","text":"`null`"},{"kind":"text","text":" value opts out from the default presets, makes viewport depend on the host window size defined\\nby the operating system. It makes the execution of the tests non-deterministic."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"ViewportSize"},"name":"ViewportSize","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.viewport"}}],"groups":[{"title":"Properties","children":[5170,5171,5172,5173,5174,5175,5176,5186,5187,5188,5192,5193,5194,5195,5196,5197,5198,5199,5200,5201,5202,5203,5209,5216,5223,5224,5228,5229,5248,5249,5250,5251,5255,5256]}],"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":11,"character":17}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"BrowserContextOptions"},"name":"BrowserContextOptions","package":"playwright-core"}],"permalink":"/api/playwright/interface/PlaywrightOptions","categories":[],"previousId":5257,"nextId":5414},{"id":5257,"name":"BrowseTheWebWithPlaywright","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [Playwright](https://playwright.dev/).\\n\\n## Using Playwright to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nIn the example below, we configure the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/) with a Playwright\\n["},{"kind":"code","text":"`Browser`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser) so that Serenity/JS [actors](/api/core/class/Actor/)\\ncan create a new ["},{"kind":"code","text":"`BrowserContext`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsercontext) and\\ninstantiate Playwright ["},{"kind":"code","text":"`page`"},{"kind":"text","text":"s](https://playwright.dev/docs/api/class-page) as and when needed.\\n\\nThis configuration allows Serenity/JS to control the process of launching and shutting down browser instances\\nand is useful when your test runner, e.g. [Cucumber.js](/api/cucumber), doesn\'t offer this functionality.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nconst browser = await chromium.launch({ headless: true });\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" with an existing Playwright "},{"kind":"code","text":"`page`"},{"kind":"text","text":"\\n\\nTest runners like [Playwright Test](/api/playwright-test/) manage Playwright browsers for you\\nand offer a ["},{"kind":"code","text":"`page`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page) instance you can\\ninject into the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/).\\n\\nNote that [Serenity/JS Playwright Test module](/api/playwright-test/)\\nautomatically configures all your [actors](/api/core/class/Actor/)\\nwith an ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/),\\nso you don\'t need to do it by hand unless you want to override the [default configuration](/api/playwright-test/interface/SerenityOptions/).\\n\\nThe example below demonstrates how to use the ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright.usingPage`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/#usingPage) API and\\noverride the default [cast](/api/core/class/Cast/) of actors.\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, test } from \'@playwright/playwright-test\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\ndescribe(\'Serenity/JS with Playwright\', () => {\\n\\n  test.use({\\n    actors: async ({ page, contextOptions }, use) => {\\n      await use(\\n        Cast.where((actorName: string) => {\\n          return actor.whoCan(\\n            BrowseTheWebWithPlaywright.usingPage(page),\\n            // ... add any other abilities\\n          )\\n        })\\n      )\\n    }\\n  })\\n\\n  it(\'lets you reuse an existing page\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      Navigate.to(`https://serenity-js.org`),\\n      Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Configuring Playwright\\n\\nIf you\'re using Serenity/JS with [Playwright Test](/handbook/test-runners/playwright-test/),\\nSerenity/JS will automatically pick up your configuration from the ["},{"kind":"code","text":"`playwright.config.ts`"},{"kind":"text","text":"](https://playwright.dev/docs/test-configuration) file.\\n\\nWith other [test runners](/handbook/test-runners/), you can configure Playwright by:\\n- providing the browser-level configuration when calling ["},{"kind":"code","text":"`BrowserType.launch`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsertype#browser-type-launch),\\n- providing the browser context-level ["},{"kind":"code","text":"`PlaywrightOptions`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/)\\nwhen initialising the ability to "},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":".\\n\\nThe code snippet below demonstrates how to configure the browser and some popular browser context options,\\nsuch as\\n["},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" size](https://playwright.dev/docs/api/class-browser#browser-new-context-option-viewport),\\n["},{"kind":"code","text":"`geolocation`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-page-option-geolocation),\\nand ["},{"kind":"code","text":"`permissions`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-page-option-permissions),\\nbut you can use it to configure any other option available in Playwright, like\\n["},{"kind":"code","text":"`userAgent`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-user-agent)\\nor ["},{"kind":"code","text":"`storageState`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-storage-state).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Navigate } from \'@serenity-js/web\'\\nimport { Browser, chromium } from \'playwright\'\\n\\n// specify browser launch options\\nconst browser = await chromium.launch({\\n  headless: true\\n});\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser, {\\n     // specify browser context options\\n     viewport:    { width: 1600, height: 1200 },\\n     geolocation: { longitude: 51.50084271042897, latitude: -0.12462540129500639 },\\n     permissions: [ \'geolocation\' ],\\n\\n     defaultNavigationTimeout: 30_000,\\n     defaultTimeout: 10_000\\n\\n     // ... and so on\\n  }))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    // ...\\n  )\\n```"},{"kind":"text","text":"\\n\\nNote that in addition to all the standard Playwright BrowserContextOptions, you can also provide several others defined in Serenity/JS ["},{"kind":"code","text":"`PlaywrightOptions`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/), such as:\\n- "},{"kind":"code","text":"`defaultNavigationTimeout`"},{"kind":"text","text":", which changes the default maximum navigation timeout for the browser context,\\n- "},{"kind":"code","text":"`defaultTimeout`"},{"kind":"text","text":", which changes the default maximum time for all Playwright methods accepting the "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" option.\\n\\n## Learn more\\n- [Full list of Playwright "},{"kind":"code","text":"`BrowserContextOptions`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright website](https://playwright.dev/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":5258,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":159,"character":11}],"signatures":[{"id":5259,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":159,"character":11}],"parameters":[{"id":5260,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Browser"},"name":"Browser","package":"playwright-core"}},{"id":5261,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":5169,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":5257,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"}}]},{"id":5262,"name":"usingPage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":163,"character":11}],"signatures":[{"id":5263,"name":"usingPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":163,"character":11}],"parameters":[{"id":5264,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5265,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":5169,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":5257,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"}}]},{"id":5285,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":5286,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}},{"id":5287,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":5288,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}},{"id":5276,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":174,"character":10}],"signatures":[{"id":5277,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Automatically closes any open [pages](/api/web/class/Page/) when the [SceneFinishes](/api/core-events/class/SceneFinishes/)\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`PlaywrightBrowsingSession.closeAllPages`"},{"kind":"text","text":"](/api/playwright/class/PlaywrightBrowsingSession/#closeAllPages)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)"}]},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":174,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}},{"id":5273,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"signatures":[{"id":5274,"name":"new BrowseTheWebWithPlaywright","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"parameters":[{"id":5275,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3920,"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5257,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<playwright.Locator>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<playwright.Locator>.constructor"}},{"id":5279,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":5280,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":5281,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":5282,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":5283,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":5284,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[5273]},{"title":"Methods","children":[5258,5262,5285,5287,5276,5279,5281,5283]}],"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":157,"character":13}],"extendedTypes":[{"type":"reference","target":3304,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"implementedTypes":[{"type":"reference","target":571,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/playwright/class/BrowseTheWebWithPlaywright","categories":[],"nextId":5169},{"id":5414,"name":"PlaywrightBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":5423,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":34,"character":20}],"signatures":[{"id":5424,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":34,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}},{"id":5425,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5426,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5427,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5428,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5429,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5430,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4057,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5431,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5432,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5440,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5441,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5442,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":5445,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5446,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":5447,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5448,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5449,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":5450,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5451,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5452,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":5453,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5454,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":5455,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5456,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":5457,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5458,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5459,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":5460,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":5461,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"groups":[{"title":"Methods","children":[5423,5425,5428,5431,5440,5445,5447,5450,5453,5455,5457,5460]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":15,"character":22}],"extendedTypes":[{"type":"reference","target":3920,"typeArguments":[{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"extendedBy":[{"type":"reference","target":5462,"name":"PlaywrightBrowsingSessionWithBrowser"},{"type":"reference","target":5511,"name":"PlaywrightBrowsingSessionWithPage"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSession","categories":[],"previousId":5169,"nextId":5462},{"id":5462,"name":"PlaywrightBrowsingSessionWithBrowser","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":5481,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5482,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5483,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5426,"name":"PlaywrightBrowsingSession.cookie"}}],"inheritedFrom":{"type":"reference","target":5425,"name":"PlaywrightBrowsingSession.cookie"}},{"id":5484,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5485,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5486,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4057,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5429,"name":"PlaywrightBrowsingSession.setCookie"}}],"inheritedFrom":{"type":"reference","target":5428,"name":"PlaywrightBrowsingSession.setCookie"}},{"id":5487,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5488,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5432,"name":"PlaywrightBrowsingSession.deleteAllCookies"}}],"inheritedFrom":{"type":"reference","target":5431,"name":"PlaywrightBrowsingSession.deleteAllCookies"}},{"id":5463,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":13,"character":4}],"signatures":[{"id":5464,"name":"new PlaywrightBrowsingSessionWithBrowser","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":13,"character":4}],"parameters":[{"id":5465,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Browser"},"name":"Browser","package":"playwright-core"}},{"id":5466,"name":"browserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5169,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}},{"id":5467,"name":"selectors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Selectors"},"name":"Selectors","package":"playwright-core"}}],"type":{"type":"reference","target":5462,"name":"PlaywrightBrowsingSessionWithBrowser","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}},{"id":5474,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":39,"character":19}],"signatures":[{"id":5475,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":39,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5461,"name":"PlaywrightBrowsingSession.closeAllPages"}}],"overwrites":{"type":"reference","target":5460,"name":"PlaywrightBrowsingSession.closeAllPages"}},{"id":5476,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":46,"character":19}],"signatures":[{"id":5477,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":46,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5424,"name":"PlaywrightBrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":5423,"name":"PlaywrightBrowsingSession.browserCapabilities"}},{"id":5493,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5494,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5495,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5441,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":5440,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}},{"id":5496,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5497,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5446,"name":"PlaywrightBrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":5445,"name":"PlaywrightBrowsingSession.currentPage"}},{"id":5498,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5499,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5500,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5448,"name":"PlaywrightBrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":5447,"name":"PlaywrightBrowsingSession.register"}},{"id":5501,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5502,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5503,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5451,"name":"PlaywrightBrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":5450,"name":"PlaywrightBrowsingSession.deregister"}},{"id":5504,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5505,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5454,"name":"PlaywrightBrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":5453,"name":"PlaywrightBrowsingSession.allPages"}},{"id":5506,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5507,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":5456,"name":"PlaywrightBrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":5455,"name":"PlaywrightBrowsingSession.registeredPageIds"}},{"id":5508,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5509,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5510,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5458,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":5457,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"groups":[{"title":"Constructors","children":[5463]},{"title":"Methods","children":[5481,5484,5487,5474,5476,5493,5496,5498,5501,5504,5506,5508]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":5414,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSessionWithBrowser","categories":[],"previousId":5414,"nextId":5511},{"id":5511,"name":"PlaywrightBrowsingSessionWithPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":5531,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5532,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5533,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5426,"name":"PlaywrightBrowsingSession.cookie"}}],"inheritedFrom":{"type":"reference","target":5425,"name":"PlaywrightBrowsingSession.cookie"}},{"id":5534,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5535,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5536,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4057,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5429,"name":"PlaywrightBrowsingSession.setCookie"}}],"inheritedFrom":{"type":"reference","target":5428,"name":"PlaywrightBrowsingSession.setCookie"}},{"id":5537,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5538,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5432,"name":"PlaywrightBrowsingSession.deleteAllCookies"}}],"inheritedFrom":{"type":"reference","target":5431,"name":"PlaywrightBrowsingSession.deleteAllCookies"}},{"id":5512,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":15,"character":4}],"signatures":[{"id":5513,"name":"new PlaywrightBrowsingSessionWithPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":15,"character":4}],"parameters":[{"id":5514,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5515,"name":"browserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5169,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}},{"id":5516,"name":"selectors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Selectors"},"name":"Selectors","package":"playwright-core"}}],"type":{"type":"reference","target":5511,"name":"PlaywrightBrowsingSessionWithPage","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}},{"id":5524,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":40,"character":10}],"signatures":[{"id":5525,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes any newly opened pages, leaving only the original one managed by Playwright Test."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":40,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5461,"name":"PlaywrightBrowsingSession.closeAllPages"}}],"overwrites":{"type":"reference","target":5460,"name":"PlaywrightBrowsingSession.closeAllPages"}},{"id":5526,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":51,"character":19}],"signatures":[{"id":5527,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":51,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5424,"name":"PlaywrightBrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":5423,"name":"PlaywrightBrowsingSession.browserCapabilities"}},{"id":5543,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5544,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5545,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5441,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":5440,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}},{"id":5546,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5547,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5446,"name":"PlaywrightBrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":5445,"name":"PlaywrightBrowsingSession.currentPage"}},{"id":5548,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5549,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5550,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5448,"name":"PlaywrightBrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":5447,"name":"PlaywrightBrowsingSession.register"}},{"id":5551,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5552,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5553,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5451,"name":"PlaywrightBrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":5450,"name":"PlaywrightBrowsingSession.deregister"}},{"id":5554,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5555,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5454,"name":"PlaywrightBrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":5453,"name":"PlaywrightBrowsingSession.allPages"}},{"id":5556,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5557,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":5456,"name":"PlaywrightBrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":5455,"name":"PlaywrightBrowsingSession.registeredPageIds"}},{"id":5558,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5559,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5560,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5458,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":5457,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"groups":[{"title":"Constructors","children":[5512]},{"title":"Methods","children":[5531,5534,5537,5524,5526,5543,5546,5548,5551,5554,5556,5558]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":5414,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSessionWithPage","categories":[],"previousId":5462,"nextId":5561},{"id":5561,"name":"PlaywrightCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":5640,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":14,"character":4}],"signatures":[{"id":5641,"name":"new PlaywrightCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":14,"character":4}],"parameters":[{"id":5642,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"BrowserContext"},"name":"BrowserContext","package":"playwright-core"}},{"id":5643,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5561,"name":"PlaywrightCookie","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":5645,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":22,"character":10}],"signatures":[{"id":5646,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":22,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}},{"id":5650,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":5651,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":5652,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":5653,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":5654,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":5655,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":5656,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":5657,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":5658,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":5659,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":5660,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":5661,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":5662,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":5663,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":5664,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":5665,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"groups":[{"title":"Constructors","children":[5640]},{"title":"Methods","children":[5645,5650,5652,5654,5656,5658,5660,5662,5664]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightCookie","categories":[],"previousId":5511,"nextId":5666},{"id":5666,"name":"PlaywrightPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":5667,"name":"current","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":35,"character":20}],"signatures":[{"id":5668,"name":"current","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":35,"character":20}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Page.current"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.current"}},{"id":5678,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":39,"character":4}],"signatures":[{"id":5679,"name":"new PlaywrightPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":39,"character":4}],"parameters":[{"id":5680,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5414,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}},{"id":5681,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5682,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5169,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}},{"id":5683,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":5666,"name":"PlaywrightPage","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Page<playwright.Locator>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<playwright.Locator>.constructor"}},{"id":5688,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":53,"character":4}],"signatures":[{"id":5689,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":53,"character":4}],"parameters":[{"id":5690,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":5691,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":63,"character":4}],"signatures":[{"id":5692,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":63,"character":4}],"parameters":[{"id":5693,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":5694,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":72,"character":4}],"signatures":[{"id":5695,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":72,"character":4}],"parameters":[{"id":5696,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4482,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":5697,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":83,"character":10}],"signatures":[{"id":5698,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":83,"character":10}],"parameters":[{"id":5699,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":5700,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":88,"character":10}],"signatures":[{"id":5701,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":88,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":5702,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":93,"character":10}],"signatures":[{"id":5703,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":93,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":5704,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":98,"character":10}],"signatures":[{"id":5705,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":98,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":5706,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":103,"character":10}],"signatures":[{"id":5707,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":103,"character":10}],"parameters":[{"id":5708,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":5709,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":117,"character":10}],"signatures":[{"id":5710,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":117,"character":10}],"typeParameter":[{"id":5711,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5712,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":5713,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5714,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":118,"character":26}],"signatures":[{"id":5715,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":118,"character":26}],"parameters":[{"id":5716,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5712,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":5711,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}}]}}]}},{"id":5717,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5712,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5711,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":5718,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":10}],"signatures":[{"id":5719,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":10}],"typeParameter":[{"id":5720,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5721,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":5722,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5723,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":85}],"signatures":[{"id":5724,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":85}],"parameters":[{"id":5725,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":5721,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":5726,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":137}],"signatures":[{"id":5727,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":137}],"parameters":[{"id":5728,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5720,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":5729,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5721,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5720,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":5730,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":177,"character":4}],"signatures":[{"id":5731,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":177,"character":4}],"typeParameter":[{"id":5732,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":5732,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":5733,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":185,"character":10}],"signatures":[{"id":5734,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":185,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":5735,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":204,"character":10}],"signatures":[{"id":5736,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":204,"character":10}],"parameters":[{"id":5737,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":5738,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":208,"character":10}],"signatures":[{"id":5739,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":208,"character":10}],"parameters":[{"id":5740,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4057,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":5741,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":230,"character":10}],"signatures":[{"id":5742,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":230,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":5743,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":234,"character":10}],"signatures":[{"id":5744,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":234,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":5745,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":239,"character":10}],"signatures":[{"id":5746,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":239,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":5747,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":246,"character":10}],"signatures":[{"id":5748,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":246,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":5749,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":10}],"signatures":[{"id":5750,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":5751,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5752,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":5753,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5752,5753]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":5754,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":10}],"signatures":[{"id":5755,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":10}],"parameters":[{"id":5756,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":5757,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5758,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":5759,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5758,5759]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":5760,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":259,"character":10}],"signatures":[{"id":5761,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":259,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":5762,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":265,"character":10}],"signatures":[{"id":5763,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":265,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":5764,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":269,"character":4}],"signatures":[{"id":5765,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":269,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}},{"id":5766,"name":"nativePage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":273,"character":10}],"signatures":[{"id":5767,"name":"nativePage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":273,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5775,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":5776,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":5777,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4854,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":5778,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":5779,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":4158,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":5780,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":5781,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"groups":[{"title":"Constructors","children":[5678]},{"title":"Properties","children":[5775]},{"title":"Methods","children":[5667,5688,5691,5694,5697,5700,5702,5704,5706,5709,5718,5730,5733,5735,5738,5741,5743,5745,5747,5749,5754,5760,5762,5764,5766,5776,5778,5780]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":21,"character":13}],"extendedTypes":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightPage","categories":[],"previousId":5561,"nextId":5782},{"id":5782,"name":"PlaywrightPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":5802,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":16,"character":4}],"signatures":[{"id":5803,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":16,"character":4}],"parameters":[{"id":5804,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":5805,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":20,"character":4}],"signatures":[{"id":5806,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":20,"character":4}],"parameters":[{"id":5807,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":5808,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":24,"character":10}],"signatures":[{"id":5809,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":24,"character":10}],"parameters":[{"id":5810,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":5811,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":31,"character":10}],"signatures":[{"id":5812,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":31,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":5813,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":41,"character":10}],"signatures":[{"id":5814,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":41,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":5815,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":46,"character":10}],"signatures":[{"id":5816,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":46,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":5817,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":51,"character":10}],"signatures":[{"id":5818,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":51,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":5819,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":56,"character":10}],"signatures":[{"id":5820,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":56,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":5821,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":61,"character":10}],"signatures":[{"id":5822,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":61,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":5823,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":66,"character":10}],"signatures":[{"id":5824,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":66,"character":10}],"parameters":[{"id":5825,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":5826,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":79,"character":10}],"signatures":[{"id":5827,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":79,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":5828,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":101,"character":10}],"signatures":[{"id":5829,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":101,"character":10}],"parameters":[{"id":5830,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":5831,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":106,"character":10}],"signatures":[{"id":5832,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":106,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":5833,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":111,"character":10}],"signatures":[{"id":5834,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":111,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":5835,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":116,"character":10}],"signatures":[{"id":5836,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":116,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":5837,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":121,"character":10}],"signatures":[{"id":5838,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":121,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4854,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":5839,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":156,"character":10}],"signatures":[{"id":5840,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":156,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":5841,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":167,"character":10}],"signatures":[{"id":5842,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":167,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":5843,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":178,"character":10}],"signatures":[{"id":5844,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":5845,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":187,"character":10}],"signatures":[{"id":5846,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":187,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":5847,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":205,"character":10}],"signatures":[{"id":5848,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":205,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}},{"id":5849,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":5799,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":5800,"name":"new PlaywrightPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":5801,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5782,"name":"PlaywrightPageElement","package":"@serenity-js/playwright"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<playwright.Locator>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<playwright.Locator>.constructor"}},{"id":5850,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":5851,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":5852,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":5853,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}},{"id":5854,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":181,"character":4}],"signatures":[{"id":5855,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the element\\nis present in the [Document Object Model (DOM)](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model),\\n"},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":181,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"groups":[{"title":"Constructors","children":[5799]},{"title":"Properties","children":[5849]},{"title":"Methods","children":[5802,5805,5808,5811,5813,5815,5817,5819,5821,5823,5826,5828,5831,5833,5835,5837,5839,5841,5843,5845,5847,5850,5852,5854]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightPageElement","categories":[],"previousId":5666,"nextId":5289},{"id":5289,"name":"PlaywrightLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/)."}]},"children":[{"id":5290,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":18,"character":4}],"signatures":[{"id":5291,"name":"new PlaywrightLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":18,"character":4}],"parameters":[{"id":5292,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4697,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"RootLocator","package":"@serenity-js/web"}},{"id":5293,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5289,"name":"PlaywrightLocator","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Locator<playwright.Locator, string>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator<playwright.Locator, string>.constructor"}},{"id":5296,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":54,"character":10}],"signatures":[{"id":5297,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":54,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.isPresent"}},{"id":5298,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":76,"character":10}],"signatures":[{"id":5299,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":76,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.nativeElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.nativeElement"}},{"id":5300,"name":"allNativeElements","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":82,"character":10}],"signatures":[{"id":5301,"name":"allNativeElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":82,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.allNativeElements"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.allNativeElements"}},{"id":5302,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":92,"character":4}],"signatures":[{"id":5303,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":92,"character":4}],"parameters":[{"id":5304,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5383,"name":"PlaywrightRootLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.of"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.of"}},{"id":5305,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":96,"character":4}],"signatures":[{"id":5306,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":96,"character":4}],"parameters":[{"id":5307,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5289,"name":"PlaywrightLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.closestTo"}},{"id":5308,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":100,"character":4}],"signatures":[{"id":5309,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":100,"character":4}],"parameters":[{"id":5310,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5289,"name":"PlaywrightLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.locate"}},{"id":5311,"name":"element","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":104,"character":4}],"signatures":[{"id":5312,"name":"element","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":104,"character":4}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.element"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.element"}},{"id":5313,"name":"allElements","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":108,"character":10}],"signatures":[{"id":5314,"name":"allElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":108,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.allElements"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.allElements"}},{"id":5316,"name":"selector","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":19,"character":13}],"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.selector"}},{"id":5317,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":23,"character":4}],"signatures":[{"id":5318,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":23,"character":4}],"parameters":[{"id":5319,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToFrame"}},{"id":5320,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":24,"character":4}],"signatures":[{"id":5321,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":24,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToParentFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToParentFrame"}},{"id":5322,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":25,"character":4}],"signatures":[{"id":5323,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":25,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToMainFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToMainFrame"}},{"id":5327,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":42,"character":4}],"signatures":[{"id":5328,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.toString"}},{"id":5329,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom [Node.js inspection method](https://nodejs.org/api/util.html#utilinspectcustom)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":4}],"type":{"type":"reflection","declaration":{"id":5330,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":27}],"signatures":[{"id":5331,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":27}],"parameters":[{"id":5332,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":5333,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":5334,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.[custom]"}}],"groups":[{"title":"Constructors","children":[5290]},{"title":"Properties","children":[5316,5329]},{"title":"Methods","children":[5296,5298,5300,5302,5305,5308,5311,5313,5317,5320,5322,5327]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightLocator","categories":[],"previousId":5782,"nextId":5383},{"id":5383,"name":"PlaywrightRootLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/)."}]},"children":[{"id":5384,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":17,"character":4}],"signatures":[{"id":5385,"name":"new PlaywrightRootLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":17,"character":4}],"parameters":[{"id":5386,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}}],"type":{"type":"reference","target":5383,"name":"PlaywrightRootLocator","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator<playwright.Locator>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator<playwright.Locator>.constructor"}},{"id":5389,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":22,"character":10}],"signatures":[{"id":5390,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":22,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.isPresent"}},{"id":5391,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":26,"character":4}],"signatures":[{"id":5392,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":26,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"literal","value":"locator"}],"name":"Pick","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.nativeElement"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.nativeElement"}},{"id":5393,"name":"evaluate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":37,"character":4},{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":38,"character":4}],"signatures":[{"id":5394,"name":"evaluate","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Evaluates the given "},{"kind":"code","text":"`pageFunction`"},{"kind":"text","text":" in the context of the current frame.\\nSee ["},{"kind":"code","text":"`playwright.Frame.evaluate`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-frame#frame-evaluate)."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":37,"character":4}],"typeParameter":[{"id":5395,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5396,"name":"Arguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":5397,"name":"pageFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/structs.d.ts","qualifiedName":"PageFunction"},"typeArguments":[{"type":"reference","target":5396,"name":"Arguments","package":"@serenity-js/playwright","refersToTypeParameter":true},{"type":"reference","target":5395,"name":"R","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"PageFunction","package":"playwright-core"}},{"id":5398,"name":"arg","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5396,"name":"Arguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5395,"name":"R","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5399,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":47,"character":10}],"signatures":[{"id":5400,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current context to the frame identified by the given locator."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":47,"character":10}],"parameters":[{"id":5401,"name":"frame","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToFrame"}},{"id":5402,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":55,"character":10}],"signatures":[{"id":5403,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current context to the parent frame of the current frame."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":55,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToParentFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToParentFrame"}},{"id":5404,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":62,"character":10}],"signatures":[{"id":5405,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context to the top-level frame."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":62,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToMainFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToMainFrame"}},{"id":5406,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":21,"character":4}],"signatures":[{"id":5407,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.toString"}},{"id":5408,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":4}],"type":{"type":"reflection","declaration":{"id":5409,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":27}],"signatures":[{"id":5410,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":27}],"parameters":[{"id":5411,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":5412,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":5413,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.[custom]"}}],"groups":[{"title":"Constructors","children":[5384]},{"title":"Properties","children":[5408]},{"title":"Methods","children":[5389,5391,5393,5399,5402,5404,5406]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":4697,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"RootLocator","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightRootLocator","categories":[],"previousId":5289}],"groups":[{"title":"Abilities","children":[5257]},{"title":"Configuration","children":[5169]},{"title":"Models","children":[5414,5462,5511,5561,5666,5782,5289,5383]}],"sources":[{"fileName":"packages/playwright/src/index.ts","line":1,"character":0}],"permalink":"/api/playwright"},"urlSlug":"playwright"}],"packageName":"@serenity-js/playwright","packageVersion":"3.31.0"},{"entryPoints":[{"index":true,"label":"index","reflection":{"id":66,"name":"@serenity-js/playwright-test","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":23002,"name":"DescribeFunction","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":5,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":23003,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23004,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-only). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":28,"character":4}],"type":{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":23005,"name":"skip","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in the skipped\\ngroup are never run.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-skip). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":49,"character":4}],"type":{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":23006,"name":"fixme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in this group\\nare marked as \\"fixme\\" and will not be executed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-fixme). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":70,"character":4}],"type":{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":23007,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":23008,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23009,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":123,"character":8}],"type":{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[23009]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":28}]}}]}},{"id":23010,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel) allows\\nthem to run in parallel.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks."}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel). Any\\ntests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":23011,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23012,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel), but\\nfocuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":173,"character":8}],"type":{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[23012]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":30}]}}]}},{"id":23013,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":4}],"type":{"type":"reflection","declaration":{"id":23014,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":15}],"signatures":[{"id":23015,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":23016,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23017,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23018,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":27}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":23019,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":69}],"type":{"type":"intrinsic","name":"number"}},{"id":23020,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":87}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[23018,23019,23020]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":25}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[23004,23005,23006,23007,23010,23013]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":5,"character":47}]}}]},"permalink":"/api/playwright-test#DescribeFunction","categories":[],"previousId":22999,"nextId":23021},{"id":23021,"name":"PlaywrightTestConfig","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Convenience alias for [PlaywrightTestConfig](https://playwright.dev/docs/test-configuration) object\\nthat includes ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/) and allows for any other custom options when needed.\\n\\n#### Example\\nConfiguring Playwright Test using the standard "},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":" from "},{"kind":"code","text":"`@playwright/test`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@playwright/test\'\\nimport type { SerenityOptions } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig<SerenityOptions & MyCustomOptions> = {\\n    // ...\\n}\\n\\nexport default config\\n```"},{"kind":"text","text":"\\n\\nSimplified configuration using Serenity/JS "},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":" from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n   // ...\\n}\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- ["},{"kind":"code","text":"`SerenityReporterForPlaywrightTestConfig`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityReporterForPlaywrightTestConfig/)\\n- [Playwright Test configuration](https://playwright.dev/docs/test-configuration)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/PlaywrightTestConfig.ts","line":42,"character":12}],"typeParameters":[{"id":23022,"name":"TestArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"object"}},{"id":23023,"name":"WorkerArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestConfig"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"reference","target":23022,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"reference","target":23023,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"BasePlaywrightTestConfig","package":"playwright","qualifiedName":"PlaywrightTestConfig"},"permalink":"/api/playwright-test#PlaywrightTestConfig","categories":[],"previousId":23002,"nextId":23065},{"id":23024,"name":"SerenityFixtures","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS-specific [Playwright Test fixtures](https://playwright.dev/docs/test-fixtures)\\ninjected into your [test scenarios](/api/playwright-test/function/it/).\\n\\n## Example test scenario\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\ndescribe(`Recording items`, () => {\\n\\n    test.use({\\n        defaultActorName: \'Serena\',\\n        crew: [\\n            Photographer.whoWill(TakePhotosOfFailures),\\n        ],\\n    })\\n\\n    describe(`Todo List App`, () => {\\n\\n        it(`should allow me to add a todo item`, async ({ actor }) => {\\n            await actor.attemptsTo(\\n                startWithAnEmptyList(),\\n\\n                recordItem(\'Buy some milk\'),\\n\\n                Ensure.that(itemNames(), equals([\\n                    \'Buy some milk\',\\n                ])),\\n            )\\n        })\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"children":[{"id":23025,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the root object of the Serenity/JS framework."}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":50,"character":4}],"type":{"type":"reference","target":1951,"name":"Serenity","package":"@serenity-js/core"}},{"id":23026,"name":"platform","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name and version of the operating system that Playwright Test worker process runs on."}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":4}],"type":{"type":"reflection","declaration":{"id":23027,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23028,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":16}],"type":{"type":"intrinsic","name":"string"}},{"id":23029,"name":"version","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":30}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[23028,23029]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":14}]}}},{"id":23030,"name":"actors","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A cast of Serenity/JS actors to be used instead of the default cast\\nwhen instantiating ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor)\\nand invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled).\\n\\n#### Overriding the default cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Recording items`, () => {\\n\\n    test.use({\\n        defaultActorName: \'Serena\',\\n        actors: ({ browser, contextOptions }, use) => {\\n            const cast = Cast.where(actor =>\\n                actor.whoCan(\\n                    BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                    TakeNotes.usingAnEmptyNotepad(),\\n                )\\n            )\\n\\n            // Make sure to pass your custom cast to Playwright `use` callback\\n            use(cast)\\n        },\\n    })\\n\\n    describe(`Todo List App`, () => {\\n\\n        it(`should allow me to add a todo item`, async ({ actor }) => {\\n            await actor.attemptsTo(\\n                startWithAnEmptyList(),\\n\\n                recordItem(\'Buy some milk\'),\\n\\n                Ensure.that(itemNames(), equals([\\n                    \'Buy some milk\',\\n                ])),\\n            )\\n        })\\n    })\\n})\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":104,"character":4}],"type":{"type":"reference","target":2000,"name":"Cast","package":"@serenity-js/core"}},{"id":23031,"name":"actorCalled","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the provided [cast](/api/core/class/Cast/) of ["},{"kind":"code","text":"`actors`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actors) to instantiate an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) called "},{"kind":"code","text":"`name`"},{"kind":"text","text":"\\nand inject it into a [test scenario](/api/playwright-test/function/it/).\\n\\nRetrieves an existing actor if one has already been instantiated.\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- ["},{"kind":"code","text":"`SerenityOptions.actors`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/#actors)\\n- ["},{"kind":"code","text":"`SerenityFixtures.actors`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actors)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":119,"character":4}],"type":{"type":"reflection","declaration":{"id":23032,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":119,"character":17}],"signatures":[{"id":23033,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":119,"character":17}],"parameters":[{"id":23034,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]}}},{"id":23035,"name":"actor","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Default ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor) injected into a [test scenario](/api/playwright-test/function/it/).\\n\\nUsing "},{"kind":"code","text":"`actor`"},{"kind":"text","text":" fixture is equivalent to invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) with ["},{"kind":"code","text":"`defaultActorName`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/#defaultActorName).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled)\\n- ["},{"kind":"code","text":"`SerenityOptions.defaultActorName`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/#defaultActorName)\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":131,"character":4}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[23025,23026,23030,23031,23035]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":45,"character":17}],"permalink":"/api/playwright-test/interface/SerenityFixtures","categories":[],"previousId":23059,"nextId":23036},{"id":23036,"name":"SerenityOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object accepted by "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":".\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport type { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\nimport type { CallAnApi } from \'@serenity-js/rest\'\\n\\n// Define any custom configuration options, if needed\\ninterface MyCustomOptions {\\n    apiUrl: string;\\n}\\n\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n\\n    // Register Serenity/JS reporter for Playwright Test\\n    // to enable integration with Serenity/JS stage crew members\\n    // and have them instantiated in the Playwright reporter process\\n    reporter: [\\n        [ \'@serenity-js/playwright-test\', {\\n            // Stage crew members instantiated in the test reporter process\\n            crew: [\\n                \'@serenity-js/serenity-bdd\',\\n                \'@serenity-js/console-reporter\',\\n                [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n            ]\\n        }]\\n    ],\\n\\n    use: {\\n\\n        // Register Serenity/JS stage crew members\\n        // and have them instantiated in Playwright Test worker processes\\n        crew: [\\n            [ \'@serenity-js/web:Photographer\', { strategy: \'TakePhotosOfFailures\' } ]\\n        ],\\n\\n        // Register a custom cast of Serenity/JS actors\\n        // if you don\'t want to use the default ones\\n        actors: ({ browser, contextOptions, apiUrl }, use) => {\\n             const cast = Cast.where(actor =>\\n                 actor.whoCan(\\n                     BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                     TakeNotes.usingAnEmptyNotepad(),\\n                     CallAnApi.at(apiUrl),\\n                 )\\n             )\\n\\n             use(cast)\\n        },\\n\\n        // Name to be given to an actor injected via `actor` fixture\\n        defaultActorName: \'Alice\',\\n\\n        // Any custom options, as per the MyCustomOptions interface\\n        apiUrl: \'https://api.serenity-js.org/v1\'\\n\\n        // Any other Playwright options\\n        baseURL: \'https://todo-app.serenity-js.org/\',\\n        video: \'on-first-retry\',\\n        trace: \'on-first-retry\',\\n    },\\n}\\n\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":"](/api/playwright-test/#PlaywrightTestConfig)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"children":[{"id":23037,"name":"actors","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/) of ["},{"kind":"code","text":"`SerenityConfig.actors|actors`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#actors) to be used when injecting an ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor)\\nor invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) in a [test scenario](/api/playwright-test/function/it/).\\n\\n:::info Did you know?\\nWhen you use "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" [test APIs](/api/playwright-test/function/it/), Serenity/JS already provides a default cast of actors for you.\\nEach one of the default actors receives [abilities](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/) and ["},{"kind":"code","text":"`TakeNotes.usingAnEmptyNotepad`"},{"kind":"text","text":"](/api/core/class/TakeNotes/#usingAnEmptyNotepad).\\n\\nThe default abilities should be sufficient in most web testing scenarios. However, you might want to override this default configuration\\nwhen you need your actors to [interact with REST APIs](/api/rest/class/CallAnApi/),\\n[manage local servers](/api/local-server/class/ManageALocalServer/),\\nstart with a notepad that has some [initial state](/api/core/class/TakeNotes/#using),\\nor receive [custom abilities](/api/core/class/Ability/).\\n:::\\n\\n#### Using a custom crew of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\nimport { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\n// Define any custom configuration options, if needed\\ninterface MyCustomOptions {\\n    apiUrl: string;\\n}\\n\\n// Parameterise PlaywrightTestConfig with MyCustomOptions\\n// to enable type checking of any custom properties\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        },\\n\\n        // custom properties\\n        apiUrl: \'https://api.serenity-js.org/v1\',\\n\\n        // Custom cast of actors receives `contextOptions`\\n        // with the additional Serenity/JS properties (see `PlaywrightOptions`),\\n        // as well as any other custom properties you define in the destructuring expression,\\n        // such as `apiUrl`.\\n        actors: ({ browser, contextOptions, apiUrl }, use) => {\\n            const cast = Cast.where(actor => actor.whoCan(\\n                BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                TakeNotes.usingAnEmptyNotepad(),\\n                CallAnApi.at(apiUrl),\\n            ))\\n\\n            // Make sure to pass your custom cast to Playwright `use` callback\\n            use(cast)\\n        },\\n    },\\n};\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":146,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestFixture"},"typeArguments":[{"type":"reference","target":2000,"name":"Cast","package":"@serenity-js/core"},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"}]}],"name":"TestFixture","package":"playwright"}},{"id":23038,"name":"defaultActorName","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the name given to the default Serenity/JS ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor)\\ninjected into a [test scenario](/api/playwright-test/function/it/).\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":156,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":23039,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`SerenityConfig.crew|stage crew members`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew|stage crew members)\\nto be instantiated in Playwright Test worker processes.\\n\\n:::info Did you know?\\nBy default, Serenity/JS registers a ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/).whoWill(["},{"kind":"code","text":"`TakePhotosOfFailures`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfFailures/)),\\nso that any test failures are automatically accompanied by a screenshot.\\n\\nIf you prefer a different behaviour, you can configure the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" with an empty array to disable taking screenshots altogether ("},{"kind":"code","text":"`crew: []`"},{"kind":"text","text":"),\\nor with a ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) who uses a different ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/), like to ["},{"kind":"code","text":"`TakePhotosOfInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfInteractions/).\\n:::\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        crew: [\\n            [ \'@serenity-js/web:Photographer\', { strategy: \'TakePhotosOfFailures\' } ]\\n        ],\\n    },\\n};\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":189,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2241,"typeArguments":[{"type":"reference","target":2074,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":84,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":23040,"name":"cueTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets the ["},{"kind":"code","text":"`SerenityConfig.cueTimeout|cueTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#cueTimeout) to a given [duration](/api/core/class/Duration/) or a numeric value in milliseconds.\\nDefaults to **5 seconds**.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.cueTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#cueTimeout)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":200,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}]}},{"id":23041,"name":"interactionTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum default amount of time allowed for interactions such as ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)\\nto complete.\\n\\nDefaults to **5 seconds**, can be overridden per interaction.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":211,"character":4}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":23042,"name":"contextOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright [BrowserContextOptions](https://playwright.dev/docs/api/class-testoptions#test-options-context-options),\\naugmented with several convenience properties to be used with the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/).\\n\\nAdditional convenience properties include:\\n- ["},{"kind":"code","text":"`PlaywrightOptions.defaultNavigationTimeout`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/#defaultNavigationTimeout)\\n- ["},{"kind":"code","text":"`PlaywrightOptions.defaultNavigationWaitUntil`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/#defaultNavigationWaitUntil)\\n- ["},{"kind":"code","text":"`PlaywrightOptions.defaultTimeout`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/#defaultTimeout)\\n\\n#### Using "},{"kind":"code","text":"`contextOptions`"},{"kind":"text","text":" with the default cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        }\\n\\n        // Since `actors` property is not defined,\\n        // `contextOptions` will be passed to the default cast of Serenity/JS actors\\n        // and injected into the ability to `BrowseTheWebWithPlaywright`\\n        // that each actor receives.\\n    },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Using "},{"kind":"code","text":"`contextOptions`"},{"kind":"text","text":" with a custom cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        }\\n\\n        // Custom cast of actors receives `contextOptions` with the\\n        // additional Serenity/JS properties.\\n        actors: ({ browser, contextOptions }, use) => {\\n            const cast = Cast.where(actor => actor.whoCan(\\n                BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                TakeNotes.usingAnEmptyNotepad(),\\n            ))\\n\\n            use(cast)\\n        },\\n    },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Browser Context options](https://playwright.dev/docs/api/class-testoptions#test-options-context-options)\\n- [Playwright Test fixtures](https://playwright.dev/docs/test-fixtures)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":276,"character":4}],"type":{"type":"reference","target":5169,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}}],"groups":[{"title":"Properties","children":[23037,23038,23039,23040,23041,23042]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":81,"character":17}],"permalink":"/api/playwright-test/interface/SerenityOptions","categories":[],"previousId":23024,"nextId":23043},{"id":23043,"name":"SuiteFunction","variant":"declaration","kind":256,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":6,"character":17}],"signatures":[{"id":23044,"name":"SuiteFunction","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(\'two tests\', () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":4}],"parameters":[{"id":23045,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23046,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Any tests added in\\nthis callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23047,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"signatures":[{"id":23048,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23049,"name":"SuiteFunction","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an anonymous group of tests. This is convenient to give a group of tests a common option with\\n[test.use(options)](https://playwright.dev/docs/api/class-test#test-use).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(() => {\\n  test.use({ colorScheme: \'dark\' });\\n\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":4}],"parameters":[{"id":23050,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe(callback)](https://playwright.dev/docs/api/class-test#test-describe-2). Any tests added in this\\ncallback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23051,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"signatures":[{"id":23052,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23053,"name":"SuiteFunction","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests."}]},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":4}],"parameters":[{"id":23054,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23055,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Additional details for all tests in the group."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23056,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Any tests added in\\nthis callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23057,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"signatures":[{"id":23058,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/interface/SuiteFunction","categories":[],"previousId":23036,"nextId":22999},{"id":23064,"name":"fixtures","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":34,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intrinsic","name":"object"},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"}]}],"name":"Fixtures","package":"playwright"},"defaultValue":"...","permalink":"/api/playwright-test#fixtures","categories":[],"previousId":23065},{"id":23065,"name":"TestApi","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS BDD-style test API created by ["},{"kind":"code","text":"`useBase`"},{"kind":"text","text":"](/api/playwright-test/function/useBase/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":168,"character":12}],"typeParameters":[{"id":23076,"name":"TestArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":23077,"name":"WorkerArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":23076,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":23077,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"},{"type":"union","types":[{"type":"literal","value":"beforeAll"},{"type":"literal","value":"beforeEach"},{"type":"literal","value":"afterEach"},{"type":"literal","value":"afterAll"},{"type":"literal","value":"expect"}]}],"name":"Pick","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"},{"type":"reflection","declaration":{"id":23066,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23067,"name":"useFixtures","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a Serenity/JS BDD-style test API around the default Playwright [base test](https://playwright.dev/docs/test-fixtures)\\nand using custom test fixtures.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: \'Hello world!\'\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nShorthand for ["},{"kind":"code","text":"`useBase`"},{"kind":"text","text":"](/api/playwright-test/function/useBase/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":195,"character":8}],"type":{"type":"reflection","declaration":{"id":23068,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":195,"character":21}],"signatures":[{"id":23069,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"typeParameter":[{"id":23071,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":23072,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":23070,"name":"customFixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":23071,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":23072,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":23076,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":23077,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":23065,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":23076,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":23071,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":23077,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":23072,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]}],"name":"TestApi","package":"@serenity-js/playwright-test"}}]}}},{"id":23073,"name":"it","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":196,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":23076,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":23077,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}},{"id":23074,"name":"test","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":197,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":23076,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":23077,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}},{"id":23075,"name":"describe","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":198,"character":8}],"type":{"type":"reference","target":23002,"name":"DescribeFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[23067,23073,23074,23075]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":170,"character":4}]}}]},"permalink":"/api/playwright-test#TestApi","categories":[],"previousId":23021,"nextId":23064},{"id":23078,"name":"it","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":23086,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23087,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}]},"sources":[],"parameters":[{"id":23088,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23089,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23090,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}]},"sources":[],"parameters":[{"id":23091,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23092,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23093,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23094,"name":"describe","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests.\\n- "},{"kind":"code","text":"`test.describe(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a group of tests with a title. The title will be visible in the test report as a part of each\\ntest\'s title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(\'two tests\', () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Anonymous group**\\n\\nYou can also declare a test group without a title. This is convenient to give a group of tests a common option with\\n[test.use(options)](https://playwright.dev/docs/api/class-test#test-use).\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(() => {\\n  test.use({ colorScheme: \'dark\' });\\n\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Tags**\\n\\nYou can tag all tests in a group by providing additional details. Note that each tag must start with "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two tagged tests\', {\\n  tag: \'@smoke\',\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [tagging](https://playwright.dev/docs/test-annotations#tag-tests).\\n\\n**Annotations**\\n\\nYou can annotate all tests in a group by providing additional details.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two annotated tests\', {\\n  annotation: {\\n    type: \'issue\',\\n    description: \'https://github.com/microsoft/playwright/issues/23180\',\\n  },\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [test annotations](https://playwright.dev/docs/test-annotations)."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":23095,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23096,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23097,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23098,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23099,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23100,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23101,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23102,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23103,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23104,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23105,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23106,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23107,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23108,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23109,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23110,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23111,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23112,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23113,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23114,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23115,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23116,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23117,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23118,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23119,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23120,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23121,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23122,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23123,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23124,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23125,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23126,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23127,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23128,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23129,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23130,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23131,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23132,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23133,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23134,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23135,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23136,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23137,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23138,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23139,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23140,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23141,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23142,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23143,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23144,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":23145,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23146,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23147,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23148,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23149,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23150,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23151,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23152,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23153,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23154,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23155,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23156,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23157,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23158,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23159,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23160,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23161,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[23146]}],"sources":[],"signatures":[{"id":23162,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23163,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23164,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23165,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23166,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23167,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23168,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23169,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23170,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23171,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23172,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23173,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23174,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23175,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23176,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":23177,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel)\\nallows them to run in parallel.\\n- "},{"kind":"code","text":"`test.describe.parallel(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks.\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":23178,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23179,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23180,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23181,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23182,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23183,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23184,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23185,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23186,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23187,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23188,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23189,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23190,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23191,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23192,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23193,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23194,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[23179]}],"sources":[],"signatures":[{"id":23195,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23196,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23197,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23198,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23199,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23200,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23201,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23202,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23203,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23204,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23205,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23206,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23207,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23208,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23209,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":23210,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":23211,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23212,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23213,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23214,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23215,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":23216,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":23217,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[23215,23216,23217]}],"sources":[]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[23144,23177,23210]},{"title":"Methods","children":[23096,23112,23128]}],"sources":[],"signatures":[{"id":23218,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23219,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23220,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23221,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23222,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23223,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23224,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23225,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23226,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23227,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23228,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23229,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Additional details for all tests in the group."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23230,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23231,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23232,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":23233,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23234,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23235,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23236,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23237,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23238,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23239,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23240,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23241,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":23242,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23243,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":23244,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23245,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23246,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"ConditionBody","package":"playwright"}},{"id":23247,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23248,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23249,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23250,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23251,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23252,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23253,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23254,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23255,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23256,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":23257,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23258,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":23259,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23260,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23261,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"ConditionBody","package":"playwright"}},{"id":23262,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23263,"name":"fail","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":23264,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23265,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23266,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can use "},{"kind":"code","text":"`test.fail.only`"},{"kind":"text","text":" to focus on a specific test that is expected to fail. This is particularly useful when\\ndebugging a failing test or working on a specific issue.\\n\\nTo declare a focused \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a focused failing test, so that Playwright runs only this test and ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail.only(\'focused failing test\', async ({ page }) => {\\n  // This test is expected to fail\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}]},"sources":[],"parameters":[{"id":23267,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23268,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23269,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can use "},{"kind":"code","text":"`test.fail.only`"},{"kind":"text","text":" to focus on a specific test that is expected to fail. This is particularly useful when\\ndebugging a failing test or working on a specific issue.\\n\\nTo declare a focused \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a focused failing test, so that Playwright runs only this test and ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail.only(\'focused failing test\', async ({ page }) => {\\n  // This test is expected to fail\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}]},"sources":[],"parameters":[{"id":23270,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23271,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for test\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23272,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[23265]}],"sources":[],"signatures":[{"id":23273,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23274,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23275,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23276,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23277,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23278,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23279,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23280,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23281,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":23282,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23283,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23284,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"ConditionBody","package":"playwright"}},{"id":23285,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23286,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":23287,"name":"slow","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23288,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":23289,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23290,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"slow\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":23291,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23292,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23293,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"slow\\", based on test fixtures. Test or tests are marked as \\"slow\\" when\\nthe return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"ConditionBody","package":"playwright"}},{"id":23294,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23295,"name":"setTimeout","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23296,"name":"setTimeout","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the timeout for the test. Zero means no timeout. Learn more about [various timeouts](https://playwright.dev/docs/test-timeouts).\\n\\nTimeout for the currently running test is available through\\n[testInfo.timeout](https://playwright.dev/docs/api/class-testinfo#test-info-timeout).\\n\\n**Usage**\\n- Changing test timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test(\'very slow test\', async ({ page }) => {\\n    test.setTimeout(120000);\\n    // ...\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout from a slow "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook. Note that this affects the test timeout that is shared with\\n  "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeEach(async ({ page }, testInfo) => {\\n    // Extend timeout for all tests running this hook by 30 seconds.\\n    test.setTimeout(testInfo.timeout + 30000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Note this affects the hook\'s timeout, not the test\\n  timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeAll(async () => {\\n    // Set timeout for this hook.\\n    test.setTimeout(60000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for all tests in a\\n  [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe(\'group\', () => {\\n    // Applies to all tests in this group.\\n    test.describe.configure({ timeout: 60000 });\\n\\n    test(\'test one\', async () => { /* ... */ });\\n    test(\'test two\', async () => { /* ... */ });\\n    test(\'test three\', async () => { /* ... */ });\\n  });\\n  ```"}]},"sources":[],"parameters":[{"id":23297,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Timeout in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23298,"name":"beforeEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23299,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":23300,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23301,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23302,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23303,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23304,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23305,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":23306,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23307,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23308,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23309,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23310,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23311,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23312,"name":"afterEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23313,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":23314,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23315,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23316,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23317,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23318,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23319,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":23320,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23321,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23322,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23323,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23324,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23325,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23326,"name":"beforeAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23327,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":23328,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23329,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23330,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23331,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23332,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23333,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":23334,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23335,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23336,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23337,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23338,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23339,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23340,"name":"afterAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23341,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23342,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23343,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23344,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23345,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23346,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23347,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23348,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23349,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23350,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23351,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23352,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23353,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23354,"name":"use","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23355,"name":"use","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Specifies options or fixtures to use in a single test file or a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group. Most\\nuseful to set an option, for example set "},{"kind":"code","text":"`locale`"},{"kind":"text","text":" to configure "},{"kind":"code","text":"`context`"},{"kind":"text","text":" fixture.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({ locale: \'en-US\' });\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\n"},{"kind":"code","text":"`test.use`"},{"kind":"text","text":" can be called either in the global scope or inside "},{"kind":"code","text":"`test.describe`"},{"kind":"text","text":". It is an error to call it within\\n"},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n\\nIt is also possible to override a fixture by providing a function.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({\\n  locale: async ({}, use) => {\\n    // Read locale from some configuration file.\\n    const locale = await fs.promises.readFile(\'test-locale\', \'utf-8\');\\n    await use(locale);\\n  },\\n});\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"}]},"sources":[],"parameters":[{"id":23356,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reflection","declaration":{"id":23357,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":23358,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23359,"name":"step","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23360,"name":"step","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test step that is shown in the report.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  await test.step(\'Log in\', async () => {\\n    // ...\\n  });\\n\\n  await test.step(\'Outer step\', async () => {\\n    // ...\\n    // You can nest steps inside each other.\\n    await test.step(\'Inner step\', async () => {\\n      // ...\\n    });\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\nThe method returns the value returned by the step callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  const user = await test.step(\'Log in\', async () => {\\n    // ...\\n    return \'john\';\\n  });\\n  expect(user).toBe(\'john\');\\n});\\n```"},{"kind":"text","text":"\\n\\n**Decorator**\\n\\nYou can use TypeScript method decorators to turn a method into a step. Each call to the decorated method will show\\nup as a step in the report.\\n\\n"},{"kind":"code","text":"```js\\nfunction step(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    });\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @step\\n  async login() {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await this.page.getByLabel(\'Username or email address\').fill(account.username);\\n    await this.page.getByLabel(\'Password\').fill(account.password);\\n    await this.page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(this.page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();\\n});\\n```"},{"kind":"text","text":"\\n\\n**Boxing**\\n\\nWhen something inside a step fails, you would usually see the error pointing to the exact action that failed. For\\nexample, consider the following login step:\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await page.getByLabel(\'Username or email address\').fill(account.username);\\n    await page.getByLabel(\'Password\').fill(account.password);\\n    await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  });\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  await page.goto(\'https://github.com/login\');\\n  await login(page);\\n});\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n   8 |     await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n>  9 |     await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n     |                                                                               ^\\n  10 |   });\\n```"},{"kind":"text","text":"\\n\\nAs we see above, the test may fail with an error pointing inside the step. If you would like the error to highlight\\nthe \\"login\\" step instead of its internals, use the "},{"kind":"code","text":"`box`"},{"kind":"text","text":" option. An error inside a boxed step points to the step\\ncall site.\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    // ...\\n  }, { box: true });  // Note the \\"box\\" option here.\\n}\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n  14 |   await page.goto(\'https://github.com/login\');\\n> 15 |   await login(page);\\n     |         ^\\n  16 | });\\n```"},{"kind":"text","text":"\\n\\nYou can also create a TypeScript decorator for a boxed step, similar to a regular step decorator above:\\n\\n"},{"kind":"code","text":"```js\\nfunction boxedStep(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    }, { box: true });  // Note the \\"box\\" option here.\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @boxedStep\\n  async login() {\\n    // ....\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();  // <-- Error will be reported on this line.\\n});\\n```"}]},"sources":[],"typeParameter":[{"id":23361,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":23362,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step name."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23363,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step body."}]},"type":{"type":"reflection","declaration":{"id":23364,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23365,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":23361,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":23361,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":23366,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":23367,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23368,"name":"box","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":23369,"name":"location","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Location"},"name":"Location","package":"playwright"}}],"groups":[{"title":"Properties","children":[23368,23369]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":23361,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":23370,"name":"expect","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect`"},{"kind":"text","text":" function can be used to create test assertions. Read more about [test assertions](https://playwright.dev/docs/test-assertions).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example\', async ({ page }) => {\\n  await test.expect(page).toHaveTitle(\'Title\');\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":23371,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}},{"id":23372,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23373,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Extends the "},{"kind":"code","text":"`test`"},{"kind":"text","text":" object by defining fixtures and/or options that can be used in the tests.\\n\\n**Usage**\\n\\nFirst define a fixture and/or an option.\\n\\n"},{"kind":"code","text":"```js\\nimport { test as base } from \'@playwright/test\';\\nimport { TodoPage } from \'./todo-page\';\\n\\nexport type Options = { defaultItem: string };\\n\\n// Extend basic test by providing a \\"defaultItem\\" option and a \\"todoPage\\" fixture.\\nexport const test = base.extend<Options & { todoPage: TodoPage }>({\\n  // Define an option and provide a default value.\\n  // We can later override it in the config.\\n  defaultItem: [\'Do stuff\', { option: true }],\\n\\n  // Define a fixture. Note that it can use built-in fixture \\"page\\"\\n  // and a new option \\"defaultItem\\".\\n  todoPage: async ({ page, defaultItem }, use) => {\\n    const todoPage = new TodoPage(page);\\n    await todoPage.goto();\\n    await todoPage.addToDo(defaultItem);\\n    await use(todoPage);\\n    await todoPage.removeAll();\\n  },\\n});\\n```"},{"kind":"text","text":"\\n\\nThen use the fixture in the test.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test } from \'./my-test\';\\n\\ntest(\'test 1\', async ({ todoPage }) => {\\n  await todoPage.addToDo(\'my todo\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nConfigure the option in config file.\\n\\n"},{"kind":"code","text":"```js\\n// playwright.config.ts\\nimport { defineConfig } from \'@playwright/test\';\\nimport type { Options } from \'./my-test\';\\n\\nexport default defineConfig<Options>({\\n  projects: [\\n    {\\n      name: \'shopping\',\\n      use: { defaultItem: \'Buy milk\' },\\n    },\\n    {\\n      name: \'wellbeing\',\\n      use: { defaultItem: \'Exercise!\' },\\n    },\\n  ]\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [fixtures](https://playwright.dev/docs/test-fixtures) and [parametrizing tests](https://playwright.dev/docs/test-parameterize)."}]},"sources":[],"typeParameter":[{"id":23374,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"}},{"id":23375,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"},"default":{"type":"reflection","declaration":{"id":23376,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}}],"parameters":[{"id":23377,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An object containing fixtures and/or options. Learn more about [fixtures format](https://playwright.dev/docs/test-fixtures)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":23374,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":23375,"name":"W","package":"playwright","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":23374,"name":"T","package":"playwright","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"},{"type":"reference","target":23375,"name":"W","package":"playwright","refersToTypeParameter":true}]}],"name":"TestType","package":"playwright"}}]},{"id":23378,"name":"info","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23379,"name":"info","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns information about the currently running test. This method can only be called during the test execution,\\notherwise it throws.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example test\', async ({ page }) => {\\n  // ...\\n  await test.info().attach(\'screenshot\', {\\n    body: await page.screenshot(),\\n    contentType: \'image/png\',\\n  });\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}]}],"groups":[{"title":"Properties","children":[23094,23263,23370]},{"title":"Methods","children":[23086,23233,23248,23287,23295,23298,23312,23326,23340,23354,23359,23372,23378]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":276,"character":13}],"signatures":[{"id":23079,"name":"it","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'supports multiple actors using separate browsers\', async ({ actorCalled }) => {\\n    await actorCalled(\'Alice\').attemptsTo(\\n      startWithAListContaining(\\n        \'Feed the cat\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      startWithAListContaining(\\n        \'Walk the dog\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Feed the cat\'\\n      ])),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Walk the dog\'\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Test "},{"kind":"code","text":"`test`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-call)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":276,"character":13}],"parameters":[{"id":23080,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":23081,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23082,"name":"it","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'supports multiple actors using separate browsers\', async ({ actorCalled }) => {\\n    await actorCalled(\'Alice\').attemptsTo(\\n      startWithAListContaining(\\n        \'Feed the cat\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      startWithAListContaining(\\n        \'Walk the dog\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Feed the cat\'\\n      ])),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Walk the dog\'\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Test "},{"kind":"code","text":"`test`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-call)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":276,"character":13}],"parameters":[{"id":23083,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":23084,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23085,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/it","categories":[],"previousId":23849,"nextId":23380},{"id":23380,"name":"test","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":23388,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23389,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}]},"sources":[],"parameters":[{"id":23390,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23391,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23392,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}]},"sources":[],"parameters":[{"id":23393,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23394,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23395,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23396,"name":"describe","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests.\\n- "},{"kind":"code","text":"`test.describe(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a group of tests with a title. The title will be visible in the test report as a part of each\\ntest\'s title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(\'two tests\', () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Anonymous group**\\n\\nYou can also declare a test group without a title. This is convenient to give a group of tests a common option with\\n[test.use(options)](https://playwright.dev/docs/api/class-test#test-use).\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(() => {\\n  test.use({ colorScheme: \'dark\' });\\n\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Tags**\\n\\nYou can tag all tests in a group by providing additional details. Note that each tag must start with "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two tagged tests\', {\\n  tag: \'@smoke\',\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [tagging](https://playwright.dev/docs/test-annotations#tag-tests).\\n\\n**Annotations**\\n\\nYou can annotate all tests in a group by providing additional details.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two annotated tests\', {\\n  annotation: {\\n    type: \'issue\',\\n    description: \'https://github.com/microsoft/playwright/issues/23180\',\\n  },\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [test annotations](https://playwright.dev/docs/test-annotations)."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":23397,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23398,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23399,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23400,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23401,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23402,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23403,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23404,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23405,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23406,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23407,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23408,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23409,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23410,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23411,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23412,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23413,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23414,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23415,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23416,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23417,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23418,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23419,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23420,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23421,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23422,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23423,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23424,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23425,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23426,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23427,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23428,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23429,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23430,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23431,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23432,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23433,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23434,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23435,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23436,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23437,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23438,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23439,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23440,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23441,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23442,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23443,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":23444,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23445,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23446,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":23447,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23448,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23449,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23450,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23451,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23452,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23453,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23454,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23455,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23456,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23457,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23458,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23459,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23460,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23461,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23462,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23463,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[23448]}],"sources":[],"signatures":[{"id":23464,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23465,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23466,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23467,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23468,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23469,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23470,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23471,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23472,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23473,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23474,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23475,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23476,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23477,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23478,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":23479,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel)\\nallows them to run in parallel.\\n- "},{"kind":"code","text":"`test.describe.parallel(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks.\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":23480,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23481,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23482,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23483,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23484,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23485,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23486,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23487,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23488,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23489,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23490,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23491,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23492,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23493,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23494,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23495,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23496,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[23481]}],"sources":[],"signatures":[{"id":23497,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23498,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23499,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23500,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23501,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23502,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23503,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23504,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23505,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23506,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23507,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23508,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23509,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23510,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23511,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":23512,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":23513,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23514,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23515,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23516,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23517,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":23518,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":23519,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[23517,23518,23519]}],"sources":[]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[23446,23479,23512]},{"title":"Methods","children":[23398,23414,23430]}],"sources":[],"signatures":[{"id":23520,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23521,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23522,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23523,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23524,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23525,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23526,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23527,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23528,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23529,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23530,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23531,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Additional details for all tests in the group."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23532,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":23533,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23534,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":23535,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23536,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23537,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23538,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23539,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23540,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23541,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23542,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23543,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":23544,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23545,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":23546,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23547,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23548,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"ConditionBody","package":"playwright"}},{"id":23549,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23550,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23551,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23552,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23553,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23554,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23555,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23556,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23557,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23558,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":23559,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23560,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":23561,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23562,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23563,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"ConditionBody","package":"playwright"}},{"id":23564,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23565,"name":"fail","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":23566,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23567,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23568,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can use "},{"kind":"code","text":"`test.fail.only`"},{"kind":"text","text":" to focus on a specific test that is expected to fail. This is particularly useful when\\ndebugging a failing test or working on a specific issue.\\n\\nTo declare a focused \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a focused failing test, so that Playwright runs only this test and ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail.only(\'focused failing test\', async ({ page }) => {\\n  // This test is expected to fail\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}]},"sources":[],"parameters":[{"id":23569,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23570,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23571,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can use "},{"kind":"code","text":"`test.fail.only`"},{"kind":"text","text":" to focus on a specific test that is expected to fail. This is particularly useful when\\ndebugging a failing test or working on a specific issue.\\n\\nTo declare a focused \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a focused failing test, so that Playwright runs only this test and ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail.only(\'focused failing test\', async ({ page }) => {\\n  // This test is expected to fail\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}]},"sources":[],"parameters":[{"id":23572,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23573,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for test\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23574,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[23567]}],"sources":[],"signatures":[{"id":23575,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23576,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23577,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23578,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23579,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23580,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23581,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23582,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23583,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":23584,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23585,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23586,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"ConditionBody","package":"playwright"}},{"id":23587,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23588,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":23589,"name":"slow","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23590,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":23591,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23592,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"slow\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":23593,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23594,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23595,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"slow\\", based on test fixtures. Test or tests are marked as \\"slow\\" when\\nthe return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"ConditionBody","package":"playwright"}},{"id":23596,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23597,"name":"setTimeout","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23598,"name":"setTimeout","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the timeout for the test. Zero means no timeout. Learn more about [various timeouts](https://playwright.dev/docs/test-timeouts).\\n\\nTimeout for the currently running test is available through\\n[testInfo.timeout](https://playwright.dev/docs/api/class-testinfo#test-info-timeout).\\n\\n**Usage**\\n- Changing test timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test(\'very slow test\', async ({ page }) => {\\n    test.setTimeout(120000);\\n    // ...\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout from a slow "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook. Note that this affects the test timeout that is shared with\\n  "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeEach(async ({ page }, testInfo) => {\\n    // Extend timeout for all tests running this hook by 30 seconds.\\n    test.setTimeout(testInfo.timeout + 30000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Note this affects the hook\'s timeout, not the test\\n  timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeAll(async () => {\\n    // Set timeout for this hook.\\n    test.setTimeout(60000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for all tests in a\\n  [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe(\'group\', () => {\\n    // Applies to all tests in this group.\\n    test.describe.configure({ timeout: 60000 });\\n\\n    test(\'test one\', async () => { /* ... */ });\\n    test(\'test two\', async () => { /* ... */ });\\n    test(\'test three\', async () => { /* ... */ });\\n  });\\n  ```"}]},"sources":[],"parameters":[{"id":23599,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Timeout in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23600,"name":"beforeEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23601,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":23602,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23603,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23604,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23605,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23606,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23607,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":23608,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23609,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23610,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23611,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23612,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23613,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23614,"name":"afterEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23615,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":23616,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23617,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23618,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23619,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23620,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23621,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":23622,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23623,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23624,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23625,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23626,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23627,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23628,"name":"beforeAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23629,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":23630,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23631,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23632,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23633,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23634,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23635,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":23636,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23637,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23638,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23639,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23640,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23641,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23642,"name":"afterAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23643,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23644,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23645,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23646,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23647,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23648,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23649,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23650,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23651,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23652,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23653,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23654,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23655,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23656,"name":"use","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23657,"name":"use","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Specifies options or fixtures to use in a single test file or a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group. Most\\nuseful to set an option, for example set "},{"kind":"code","text":"`locale`"},{"kind":"text","text":" to configure "},{"kind":"code","text":"`context`"},{"kind":"text","text":" fixture.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({ locale: \'en-US\' });\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\n"},{"kind":"code","text":"`test.use`"},{"kind":"text","text":" can be called either in the global scope or inside "},{"kind":"code","text":"`test.describe`"},{"kind":"text","text":". It is an error to call it within\\n"},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n\\nIt is also possible to override a fixture by providing a function.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({\\n  locale: async ({}, use) => {\\n    // Read locale from some configuration file.\\n    const locale = await fs.promises.readFile(\'test-locale\', \'utf-8\');\\n    await use(locale);\\n  },\\n});\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"}]},"sources":[],"parameters":[{"id":23658,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reflection","declaration":{"id":23659,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":23660,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23661,"name":"step","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23662,"name":"step","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test step that is shown in the report.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  await test.step(\'Log in\', async () => {\\n    // ...\\n  });\\n\\n  await test.step(\'Outer step\', async () => {\\n    // ...\\n    // You can nest steps inside each other.\\n    await test.step(\'Inner step\', async () => {\\n      // ...\\n    });\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\nThe method returns the value returned by the step callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  const user = await test.step(\'Log in\', async () => {\\n    // ...\\n    return \'john\';\\n  });\\n  expect(user).toBe(\'john\');\\n});\\n```"},{"kind":"text","text":"\\n\\n**Decorator**\\n\\nYou can use TypeScript method decorators to turn a method into a step. Each call to the decorated method will show\\nup as a step in the report.\\n\\n"},{"kind":"code","text":"```js\\nfunction step(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    });\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @step\\n  async login() {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await this.page.getByLabel(\'Username or email address\').fill(account.username);\\n    await this.page.getByLabel(\'Password\').fill(account.password);\\n    await this.page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(this.page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();\\n});\\n```"},{"kind":"text","text":"\\n\\n**Boxing**\\n\\nWhen something inside a step fails, you would usually see the error pointing to the exact action that failed. For\\nexample, consider the following login step:\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await page.getByLabel(\'Username or email address\').fill(account.username);\\n    await page.getByLabel(\'Password\').fill(account.password);\\n    await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  });\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  await page.goto(\'https://github.com/login\');\\n  await login(page);\\n});\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n   8 |     await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n>  9 |     await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n     |                                                                               ^\\n  10 |   });\\n```"},{"kind":"text","text":"\\n\\nAs we see above, the test may fail with an error pointing inside the step. If you would like the error to highlight\\nthe \\"login\\" step instead of its internals, use the "},{"kind":"code","text":"`box`"},{"kind":"text","text":" option. An error inside a boxed step points to the step\\ncall site.\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    // ...\\n  }, { box: true });  // Note the \\"box\\" option here.\\n}\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n  14 |   await page.goto(\'https://github.com/login\');\\n> 15 |   await login(page);\\n     |         ^\\n  16 | });\\n```"},{"kind":"text","text":"\\n\\nYou can also create a TypeScript decorator for a boxed step, similar to a regular step decorator above:\\n\\n"},{"kind":"code","text":"```js\\nfunction boxedStep(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    }, { box: true });  // Note the \\"box\\" option here.\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @boxedStep\\n  async login() {\\n    // ....\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();  // <-- Error will be reported on this line.\\n});\\n```"}]},"sources":[],"typeParameter":[{"id":23663,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":23664,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step name."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23665,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step body."}]},"type":{"type":"reflection","declaration":{"id":23666,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23667,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":23361,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":23361,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":23668,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":23669,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23670,"name":"box","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":23671,"name":"location","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Location"},"name":"Location","package":"playwright"}}],"groups":[{"title":"Properties","children":[23670,23671]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":23361,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":23672,"name":"expect","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect`"},{"kind":"text","text":" function can be used to create test assertions. Read more about [test assertions](https://playwright.dev/docs/test-assertions).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example\', async ({ page }) => {\\n  await test.expect(page).toHaveTitle(\'Title\');\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":23673,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}},{"id":23674,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23675,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Extends the "},{"kind":"code","text":"`test`"},{"kind":"text","text":" object by defining fixtures and/or options that can be used in the tests.\\n\\n**Usage**\\n\\nFirst define a fixture and/or an option.\\n\\n"},{"kind":"code","text":"```js\\nimport { test as base } from \'@playwright/test\';\\nimport { TodoPage } from \'./todo-page\';\\n\\nexport type Options = { defaultItem: string };\\n\\n// Extend basic test by providing a \\"defaultItem\\" option and a \\"todoPage\\" fixture.\\nexport const test = base.extend<Options & { todoPage: TodoPage }>({\\n  // Define an option and provide a default value.\\n  // We can later override it in the config.\\n  defaultItem: [\'Do stuff\', { option: true }],\\n\\n  // Define a fixture. Note that it can use built-in fixture \\"page\\"\\n  // and a new option \\"defaultItem\\".\\n  todoPage: async ({ page, defaultItem }, use) => {\\n    const todoPage = new TodoPage(page);\\n    await todoPage.goto();\\n    await todoPage.addToDo(defaultItem);\\n    await use(todoPage);\\n    await todoPage.removeAll();\\n  },\\n});\\n```"},{"kind":"text","text":"\\n\\nThen use the fixture in the test.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test } from \'./my-test\';\\n\\ntest(\'test 1\', async ({ todoPage }) => {\\n  await todoPage.addToDo(\'my todo\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nConfigure the option in config file.\\n\\n"},{"kind":"code","text":"```js\\n// playwright.config.ts\\nimport { defineConfig } from \'@playwright/test\';\\nimport type { Options } from \'./my-test\';\\n\\nexport default defineConfig<Options>({\\n  projects: [\\n    {\\n      name: \'shopping\',\\n      use: { defaultItem: \'Buy milk\' },\\n    },\\n    {\\n      name: \'wellbeing\',\\n      use: { defaultItem: \'Exercise!\' },\\n    },\\n  ]\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [fixtures](https://playwright.dev/docs/test-fixtures) and [parametrizing tests](https://playwright.dev/docs/test-parameterize)."}]},"sources":[],"typeParameter":[{"id":23676,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"}},{"id":23677,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"},"default":{"type":"reflection","declaration":{"id":23678,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}}],"parameters":[{"id":23679,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An object containing fixtures and/or options. Learn more about [fixtures format](https://playwright.dev/docs/test-fixtures)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":23374,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":23375,"name":"W","package":"playwright","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":23374,"name":"T","package":"playwright","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"},{"type":"reference","target":23375,"name":"W","package":"playwright","refersToTypeParameter":true}]}],"name":"TestType","package":"playwright"}}]},{"id":23680,"name":"info","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23681,"name":"info","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns information about the currently running test. This method can only be called during the test execution,\\notherwise it throws.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example test\', async ({ page }) => {\\n  // ...\\n  await test.info().attach(\'screenshot\', {\\n    body: await page.screenshot(),\\n    contentType: \'image/png\',\\n  });\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}]}],"groups":[{"title":"Properties","children":[23396,23565,23672]},{"title":"Methods","children":[23388,23535,23550,23589,23597,23600,23614,23628,23642,23656,23661,23674,23680]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":281,"character":13}],"signatures":[{"id":23381,"name":"test","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario. Alias for ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/it/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":281,"character":13}],"parameters":[{"id":23382,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":23383,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":23384,"name":"test","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario. Alias for ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/it/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":281,"character":13}],"parameters":[{"id":23385,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":23386,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23387,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/test","categories":[],"previousId":23078,"nextId":23682},{"id":23682,"name":"describe","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":23698,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-only). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":28,"character":4}],"type":{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":23699,"name":"skip","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in the skipped\\ngroup are never run.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-skip). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":49,"character":4}],"type":{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":23700,"name":"fixme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in this group\\nare marked as \\"fixme\\" and will not be executed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-fixme). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":70,"character":4}],"type":{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":23701,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":23702,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23703,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":123,"character":8}],"type":{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[23703]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":28}]}}]}},{"id":23704,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel) allows\\nthem to run in parallel.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks."}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel). Any\\ntests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":23705,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23706,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel), but\\nfocuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":173,"character":8}],"type":{"type":"reference","target":23043,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[23706]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":30}]}}]}},{"id":23707,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":4}],"type":{"type":"reflection","declaration":{"id":23708,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":15}],"signatures":[{"id":23709,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":15}],"parameters":[{"id":23710,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23711,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23712,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":27}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":23713,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":69}],"type":{"type":"intrinsic","name":"number"}},{"id":23714,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":87}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[23712,23713,23714]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":25}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[23698,23699,23700,23701,23704,23707]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"signatures":[{"id":23683,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"parameters":[{"id":23684,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":23685,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23686,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"signatures":[{"id":23687,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23688,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"parameters":[{"id":23689,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23690,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"signatures":[{"id":23691,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23692,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"parameters":[{"id":23693,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":23694,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23695,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23696,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"signatures":[{"id":23697,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/describe","categories":[],"previousId":23380,"nextId":23715},{"id":23715,"name":"beforeAll","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":333,"character":13}],"signatures":[{"id":23716,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":333,"character":13}],"parameters":[{"id":23717,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23718,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23719,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23720,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23721,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23722,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":333,"character":13}],"parameters":[{"id":23723,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23724,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23725,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23726,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23727,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23728,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/beforeAll","categories":[],"previousId":23682,"nextId":23729},{"id":23729,"name":"beforeEach","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":335,"character":13}],"signatures":[{"id":23730,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":335,"character":13}],"parameters":[{"id":23731,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23732,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23733,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23734,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23735,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23736,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":335,"character":13}],"parameters":[{"id":23737,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23738,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23739,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23740,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23741,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23742,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/beforeEach","categories":[],"previousId":23715,"nextId":23743},{"id":23743,"name":"afterEach","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":337,"character":13}],"signatures":[{"id":23744,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":337,"character":13}],"parameters":[{"id":23745,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23746,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23747,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23748,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23749,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23750,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":337,"character":13}],"parameters":[{"id":23751,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23752,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23753,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23754,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23755,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23756,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/afterEach","categories":[],"previousId":23729,"nextId":23757},{"id":23757,"name":"afterAll","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":339,"character":13}],"signatures":[{"id":23758,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":339,"character":13}],"parameters":[{"id":23759,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23760,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23761,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23762,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23763,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23764,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":339,"character":13}],"parameters":[{"id":23765,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23766,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23767,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23768,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23769,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23770,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/afterAll","categories":[],"previousId":23743,"nextId":23771},{"id":23771,"name":"expect","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":23823,"name":"any","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23824,"name":"any","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.any()`"},{"kind":"text","text":" matches any object instance created from the\\n["},{"kind":"code","text":"`constructor`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-any-option-constructor)\\nor a corresponding primitive type. Use it inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// Match instance of a class.\\nclass Example {}\\nexpect(new Example()).toEqual(expect.any(Example));\\n\\n// Match any number.\\nexpect({ prop: 1 }).toEqual({ prop: expect.any(Number) });\\n\\n// Match any string.\\nexpect(\'abc\').toEqual(expect.any(String));\\n```"}]},"sources":[],"parameters":[{"id":23825,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23826,"name":"anything","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23827,"name":"anything","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.anything()`"},{"kind":"text","text":" matches everything except "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":". Use it inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nconst value = { prop: 1 };\\nexpect(value).toEqual({ prop: expect.anything() });\\nexpect(value).not.toEqual({ otherProp: expect.anything() });\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23828,"name":"arrayContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23829,"name":"arrayContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.arrayContaining()`"},{"kind":"text","text":" matches an array that contains all of the elements in the expected array, in any order.\\nNote that received array may be a superset of the expected array and contain some extra elements.\\n\\nUse this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect([1, 2, 3]).toEqual(expect.arrayContaining([3, 1]));\\nexpect([1, 2, 3]).not.toEqual(expect.arrayContaining([1, 4]));\\n```"}]},"sources":[],"parameters":[{"id":23830,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23831,"name":"closeTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23832,"name":"closeTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Compares floating point numbers for approximate equality. Use this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching. When just comparing two numbers, prefer\\n[expect(value).toBeCloseTo(expected[, numDigits])](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-be-close-to).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect({ prop: 0.1 + 0.2 }).not.toEqual({ prop: 0.3 });\\nexpect({ prop: 0.1 + 0.2 }).toEqual({ prop: expect.closeTo(0.3, 5) });\\n```"}]},"sources":[],"parameters":[{"id":23833,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":23834,"name":"precision","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23835,"name":"objectContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23836,"name":"objectContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.objectContaining()`"},{"kind":"text","text":" matches an object that contains and matches all of the properties in the expected\\nobject. Note that received object may be a superset of the expected object and contain some extra properties.\\n\\nUse this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching. Object properties can be matchers to further relax the expectation. See examples.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// Assert some of the properties.\\nexpect({ foo: 1, bar: 2 }).toEqual(expect.objectContaining({ foo: 1 }));\\n\\n// Matchers can be used on the properties as well.\\nexpect({ foo: 1, bar: 2 }).toEqual(expect.objectContaining({ bar: expect.any(Number) }));\\n\\n// Complex matching of sub-properties.\\nexpect({\\n  list: [1, 2, 3],\\n  obj: { prop: \'Hello world!\', another: \'some other value\' },\\n  extra: \'extra\',\\n}).toEqual(expect.objectContaining({\\n  list: expect.arrayContaining([2, 3]),\\n  obj: expect.objectContaining({ prop: expect.stringContaining(\'Hello\') }),\\n}));\\n```"}]},"sources":[],"parameters":[{"id":23837,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23838,"name":"stringContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23839,"name":"stringContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.stringContaining()`"},{"kind":"text","text":" matches a string that contains the expected substring. Use this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect(\'Hello world!\').toEqual(expect.stringContaining(\'Hello\'));\\n```"}]},"sources":[],"parameters":[{"id":23840,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23841,"name":"stringMatching","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23842,"name":"stringMatching","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.stringMatching()`"},{"kind":"text","text":" matches a received string that in turn matches the expected pattern. Use this method\\ninside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect(\'123ms\').toEqual(expect.stringMatching(/\\\\d+m?s/));\\n\\n// Inside another matcher.\\nexpect({\\n  status: \'passed\',\\n  time: \'123ms\',\\n}).toEqual({\\n  status: expect.stringMatching(/passed|failed/),\\n  time: expect.stringMatching(/\\\\d+m?s/),\\n});\\n```"}]},"sources":[],"parameters":[{"id":23843,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23779,"name":"soft","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23780,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23781,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":23782,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":23783,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":23782,"name":"T","package":"playwright","refersToTypeParameter":true}},{"id":23784,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":23785,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23786,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[23786]}],"sources":[]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MakeMatchers"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":23782,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":23787,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"MakeMatchers","package":"playwright"}}]}}},{"id":23788,"name":"poll","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23789,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23790,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":23791,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":23792,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23793,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23794,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":23791,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":23791,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":23795,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":23796,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23797,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":23798,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":23799,"name":"intervals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","children":[23797,23798,23799]}],"sources":[]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PollMatchers"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":23791,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":23800,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"PollMatchers","package":"playwright"}}]}}},{"id":23801,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23802,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":23803,"name":"MoreMatchers","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":23804,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23805,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23806,"name":"this","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ExpectMatcherState"},"name":"ExpectMatcherState","package":"playwright"}},{"id":23807,"name":"receiver","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}},{"id":23808,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MatcherReturnType"},"name":"MatcherReturnType","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MatcherReturnType"},"name":"MatcherReturnType","package":"playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":23809,"name":"matchers","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":23803,"name":"MoreMatchers","package":"playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"id":23810,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reference","target":23803,"name":"MoreMatchers","package":"playwright","refersToTypeParameter":true}]}],"name":"Expect","package":"playwright"}}]},{"id":23811,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23812,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23813,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23814,"name":"configuration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23815,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23816,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":23817,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":23818,"name":"soft","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[23816,23817,23818]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":23819,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}}]}}},{"id":23820,"name":"getState","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23821,"name":"getState","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":23822,"name":"not","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatchers"},"name":"AsymmetricMatchers","package":"playwright"},{"type":"union","types":[{"type":"literal","value":"any"},{"type":"literal","value":"anything"}]}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}}],"groups":[{"title":"Properties","children":[23779,23788,23811,23822]},{"title":"Methods","children":[23823,23826,23828,23831,23835,23838,23841,23801,23820]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":341,"character":13}],"signatures":[{"id":23772,"name":"expect","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":341,"character":13}],"typeParameter":[{"id":23773,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":23774,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":23773,"name":"T","package":"playwright","refersToTypeParameter":true}},{"id":23775,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":23776,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23777,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[23777]}],"sources":[]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MakeMatchers"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":23773,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":23778,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"MakeMatchers","package":"playwright"}}],"permalink":"/api/playwright-test/function/expect","categories":[],"previousId":23757,"nextId":23844},{"id":23844,"name":"useFixtures","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":343,"character":13}],"signatures":[{"id":23845,"name":"useFixtures","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":343,"character":13}],"typeParameter":[{"id":23846,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":23847,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":23848,"name":"customFixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":23071,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":23072,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":23065,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":23071,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"},{"type":"reference","target":23072,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]}],"name":"TestApi","package":"@serenity-js/playwright-test"}}],"permalink":"/api/playwright-test/function/useFixtures","categories":[],"previousId":23771,"nextId":23059},{"id":23059,"name":"useBase","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":483,"character":16}],"signatures":[{"id":23060,"name":"useBase","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a Serenity/JS BDD-style test API around the given Playwright [base test](https://playwright.dev/docs/test-fixtures).\\n\\n## Using default configuration\\n\\nWhen your test scenario doesn\'t require [custom test fixtures](https://playwright.dev/docs/test-fixtures),\\nand you\'re happy with the default [base test](https://playwright.dev/docs/api/class-test#test-call) offered by Playwright,\\nyou can import test API functions such as ["},{"kind":"code","text":"`describe`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) and ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) directly from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\n// override default fixtures if needed\\ntest.use({\\n  defaultActorName: \'Alice\'\\n})\\n\\ndescribe(\'Serenity/JS default test API\', () => {\\n\\n  it(\'enables easy access to actors and standard Playwright fixtures\', async ({ actor, browserName }) => {\\n    await actor.attemptsTo(\\n      Log.the(browserName),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nIn the above example, importing test API functions directly from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" is the equivalent of the following setup:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { test as playwrightBaseTest } from \'@playwright/test\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it, test, beforeEach, afterEach } = useBase(playwrightBaseTest)\\n```"},{"kind":"text","text":"\\n\\n## Using custom fixtures\\n\\nWhen your test scenario requires [custom test fixtures](https://playwright.dev/docs/test-fixtures),\\nbut you\'re still happy with the default [base test](https://playwright.dev/docs/api/class-test#test-call) offered by Playwright,\\nyou can create fixture-aware test API functions such as ["},{"kind":"code","text":"`describe`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) and ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/describe/)\\nby calling ["},{"kind":"code","text":"`useFixtures`"},{"kind":"text","text":"](/api/playwright-test/function/useFixtures/).\\n\\nFor example, you can create a test scenario using a static "},{"kind":"code","text":"`message`"},{"kind":"text","text":" fixture as follows:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: \'Hello world!\'\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nThe value of your test fixtures can be either static or dynamic and based on the value of other fixtures.\\n\\nTo create a dynamic test fixture use the [function syntax](https://playwright.dev/docs/test-fixtures):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Log } from \'@serenity-js/core\'\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: async ({ actor }, use) => {\\n    await use(`Hello, ${ actor.name }`);\\n  }\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nIn the above example, creating test API functions via "},{"kind":"code","text":"`useFixtures`"},{"kind":"text","text":" is the equivalent of the following setup:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { test as playwrightBaseTest } from \'@playwright/test\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it, test, beforeEach, afterEach } = useBase(playwrightBaseTest)\\n  .useFixtures<{ message: string }>({\\n    message: async ({ actor }, use) => {\\n      await use(`Hello, ${ actor.name }`);\\n    }\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Using custom base test\\n\\nIn cases where you need to use a non-default base test, for example when doing [UI component testing](https://playwright.dev/docs/test-components),\\nyou can create Serenity/JS test API functions around your preferred base test.\\n\\n"},{"kind":"code","text":"```tsx\\nimport { test as componentTest } from \'@playwright/experimental-ct-react\'\\nimport { Ensure, contain } from \'@serenity-js/assertions\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\nimport { Enter, PageElement, CssClasses } from \'@serenity-js/web\'\\n\\nimport EmailInput from \'./EmailInput\';\\n\\nconst { it, describe } = useBase(componentTest).useFixtures<{ emailAddress: string }>({\\n  emailAddress: ({ actor }, use) => {\\n    use(`${ actor.name }@example.org`)\\n  }\\n})\\n\\ndescribe(\'EmailInput\', () => {\\n\\n  it(\'allows valid email addresses\', async ({ actor, mount, emailAddress }) => {\\n    const nativeComponent = await mount(<EmailInput/>);\\n\\n    const component = PageElement.from(nativeComponent);\\n\\n    await actor.attemptsTo(\\n      Enter.theValue(emailAddress).into(component),\\n      Ensure.that(CssClasses.of(component), contain(\'valid\')),\\n    )\\n  })\\n})\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":483,"character":16}],"typeParameter":[{"id":23061,"name":"TestArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":23062,"name":"WorkerArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":23063,"name":"baseTest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":23061,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":23062,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}}],"type":{"type":"reference","target":23065,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":23036,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":23024,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":23061,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"reference","target":23062,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestApi","package":"@serenity-js/playwright-test"}}],"permalink":"/api/playwright-test/function/useBase","categories":[],"previousId":23844,"nextId":23024},{"id":22999,"name":"SerenityReporterForPlaywrightTestConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object accepted by "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" reporter.\\n\\nSee ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/) for usage examples."}]},"children":[{"id":23000,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/) or [stage crew members](/api/core/interface/StageCrewMember/)\\nto be instantiated in Playwright Test reporter process and notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/) that occur during the scenario execution.\\nNote that the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" can also be configured using [class descriptions](/api/core/#ClassDescription).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":58,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2241,"typeArguments":[{"type":"reference","target":2074,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":84,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":23001,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\n\\nDefaults to ["},{"kind":"code","text":"`process.stdout`"},{"kind":"text","text":"](https://nodejs.org/api/process.html#process_process_stdout).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.outputStream`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#outputStream)"}]},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":68,"character":4}],"type":{"type":"reference","target":2274,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[23000,23001]}],"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":48,"character":17}],"permalink":"/api/playwright-test/interface/SerenityReporterForPlaywrightTestConfig","categories":[],"previousId":23043,"nextId":23002},{"id":23849,"name":"default","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS reporter that receives notifications from Playwright Test and emits them as\\nSerenity/JS [Serenity/JS domain events](/api/core-events/class/DomainEvent/) which can be used by\\nSerenity/JS [stage crew members](/api/core/interface/StageCrewMember/)."}]},"children":[{"id":23850,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":89,"character":4}],"signatures":[{"id":23851,"name":"new default","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":89,"character":4}],"parameters":[{"id":23852,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22999,"name":"SerenityReporterForPlaywrightTestConfig","package":"@serenity-js/playwright-test"}},{"id":23853,"name":"serenity","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instance of ["},{"kind":"code","text":"`Serenity`"},{"kind":"text","text":"](/api/core/class/Serenity/), specific to the Node process running this Serenity reporter.\\n Note that Playwright runs test workers and reporters in separate processes."}]},"type":{"type":"reference","target":1951,"name":"Serenity","package":"@serenity-js/core"},"defaultValue":"reporterSerenityInstance"},{"id":23854,"name":"requirementsHierarchy","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Root directory of the requirements hierarchy, used to determine capabilities and themes."}]},"type":{"type":"reference","name":"RequirementsHierarchy","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":23849,"name":"SerenityReporterForPlaywrightTest","package":"@serenity-js/playwright-test"}}]},{"id":23860,"name":"onBegin","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":99,"character":4}],"signatures":[{"id":23861,"name":"onBegin","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":99,"character":4}],"parameters":[{"id":23862,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"FullConfig"},"typeArguments":[{"type":"reflection","declaration":{"id":23863,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":23864,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"FullConfig","package":"playwright"}},{"id":23865,"name":"suite","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"Suite"},"name":"Suite","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onBegin"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onBegin"}},{"id":23866,"name":"onTestBegin","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":107,"character":4}],"signatures":[{"id":23867,"name":"onTestBegin","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":107,"character":4}],"parameters":[{"id":23868,"name":"test","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestCase"},"name":"TestCase","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestBegin"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestBegin"}},{"id":23869,"name":"onTestEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":145,"character":4}],"signatures":[{"id":23870,"name":"onTestEnd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":145,"character":4}],"parameters":[{"id":23871,"name":"test","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestCase"},"name":"TestCase","package":"playwright"}},{"id":23872,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestResult"},"name":"TestResult","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestEnd"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestEnd"}},{"id":23873,"name":"onError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":186,"character":4}],"signatures":[{"id":23874,"name":"onError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":186,"character":4}],"parameters":[{"id":23875,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestError"},"name":"TestError","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onError"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onError"}},{"id":23890,"name":"onEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":256,"character":10}],"signatures":[{"id":23891,"name":"onEnd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":256,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onEnd"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onEnd"}},{"id":23901,"name":"printsToStdio","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":324,"character":4}],"signatures":[{"id":23902,"name":"printsToStdio","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":324,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.printsToStdio"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.printsToStdio"}}],"groups":[{"title":"Constructors","children":[23850]},{"title":"Methods","children":[23860,23866,23869,23873,23890,23901]}],"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":76,"character":13}],"implementedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"Reporter"},"name":"Reporter","package":"playwright"}],"permalink":"/api/playwright-test/class/default","categories":[],"nextId":23078}],"groups":[{"title":"Classes","children":[23849]},{"title":"Functions","children":[23078,23380,23682,23715,23729,23743,23757,23771,23844,23059]},{"title":"Interfaces","children":[23024,23036,23043,22999]},{"title":"Type Aliases","children":[23002,23021,23065]},{"title":"Variables","children":[23064]}],"sources":[{"fileName":"packages/playwright-test/src/index.ts","line":1,"character":0}],"permalink":"/api/playwright-test"},"urlSlug":"playwright-test"}],"packageName":"@serenity-js/playwright-test","packageVersion":"3.31.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":8,"name":"@serenity-js/protractor/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6244,"name":"Config","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor configuration object with an additional\\nsection to configure the Serenity/JS framework.\\n\\n## Learn more\\n- [Protractor config](https://github.com/angular/protractor/blob/master/lib/config.ts)\\n- ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/)\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)"}]},"children":[{"id":6245,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6246,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6247,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":33}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6247]}],"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":31}]}}]}},{"id":6248,"name":"seleniumServerJar","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The location of the standalone Selenium Server jar file, relative\\nto the location of webdriver-manager. If no other method of starting\\nSelenium Server is found, this will default to\\nnode_modules/protractor/node_modules/webdriver-manager/selenium/<jar file>"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumServerJar"}},{"id":6249,"name":"seleniumServerStartTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The timeout milliseconds waiting for a local standalone Selenium Server to start.\\n\\ndefault: 30000ms"}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumServerStartTimeout"}},{"id":6250,"name":"localSeleniumStandaloneOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can be an object which will be passed to the SeleniumServer class as args.\\nSee a full list of options at\\nhttps://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/remote/index.js\\nIf you specify "},{"kind":"code","text":"`args`"},{"kind":"text","text":" or "},{"kind":"code","text":"`port`"},{"kind":"text","text":" in this object, it will overwrite the\\nvalues set via the deprecated config values "},{"kind":"code","text":"`seleniumPort`"},{"kind":"text","text":" and\\n"},{"kind":"code","text":"`seleniumArgs`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6251,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6252,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The port to start the Selenium Server on, or null if the server should\\nfind its own unused port."}]},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":6253,"name":"args","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional command line options to pass to selenium. For example,\\nif you need to change the browser timeout, use\\nseleniumArgs: [\'-browserTimeout=60\']"}]},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":6254,"name":"jvmArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional command line jvm options to pass to selenium. For example,\\nif you need to change the browser driver, use\\njvmArgs: [\'-Dwebdriver.ie.driver=IEDriverServer_Win32_2.53.1.exe\']"}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[6252,6253,6254]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.localSeleniumStandaloneOpts"}},{"id":6255,"name":"chromeDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"ChromeDriver location is used to help find the chromedriver binary. This will be passed to the\\nSelenium jar as the system property webdriver.chrome.driver. If the value is not set when\\nlaunching locally, it will use the default values downloaded from webdriver-manager.\\n\\nexample:\\nchromeDriver: \'./node_modules/webdriver-manager/selenium/chromedriver_2.20\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.chromeDriver"}},{"id":6256,"name":"geckoDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"geckoDriver location is used to help find the gecko binary. This will be passed to the Selenium\\njar as the system property webdriver.gecko.driver. If the value is not set when launching\\nlocally, it will use the default values downloaded from webdriver-manager."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.geckoDriver"}},{"id":6257,"name":"seleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The address of a running Selenium Server. If specified, Protractor will\\nconnect to an already running instance of Selenium. This usually looks like\\nseleniumAddress: \'http://localhost:4444/wd/hub\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumAddress"}},{"id":6258,"name":"seleniumSessionId","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The selenium session id allows Protractor to attach to an existing selenium\\nbrowser session. The selenium session is maintained after the test has\\ncompleted. Ignored if seleniumAddress is null."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumSessionId"}},{"id":6259,"name":"sauceProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The address of a proxy server to use for communicating to Sauce Labs REST APIs via the\\nsaucelabs node module. For example, the Sauce Labs Proxy can be setup with: sauceProxy:\\n\'http://localhost:3128\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceProxy"}},{"id":6260,"name":"webDriverProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The proxy address that WebDriver (e.g. Selenium commands) traffic will go through\\nwhich is tied to the browser session."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.webDriverProxy"}},{"id":6261,"name":"useBlockingProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, connect to webdriver through a proxy that manages client-side\\nsynchronization. Blocking Proxy is an experimental feature and may change\\nwithout notice."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.useBlockingProxy"}},{"id":6262,"name":"blockingProxyUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, Protractor will connect to the Blocking Proxy at the given\\nurl instead of starting it\'s own."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.blockingProxyUrl"}},{"id":6263,"name":"sauceUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the sauceUser and sauceKey are specified, seleniumServerJar will be\\nignored. The tests will be run remotely using Sauce Labs."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceUser"}},{"id":6264,"name":"sauceKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the sauceUser and sauceKey are specified, seleniumServerJar will be\\nignored. The tests will be run remotely using Sauce Labs."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceKey"}},{"id":6265,"name":"sauceRegion","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you run your tests on SauceLabs you can specify the region you want to run your tests\\nin via the "},{"kind":"code","text":"`sauceRegion`"},{"kind":"text","text":" property. Available short handles for regions are:\\nus: us-west-1 (default)\\neu: eu-central-1"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceRegion"}},{"id":6266,"name":"sauceAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceAgent if you need custom HTTP agent to connect to saucelabs.com APIs.\\nThis is needed if your computer is behind a corporate proxy.\\n\\nTo match sauce agent implementation, use\\n[HttpProxyAgent](https://github.com/TooTallNate/node-http-proxy-agent)\\nto generate the agent or use sauceProxy as an alternative. If a\\nsauceProxy is provided, the sauceAgent will be overridden."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceAgent"}},{"id":6267,"name":"sauceBuild","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceBuild if you want to group test capabilites by a build ID"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceBuild"}},{"id":6268,"name":"sauceSeleniumUseHttp","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, Protractor will use http:// protocol instead of https:// to\\nconnect to Sauce Labs defined by sauceSeleniumAddress.\\n\\ndefault: false"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceSeleniumUseHttp"}},{"id":6269,"name":"sauceSeleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceSeleniumAddress if you need to customize the URL Protractor\\nuses to connect to sauce labs (for example, if you are tunneling selenium\\ntraffic through a sauce connect tunnel). Default is\\nondemand.saucelabs.com:443/wd/hub"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceSeleniumAddress"}},{"id":6270,"name":"testobjectUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If testobjectUser and testobjectKey are specified, kobitonUser, kobitonKey, browserstackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.testobjectUser"}},{"id":6271,"name":"testobjectKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If testobjectUser and testobjectKey are specified, kobitonUser, kobitonKey, browserStackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.testobjectKey"}},{"id":6272,"name":"kobitonUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If kobitonUser and kobitonKey are specified, testobjectUser, testojbectKey, browserstackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.kobitonUser"}},{"id":6273,"name":"kobitonKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If kobitonUser and kobitonKey are specified, testobjectUser, testojbectKey, browserStackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.kobitonKey"}},{"id":6274,"name":"browserstackUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If browserstackUser and browserstackKey are specified, seleniumServerJar\\nwill be ignored. The tests will be run remotely using BrowserStack."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackUser"}},{"id":6275,"name":"browserstackKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If browserstackUser and browserstackKey are specified, seleniumServerJar\\nwill be ignored. The tests will be run remotely using BrowserStack."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackKey"}},{"id":6276,"name":"browserstackProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Proxy server to be used for connecting to BrowserStack APIs\\ne.g. \\"http://proxy.example.com:1234\\".\\nThis should be used when you are behind a proxy server."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackProxy"}},{"id":6277,"name":"directConnect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, Protractor will connect directly to the browser Drivers\\nat the locations specified by chromeDriver and firefoxPath. Only Chrome\\nand Firefox are supported for direct connect.\\n\\ndefault: false"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.directConnect"}},{"id":6278,"name":"firefoxPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the firefox application binary. If null, will attempt to find\\nfirefox in the default locations."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.firefoxPath"}},{"id":6279,"name":"seleniumWebDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/selenium-webdriver/index.d.ts","qualifiedName":"WebDriver"},"name":"WebDriver","package":"@types/selenium-webdriver"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumWebDriver"}},{"id":6280,"name":"noGlobals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use default globals: \'protractor\', \'browser\', \'$\', \'$$\', \'element\', \'by\'.\\nThese also exist as properties of the protractor namespace:\\n\'protractor.browser\', \'protractor.$\', \'protractor.$$\',\\n\'protractor.element\', \'protractor.by\', and \'protractor.By\'.\\n\\nWhen no globals is set to true, the only available global variable will be\\n\'protractor\'."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.noGlobals"}},{"id":6281,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Required. Spec patterns are relative to the location of this config.\\n\\nExample:\\nspecs: [\\n  \'spec/*_spec.js\'\\n]"}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.specs"}},{"id":6282,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Patterns to exclude specs."}]},"sources":[],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.exclude"}},{"id":6283,"name":"suites","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Alternatively, suites may be used. When run without a command line\\nparameter, all suites will run. If run with --suite=smoke or\\n--suite=smoke,full only the patterns matched by the specified suites will\\nrun.\\n\\nExample:\\nsuites: {\\n  smoke: \'spec/smoketests/*.js\',\\n  full: \'spec/*.js\'\\n}"}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.suites"}},{"id":6284,"name":"suite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you would like protractor to use a specific suite by default instead of\\nall suites, you can put that in the config file as well."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.suite"}},{"id":6285,"name":"capabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor can launch your tests on one or more browsers. If you are\\ntesting on a single browser, use the capabilities option. If you are\\ntesting on multiple browsers, use the multiCapabilities array.\\n\\nFor a list of available capabilities, see\\nhttps://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities\\nIn addition, you may specify count, shardTestFiles, and maxInstances.\\n\\nExample:\\ncapabilities: {\\n  browserName: \'chrome\',\\n  name: \'Unnamed Job\',\\n  logName: \'Chrome - English\',\\n  count: 1,\\n  shardTestFiles: false,\\n  maxInstances: 1,\\n  specs: [\'spec/chromeOnlySpec.js\'],\\n  exclude: [\'spec/doNotRunInChromeSpec.js\'],\\n  seleniumAddress: \'http://localhost:4444/wd/hub\'\\n}"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6286,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6287,"name":"browserName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6288,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the process executing this capability.  Not used directly by\\nprotractor or the browser, but instead pass directly to third parties\\nlike BrowserStack and SauceLabs as the name of the job running this\\ntest"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6289,"name":"logName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"User defined name for the capability that will display in the results\\nlog. Defaults to the browser name"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6290,"name":"count","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of times to run this set of capabilities (in parallel, unless\\nlimited by maxSessions). Default is 1."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6291,"name":"shardTestFiles","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If this is set to be true, specs will be sharded by file (i.e. all\\nfiles to be run by this set of capabilities will run in parallel).\\nDefault is false."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6292,"name":"maxInstances","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of browser instances that can run in parallel for this\\nset of capabilities. This is only needed if shardTestFiles is true.\\nDefault is 1."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6293,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional spec files to be run on this capability only."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6294,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Spec files to be excluded on this capability only."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6295,"name":"seleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional: override global seleniumAddress on this capability only."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6287,6288,6289,6290,6291,6292,6293,6294,6295]}],"sources":[],"indexSignature":{"id":6296,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6297,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.capabilities"}},{"id":6298,"name":"multiCapabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you would like to run more than one instance of WebDriver on the same\\ntests, use multiCapabilities, which takes an array of capabilities.\\nIf this is specified, capabilities will be ignored."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.multiCapabilities"}},{"id":6299,"name":"getMultiCapabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you need to resolve multiCapabilities asynchronously (i.e. wait for\\nserver/proxy, set firefox profile, etc), you can specify a function here\\nwhich will return either "},{"kind":"code","text":"`multiCapabilities`"},{"kind":"text","text":" or a promise to\\n"},{"kind":"code","text":"`multiCapabilities`"},{"kind":"text","text":".\\n\\nIf this returns a promise, it is resolved immediately after\\n"},{"kind":"code","text":"`beforeLaunch`"},{"kind":"text","text":" is run, and before any driver is set up. If this is\\nspecified, both capabilities and multiCapabilities will be ignored."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.getMultiCapabilities"}},{"id":6300,"name":"maxSessions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total browser sessions to run. Tests are queued in\\nsequence if number of browser sessions is limited by this parameter.\\nUse a number less than 1 to denote unlimited. Default is unlimited."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.maxSessions"}},{"id":6301,"name":"verboseMultiSessions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not to buffer output when running tests on multiple browsers\\nin parallel. By default, when running multiple browser sessions, the\\nresults are buffered and not logged until the test run finishes. If true,\\nwhen running multiple sessions in parallel results will be logged when\\neach test finishes."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.verboseMultiSessions"}},{"id":6302,"name":"baseUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A base URL for your application under test. Calls to protractor.get()\\nwith relative paths will be resolved against this URL (via url.resolve)"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.baseUrl"}},{"id":6303,"name":"rootElement","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A CSS Selector for a DOM element within your Angular application.\\nProtractor will attempt to automatically find your application, but it is\\nnecessary to set rootElement in certain cases.\\n\\nIn Angular 1, Protractor will use the element your app bootstrapped to by\\ndefault.  If that doesn\'t work, it will then search for hooks in "},{"kind":"code","text":"`body`"},{"kind":"text","text":" or\\n"},{"kind":"code","text":"`ng-app`"},{"kind":"text","text":" elements (details here: https://git.io/v1b2r).\\n\\nIn later versions of Angular, Protractor will try to hook into all angular\\napps on the page. Use rootElement to limit the scope of which apps\\nProtractor waits for and searches within."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.rootElement"}},{"id":6304,"name":"allScriptsTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The timeout in milliseconds for each script run on the browser. This\\nshould be longer than the maximum time your application needs to\\nstabilize between tasks."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.allScriptsTimeout"}},{"id":6305,"name":"getPageTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"How long to wait for a page to load."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.getPageTimeout"}},{"id":6306,"name":"beforeLaunch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once configs are read but before any\\nenvironment setup. This will only run once, and before onPrepare.\\n\\nYou can specify a file containing code to run by setting beforeLaunch to\\nthe filename string.\\n\\nAt this point, global variable \'protractor\' object will NOT be set up,\\nand globals from the test framework will NOT be available. The main\\npurpose of this function should be to bring up test dependencies."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6307,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6308,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.beforeLaunch"}},{"id":6309,"name":"onPrepare","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once protractor is ready and available, and\\nbefore the specs are executed. If multiple capabilities are being run,\\nthis will run once per capability.\\n\\nYou can specify a file containing code to run by setting onPrepare to\\nthe filename string. onPrepare can optionally return a promise, which\\nProtractor will wait for before continuing execution. This can be used if\\nthe preparation involves any asynchronous calls, e.g. interacting with\\nthe browser. Otherwise Protractor cannot guarantee order of execution\\nand may start the tests before preparation finishes.\\n\\nAt this point, global variable \'protractor\' object will be set up, and\\nglobals from the test framework will be available. For example, if you\\nare using Jasmine, you can add a reporter with:\\n\\n   jasmine.getEnv().addReporter(new jasmine.JUnitXmlReporter(\\n     \'outputdir/\', true, true));\\n\\nIf you need access back to the current configuration object,\\nuse a pattern like the following:\\n\\n   return browser.getProcessedConfig().then(function(config) {\\n     // config.capabilities is the CURRENT capability being run, if\\n     // you are using multiCapabilities.\\n     console.log(\'Executing capability\', config.capabilities);\\n   });"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6310,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6311,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onPrepare"}},{"id":6312,"name":"onComplete","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once tests are finished. onComplete can\\noptionally return a promise, which Protractor will wait for before\\nshutting down webdriver.\\n\\nAt this point, tests will be done but global objects will still be\\navailable."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6313,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6314,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onComplete"}},{"id":6315,"name":"onCleanUp","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once the tests have finished running and\\nthe WebDriver instance has been shut down. It is passed the exit code\\n(0 if the tests passed). This is called once per capability."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6316,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6317,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6318,"name":"exitCode","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onCleanUp"}},{"id":6319,"name":"afterLaunch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once all tests have finished running and\\nthe WebDriver instance has been shut down. It is passed the exit code\\n(0 if the tests passed). afterLaunch must return a promise if you want\\nasynchronous code to be executed before the program exits.\\nThis is called only once before the program exits (after onCleanUp)."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6320,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6321,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6322,"name":"exitCode","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.afterLaunch"}},{"id":6323,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The params object will be passed directly to the Protractor instance,\\nand can be accessed from your test as browser.params. It is an arbitrary\\nobject and can contain anything you may need in your test.\\nThis can be changed via the command line as:\\n  --params.login.user \\"Joe\\"\\n\\nExample:\\nparams: {\\n  login: {\\n    user: \'Jane\',\\n    password: \'1234\'\\n  }\\n}"}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.params"}},{"id":6324,"name":"resultJsonOutputFile","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, protractor will save the test output in json format at this path.\\nThe path is relative to the location of this config."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.resultJsonOutputFile"}},{"id":6325,"name":"restartBrowserBetweenTests","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, protractor will restart the browser between each test. Default\\nvalue is false.\\n\\nCAUTION: This will cause your tests to slow down drastically."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.restartBrowserBetweenTests"}},{"id":6326,"name":"untrackOutstandingTimeouts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor will track outstanding $timeouts by default, and report them\\nin the error message if Protractor fails to synchronize with Angular in\\ntime. In order to do this Protractor needs to decorate $timeout.\\n\\nCAUTION: If your app decorates $timeout, you must turn on this flag. This\\nis false by default."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.untrackOutstandingTimeouts"}},{"id":6327,"name":"ignoreUncaughtExceptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, Protractor will ignore uncaught exceptions instead of exiting\\nwithout an error code. The exceptions will still be logged as warnings."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.ignoreUncaughtExceptions"}},{"id":6328,"name":"webDriverLogDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, will create a log file in the given directory with a readable log of\\nthe webdriver commands it executes.\\n\\nThis is an experimental feature. Enabling this will also turn on Blocking Proxy\\nsynchronization, which is also experimental."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.webDriverLogDir"}},{"id":6329,"name":"highlightDelay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, Protractor will pause the specified amount of time (in milliseconds)\\nbefore interactions with browser elements (ie, sending keys, clicking). It will\\nalso highlight the element it\'s about to interact with.\\n\\nThis is an experimental feature. Enabling this will also turn on Blocking Proxy\\nsynchronization, which is also experimental."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.highlightDelay"}},{"id":6330,"name":"logLevel","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor log level\\n\\ndefault: INFO"}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"ERROR"},{"type":"literal","value":"WARN"},{"type":"literal","value":"INFO"},{"type":"literal","value":"DEBUG"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.logLevel"}},{"id":6331,"name":"framework","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Test framework to use. This may be one of: jasmine, mocha or custom.\\nDefault value is \'jasmine\'\\n\\nWhen the framework is set to \\"custom\\" you\'ll need to additionally\\nset frameworkPath with the path relative to the config file or absolute:\\n\\n  framework: \'custom\',\\n  frameworkPath: \'./frameworks/my_custom_jasmine.js\',\\n\\nSee github.com/angular/protractor/blob/master/lib/frameworks/README.md\\nto comply with the interface details of your custom implementation.\\n\\nJasmine is fully supported as test and assertion frameworks.\\nMocha has limited support. You will need to include your\\nown assertion framework (such as Chai) if working with Mocha."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.framework"}},{"id":6332,"name":"jasmineNodeOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options to be passed to jasmine.\\n\\nSee https://github.com/jasmine/jasmine-npm/blob/master/lib/jasmine.js\\nfor the exact options available."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6333,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6334,"name":"showColors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, print colors to the terminal."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6335,"name":"defaultTimeoutInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default time to wait in ms before a test fails."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6336,"name":"print","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function called to print jasmine results."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6337,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6338,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":6339,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, only execute specs whose names match the pattern, which is\\ninternally compiled to a RegExp."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6340,"name":"invertGrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts \'grep\' matches"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6341,"name":"random","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, run specs in semi-random order"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6342,"name":"seed","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set the randomization seed if randomization is turned on"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6334,6335,6336,6339,6340,6341,6342]}],"sources":[],"indexSignature":{"id":6343,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6344,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.jasmineNodeOpts"}},{"id":6345,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options to be passed to Mocha.\\n\\nSee the full list at http://mochajs.org/"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6346,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6347,"name":"ui","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6348,"name":"reporter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6347,6348]}],"sources":[],"indexSignature":{"id":6349,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6350,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.mochaOpts"}},{"id":6351,"name":"plugins","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"See docs/plugins.md"}]},"sources":[],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/plugins.d.ts","qualifiedName":"PluginConfig"},"name":"PluginConfig","package":"protractor"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.plugins"}},{"id":6352,"name":"skipSourceMapSupport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Turns off source map support.  Stops protractor from registering global\\nvariable "},{"kind":"code","text":"`source-map-support`"},{"kind":"text","text":".  Defaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.skipSourceMapSupport"}},{"id":6353,"name":"disableEnvironmentOverrides","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Turns off WebDriver\'s environment variables overrides to ignore any\\nenvironment variable and to only use the configuration in this file.\\nDefaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.disableEnvironmentOverrides"}},{"id":6354,"name":"ng12Hybrid","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Tells Protractor to interpret any angular apps it comes across as hybrid\\nangular1/angular2 apps (i.e. apps using ngUpgrade)\\nDefaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.ng12Hybrid"}},{"id":6355,"name":"disableChecks","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor will exit with an error if it sees any command line flags it doesn\'t\\nrecognize. Set disableChecks true to disable this check."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.disableChecks"}},{"id":6356,"name":"SELENIUM_PROMISE_MANAGER","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable/disable the WebDriver Control Flow.\\n\\nWebDriverJS (and by extention, Protractor) uses a Control Flow to manage the order in which\\ncommands are executed and promises are resolved (see docs/control-flow.md for details).\\nHowever, as syntax like "},{"kind":"code","text":"`async`"},{"kind":"text","text":"/"},{"kind":"code","text":"`await`"},{"kind":"text","text":" are being introduced, WebDriverJS has decided to\\ndeprecate the control flow, and have users manage the asynchronous activity themselves\\n(details here: https://github.com/SeleniumHQ/selenium/issues/2969).\\n\\nAt the moment, the WebDriver Control Flow is still enabled by default. You can disable it by\\nsetting the environment variable "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" to "},{"kind":"code","text":"`0`"},{"kind":"text","text":".  In a webdriver release in\\nQ4 2017, the Control Flow will be disabled by default, but you will be able to re-enable it by\\nsetting "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" to "},{"kind":"code","text":"`1`"},{"kind":"text","text":".  At a later point, the control flow will be removed\\nfor good.\\n\\nIf you don\'t like managing environment variables, you can set this option in your config file,\\nand Protractor will handle enabling/disabling the control flow for you.  Setting this option\\nis higher priority than the "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" environment variable."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.SELENIUM_PROMISE_MANAGER"}},{"id":6357,"name":"seleniumArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumArgs"}},{"id":6358,"name":"jvmArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.jvmArgs"}},{"id":6359,"name":"configDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.configDir"}},{"id":6360,"name":"troubleshoot","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.troubleshoot"}},{"id":6361,"name":"seleniumPort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumPort"}},{"id":6362,"name":"mockSelenium","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.mockSelenium"}},{"id":6363,"name":"v8Debug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.v8Debug"}},{"id":6364,"name":"nodeDebug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.nodeDebug"}},{"id":6365,"name":"debuggerServerPort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.debuggerServerPort"}},{"id":6366,"name":"frameworkPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.frameworkPath"}},{"id":6367,"name":"elementExplorer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.elementExplorer"}},{"id":6368,"name":"debug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.debug"}},{"id":6369,"name":"unknownFlags_","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.unknownFlags_"}}],"groups":[{"title":"Properties","children":[6245,6248,6249,6250,6255,6256,6257,6258,6259,6260,6261,6262,6263,6264,6265,6266,6267,6268,6269,6270,6271,6272,6273,6274,6275,6276,6277,6278,6279,6280,6281,6282,6283,6284,6285,6298,6299,6300,6301,6302,6303,6304,6305,6306,6309,6312,6315,6319,6323,6324,6325,6326,6327,6328,6329,6330,6331,6332,6345,6351,6352,6353,6354,6355,6356,6357,6358,6359,6360,6361,6362,6363,6364,6365,6366,6367,6368,6369]}],"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":15,"character":17}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/config.d.ts","qualifiedName":"Config"},"name":"Config","package":"protractor"}],"permalink":"/api/protractor-adapter/interface/Config","categories":[],"nextId":6384},{"id":6384,"name":"run","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/run.ts","line":18,"character":16}],"signatures":[{"id":6385,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"## Learn more\\n- [Protractor framework adapters](https://github.com/angular/protractor/blob/master/lib/frameworks/README.md#framework-adapters-for-protractor)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/run.ts","line":18,"character":16}],"parameters":[{"id":6386,"name":"runner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/runner.d.ts","qualifiedName":"Runner"},"name":"Runner","package":"protractor"}},{"id":6387,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"ProtractorReport","package":"@serenity-js/protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}],"permalink":"/api/protractor-adapter/function/run","categories":[],"previousId":6244,"nextId":6388},{"id":6388,"name":"CucumberAdapterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":6389,"name":"useStandardOutput","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instruct Serenity/JS Cucumber Adapter to take over the "},{"kind":"code","text":"`stdout`"},{"kind":"text","text":" output\\nof native Cucumber reporters to prevent them from clobbering the log."}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":6390,"name":"uniqueFormatterOutputs","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`runnerId`"},{"kind":"text","text":" to names of output files produced by native Cucumber.js formatters"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[6389,6390]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":4,"character":17}],"permalink":"/api/protractor-adapter/interface/CucumberAdapterConfig","categories":[],"previousId":6384,"nextId":6391},{"id":6391,"name":"TestRunnerDetector","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Detects the ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/) to use,\\nbased on Protractor configuration."}]},"children":[{"id":6392,"name":"cucumberOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":14,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'cucumberOpts\'"},{"id":6393,"name":"jasmineNodeOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":15,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'jasmineNodeOpts\'"},{"id":6394,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":16,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'mochaOpts\'"},{"id":6395,"name":"protractorCliOptions","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":18,"character":11}],"signatures":[{"id":6396,"name":"protractorCliOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":18,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"id":6397,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":26,"character":4}],"signatures":[{"id":6398,"name":"new TestRunnerDetector","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":26,"character":4}],"parameters":[{"id":6399,"name":"testRunnerLoader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6421,"name":"TestRunnerLoader","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":6391,"name":"TestRunnerDetector","package":"@serenity-js/protractor"}}]},{"id":6401,"name":"runnerFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":29,"character":4}],"signatures":[{"id":6402,"name":"runnerFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":29,"character":4}],"parameters":[{"id":6403,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/config.d.ts","qualifiedName":"Config"},"name":"Config","package":"protractor"}}],"type":{"type":"reference","target":2278,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[6397]},{"title":"Properties","children":[6392,6393,6394]},{"title":"Methods","children":[6395,6401]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":12,"character":13}],"permalink":"/api/protractor-adapter/class/TestRunnerDetector","categories":[],"previousId":6388,"nextId":6421},{"id":6421,"name":"TestRunnerLoader","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads a ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/) needed to invoke\\nthe chosen test runner programmatically."}]},"children":[{"id":6422,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":32,"character":4}],"signatures":[{"id":6423,"name":"new TestRunnerLoader","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":32,"character":4}],"parameters":[{"id":6424,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Current working directory; used to resolve glob paths to files for Cucumber.js to "},{"kind":"code","text":"`require`"},{"kind":"text","text":",\\n and instructing Serenity/JS where to look for this module\'s optional\\n dependencies, like ["},{"kind":"code","text":"`@serenity-js/cucumber`"},{"kind":"text","text":"](/api/cucumber),\\n ["},{"kind":"code","text":"`@serenity-js/mocha`"},{"kind":"text","text":"](/api/mocha),\\n ["},{"kind":"code","text":"`@serenity-js/jasmine`"},{"kind":"text","text":"](/api/jasmine), etc."}]},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":6425,"name":"runnerId","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Unique identifier used to differentiate output files produced by native Cucumber.js formatters.\\n For example, "},{"kind":"code","text":"`process.pid`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","target":6421,"name":"TestRunnerLoader","package":"@serenity-js/protractor"}}]},{"id":6430,"name":"forJasmine","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":43,"character":4}],"signatures":[{"id":6431,"name":"forJasmine","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":43,"character":4}],"parameters":[{"id":6432,"name":"jasmineNodeOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":2278,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]},{"id":6433,"name":"forMocha","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":53,"character":4}],"signatures":[{"id":6434,"name":"forMocha","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":53,"character":4}],"parameters":[{"id":6435,"name":"mochaOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":2278,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]},{"id":6436,"name":"forCucumber","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":64,"character":4}],"signatures":[{"id":6437,"name":"forCucumber","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":64,"character":4}],"parameters":[{"id":6438,"name":"cucumberOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"id":6439,"name":"adapterConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6388,"name":"CucumberAdapterConfig","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":2278,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[6422]},{"title":"Methods","children":[6430,6433,6436]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":14,"character":13}],"permalink":"/api/protractor-adapter/class/TestRunnerLoader","categories":[],"previousId":6391}],"groups":[{"title":"Configuration","children":[6244]},{"title":"Integration","children":[6384,6388,6391,6421]}],"sources":[{"fileName":"packages/protractor/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/protractor-adapter"},"urlSlug":"protractor-adapter"},{"index":true,"label":"index","reflection":{"id":7,"name":"@serenity-js/protractor","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":5869,"name":"BrowseTheWebWithProtractor","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [Protractor](http://www.protractortest.org/#/).\\n\\n## Using Protractor to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor } from \'@serenity-js/protractor\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { protractor } from \'protractor\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\n await actorCalled(\'Wendy\')\\n   .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))\\n   .attemptsTo(\\n     Navigate.to(`https://serenity-js.org`),\\n     Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Protractor website](https://www.protractortest.org/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":5870,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":52,"character":11}],"signatures":[{"id":5871,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Ability to interact with web front-ends using\\nprovided protractor browser instance."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":52,"character":11}],"parameters":[{"id":5872,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- [Protractor Browser API docs](http://www.protractortest.org/#/api?view=ProtractorBrowser)"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5869,"name":"BrowseTheWebWithProtractor","package":"@serenity-js/protractor"}}]},{"id":5895,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":5896,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}},{"id":5897,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":5898,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}},{"id":5880,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":60,"character":4}],"signatures":[{"id":5881,"name":"new BrowseTheWebWithProtractor","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":60,"character":4}],"parameters":[{"id":5882,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a protractor browser"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5869,"name":"BrowseTheWebWithProtractor","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"BrowseTheWeb<protractor.ElementFinder>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowseTheWeb<protractor.ElementFinder>.constructor"}},{"id":5884,"name":"param","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":99,"character":4}],"signatures":[{"id":5885,"name":"param","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns Protractor configuration parameter at "},{"kind":"code","text":"`path`"},{"kind":"text","text":".\\n\\n#### Configuring a custom parameter\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  params: {\\n    login: {\\n      username: \'jane@example.org\'\\n      password: process.env.PASSWORD\\n    }\\n  }\\n  // ...\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving config param by name\\n"},{"kind":"code","text":"```js\\nBrowseTheWebWithProtractor.as(actor).param(\'login\')\\n // returns object with username and password\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving config param by path\\n"},{"kind":"code","text":"```js\\nBrowseTheWeb.as(actor).param(\'login.username\')\\n // returns string \'jane@example.org\'\\n\\n@param path\\n Either a name or a dot-delimited path to the param.\\n\\n@throws [`ConfigurationError`](/api/core/class/ConfigurationError/)\\n Throws a `ConfigurationError` if the parameter is `undefined`"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":99,"character":4}],"typeParameter":[{"id":5886,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":5887,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5886,"name":"T","package":"@serenity-js/protractor","refersToTypeParameter":true}}]},{"id":5889,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":5890,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":5891,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":5892,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":5893,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":5894,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[5880]},{"title":"Methods","children":[5870,5895,5897,5884,5889,5891,5893]}],"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":41,"character":13}],"extendedTypes":[{"type":"reference","target":3304,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"protractor.ElementFinder","package":"protractor","qualifiedName":"ElementFinder"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/BrowseTheWebWithProtractor","categories":[],"nextId":5899},{"id":5899,"name":"UseAngular","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to enable or disable automated synchronisation between Protractor and Angular 1.x application.\\n\\nUseful when a test scenario needs to interact with both Angular-based\\nand non-Angular web apps, e.g. use an external sign-in form.\\n\\n**Please note** if your tests interact with a non-Angular app you can disable\\nsynchronisation altogether in ["},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"](https://github.com/angular/protractor/blob/master/lib/config.ts).\\n\\n**Warning:** this interaction is Protractor-specific, so using it in your tests\\nwill reduce their portability across test integration tools.\\n\\n## Disabling synchronisation temporarily\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { UseAngular } from \'@serenity-js/protractor\'\\nimport { Navigate } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\'\\n\\nawait actorCalled(\'Angie\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    UseAngular.disableSynchronisation(),\\n    Navigate.to(\'https://mycompany.com/login\'),\\n    // navigate to a non-Angular app, perform some activities...\\n\\n    UseAngular.disableSynchronisation(),\\n    Navigate.to(\'https://myapp.com\'),\\n    // navigate to an Angular app, perform some more activities...\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Disabling synchronisation with Angular in "},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```js\\nexports.config = {\\n  onPrepare: function () {\\n    return browser.waitForAngularEnabled(false);\\n  },\\n  // ... other config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [Cross-application testing with Serenity/JS](https://janmolak.com/cross-application-testing-with-serenity-js-4103a272b75b)"}]},"children":[{"id":5900,"name":"disableSynchronisation","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":62,"character":11}],"signatures":[{"id":5901,"name":"disableSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to disable\\nsynchronisation between Protractor and an Angular 1.x app."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":62,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":5902,"name":"enableSynchronisation","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":74,"character":11}],"signatures":[{"id":5903,"name":"enableSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to enable\\nsynchronisation between Protractor and an Angular 1.x app."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":74,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":5904,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5905,"name":"new UseAngular","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5899,"name":"UseAngular","package":"@serenity-js/protractor"}}]}],"groups":[{"title":"Constructors","children":[5904]},{"title":"Methods","children":[5900,5902]}],"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":56,"character":13}],"permalink":"/api/protractor/class/UseAngular","categories":[],"previousId":5869,"nextId":5906},{"id":5906,"name":"ProtractorBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":5907,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":18,"character":4}],"signatures":[{"id":5908,"name":"new ProtractorBrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":18,"character":4}],"parameters":[{"id":5909,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5906,"name":"ProtractorBrowsingSession","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<ProtractorPage>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<ProtractorPage>.constructor"}},{"id":5911,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":22,"character":19}],"signatures":[{"id":5912,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":22,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":6044,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":5913,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":54,"character":19}],"signatures":[{"id":5914,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":54,"character":19}],"parameters":[{"id":5915,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6044,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":5918,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":93,"character":19}],"signatures":[{"id":5919,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":93,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6044,"name":"ProtractorPage","package":"@serenity-js/protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":5922,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":134,"character":19}],"signatures":[{"id":5923,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":134,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}},{"id":5926,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5927,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5928,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6044,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":5929,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5930,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5931,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":6044,"name":"ProtractorPage","package":"@serenity-js/protractor"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":5932,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5933,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5934,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":5935,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5936,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":5937,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":5938,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"groups":[{"title":"Constructors","children":[5907]},{"title":"Methods","children":[5911,5913,5918,5922,5926,5929,5932,5935,5937]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":3920,"typeArguments":[{"type":"reference","target":6044,"name":"ProtractorPage","package":"@serenity-js/protractor"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorBrowsingSession","categories":[],"previousId":5899,"nextId":5939},{"id":5939,"name":"ProtractorCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":6018,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":16,"character":4}],"signatures":[{"id":6019,"name":"new ProtractorCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":16,"character":4}],"parameters":[{"id":6020,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}},{"id":6021,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5939,"name":"ProtractorCookie","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":6023,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":21,"character":10}],"signatures":[{"id":6024,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":21,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}},{"id":6028,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":6029,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":6030,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":6031,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":6032,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":6033,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":6034,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":6035,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":6036,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":6037,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":6038,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":6039,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":6040,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":6041,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":6042,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":6043,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"groups":[{"title":"Constructors","children":[6018]},{"title":"Methods","children":[6023,6028,6030,6032,6034,6036,6038,6040,6042]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorCookie","categories":[],"previousId":5906,"nextId":6044},{"id":6044,"name":"ProtractorPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":6056,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":36,"character":4}],"signatures":[{"id":6057,"name":"new ProtractorPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":36,"character":4}],"parameters":[{"id":6058,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5906,"name":"ProtractorBrowsingSession","package":"@serenity-js/protractor"}},{"id":6059,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}},{"id":6060,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4158,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":6061,"name":"errorHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ProtractorErrorHandler","package":"@serenity-js/protractor"}},{"id":6062,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6044,"name":"ProtractorPage","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"Page<protractor.ElementFinder>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<protractor.ElementFinder>.constructor"}},{"id":6067,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":51,"character":4}],"signatures":[{"id":6068,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":51,"character":4}],"parameters":[{"id":6069,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":6070,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":62,"character":4}],"signatures":[{"id":6071,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":62,"character":4}],"parameters":[{"id":6072,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":6073,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":68,"character":4}],"signatures":[{"id":6074,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":68,"character":4}],"parameters":[{"id":6075,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4482,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":6076,"name":"enableAngularSynchronisation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":100,"character":10}],"signatures":[{"id":6077,"name":"enableAngularSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"If set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", Protractor will not wait for Angular 1.x "},{"kind":"code","text":"`$http`"},{"kind":"text","text":" and "},{"kind":"code","text":"`$timeout`"},{"kind":"text","text":"\\ntasks to complete before interacting with the browser.\\n\\nThis can be useful when:\\n- you need to switch to a non-Angular app during your tests, e.g. to sign in using an SSO gateway\\n- your app continuously polls an API with "},{"kind":"code","text":"`$timeout`"},{"kind":"text","text":"\\n\\nIf you\'re not testing an Angular app, it\'s better to disable Angular synchronisation completely\\nin protractor configuration:\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n    onPrepare: function () {\\n        return browser.waitForAngularEnabled(false)\\n    },\\n\\n    // ... other config\\n}\\n```"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":100,"character":10}],"parameters":[{"id":6078,"name":"enable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":6079,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":106,"character":10}],"signatures":[{"id":6080,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":106,"character":10}],"parameters":[{"id":6081,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":6082,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":112,"character":10}],"signatures":[{"id":6083,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":112,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":6084,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":118,"character":10}],"signatures":[{"id":6085,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":118,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":6086,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":124,"character":10}],"signatures":[{"id":6087,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":124,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":6088,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":130,"character":10}],"signatures":[{"id":6089,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":130,"character":10}],"parameters":[{"id":6090,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":6091,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":162,"character":10}],"signatures":[{"id":6092,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":162,"character":10}],"typeParameter":[{"id":6093,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6094,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6095,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6096,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":163,"character":26}],"signatures":[{"id":6097,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":163,"character":26}],"parameters":[{"id":6098,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6094,"name":"InnerArguments","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":6093,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}}]}}]}},{"id":6099,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6094,"name":"InnerArguments","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6093,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":6100,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":188,"character":10}],"signatures":[{"id":6101,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":188,"character":10}],"typeParameter":[{"id":6102,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6103,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6104,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6105,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":26}],"signatures":[{"id":6106,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":26}],"parameters":[{"id":6107,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":6103,"name":"Parameters","package":"@serenity-js/protractor","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":6108,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":74}],"signatures":[{"id":6109,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":74}],"parameters":[{"id":6110,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6102,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":6111,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6103,"name":"Parameters","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6102,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":6112,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":215,"character":4}],"signatures":[{"id":6113,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":215,"character":4}],"type":{"type":"intrinsic","name":"any"},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":6114,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":227,"character":10}],"signatures":[{"id":6115,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":227,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":6116,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":246,"character":10}],"signatures":[{"id":6117,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":246,"character":10}],"parameters":[{"id":6118,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":6119,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":250,"character":10}],"signatures":[{"id":6120,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":250,"character":10}],"parameters":[{"id":6121,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4057,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":6122,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":266,"character":10}],"signatures":[{"id":6123,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":266,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":6124,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":272,"character":10}],"signatures":[{"id":6125,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":272,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":6126,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":278,"character":10}],"signatures":[{"id":6127,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":278,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":6128,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":284,"character":10}],"signatures":[{"id":6129,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":284,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":6130,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":10}],"signatures":[{"id":6131,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":6132,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6133,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":6134,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6133,6134]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":6135,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":10}],"signatures":[{"id":6136,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":10}],"parameters":[{"id":6137,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":6138,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6139,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":6140,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6139,6140]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":6141,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":324,"character":10}],"signatures":[{"id":6142,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":324,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":6143,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":336,"character":10}],"signatures":[{"id":6144,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":336,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":6145,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":340,"character":10}],"signatures":[{"id":6146,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":340,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}},{"id":6156,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":6157,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":6158,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4854,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":6159,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":6160,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":4158,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":6161,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":6162,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"groups":[{"title":"Constructors","children":[6056]},{"title":"Properties","children":[6156]},{"title":"Methods","children":[6067,6070,6073,6076,6079,6082,6084,6086,6088,6091,6100,6112,6114,6116,6119,6122,6124,6126,6128,6130,6135,6141,6143,6145,6157,6159,6161]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":22,"character":13}],"extendedTypes":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"protractor.ElementFinder","package":"protractor","qualifiedName":"ElementFinder"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorPage","categories":[],"previousId":5939,"nextId":6163},{"id":6163,"name":"ProtractorPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":6183,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":18,"character":4}],"signatures":[{"id":6184,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":18,"character":4}],"parameters":[{"id":6185,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6163,"name":"ProtractorPageElement","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":6186,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":22,"character":4}],"signatures":[{"id":6187,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":22,"character":4}],"parameters":[{"id":6188,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6163,"name":"ProtractorPageElement","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":6163,"name":"ProtractorPageElement","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":6189,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":26,"character":10}],"signatures":[{"id":6190,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":26,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":6191,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":67,"character":10}],"signatures":[{"id":6192,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":67,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":6193,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":73,"character":10}],"signatures":[{"id":6194,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":73,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":6195,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":84,"character":10}],"signatures":[{"id":6196,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":84,"character":10}],"parameters":[{"id":6197,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":6198,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":92,"character":10}],"signatures":[{"id":6199,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":92,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":6200,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":101,"character":10}],"signatures":[{"id":6201,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":101,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":6202,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":112,"character":10}],"signatures":[{"id":6203,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":112,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":6204,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":123,"character":10}],"signatures":[{"id":6205,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":123,"character":10}],"parameters":[{"id":6206,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":6207,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":136,"character":10}],"signatures":[{"id":6208,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":136,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":6209,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":166,"character":10}],"signatures":[{"id":6210,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":166,"character":10}],"parameters":[{"id":6211,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":6212,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":172,"character":10}],"signatures":[{"id":6213,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":172,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":6214,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":178,"character":10}],"signatures":[{"id":6215,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":6216,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":191,"character":10}],"signatures":[{"id":6217,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":191,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":6218,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":200,"character":10}],"signatures":[{"id":6219,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":200,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4854,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":6220,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":236,"character":10}],"signatures":[{"id":6221,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":236,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":6222,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":245,"character":10}],"signatures":[{"id":6223,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":245,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":6224,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":249,"character":10}],"signatures":[{"id":6225,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":249,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":6226,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":255,"character":10}],"signatures":[{"id":6227,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":255,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}},{"id":6228,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":261,"character":10}],"signatures":[{"id":6229,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":261,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":6230,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":267,"character":10}],"signatures":[{"id":6231,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":267,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}},{"id":6232,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":6180,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":6181,"name":"new ProtractorPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":6182,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6163,"name":"ProtractorPageElement","package":"@serenity-js/protractor"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<ElementFinder>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<ElementFinder>.constructor"}},{"id":6233,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":6234,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":6235,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":6236,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"groups":[{"title":"Constructors","children":[6180]},{"title":"Properties","children":[6232]},{"title":"Methods","children":[6183,6186,6189,6191,6193,6195,6198,6200,6202,6204,6207,6209,6212,6214,6216,6218,6220,6222,6224,6226,6228,6230,6233,6235]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorPageElement","categories":[],"previousId":6044,"nextId":6237},{"id":6237,"name":"ProtractorParam","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Protractor configuration parameter specified in "},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"\\nand identified by name. Protractor configuration parameters can be overridden via the command line.\\n\\n**Warning:** this question is Protractor-specific, so using it in your tests\\nwill reduce their portability across test integration tools.\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  params: {\\n    login: {\\n      username: \'jane@example.org\'\\n      password: process.env.PASSWORD\\n    }\\n  }\\n  // ...\\n}\\n```"},{"kind":"text","text":"\\n\\n## Overriding configuration parameter using the command line\\n\\n"},{"kind":"code","text":"```shell\\nnpx protractor ./protractor.conf.js --params.login.username=\\"bob@example.org\\"\\n```"},{"kind":"text","text":"\\n\\n## Using as "},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor, ProtractorParam } from \'@serenity-js/protractor\'\\nimport { Enter } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\'\\n\\nawait actorCalled(\'Jane\')\\n  .whoCan( BrowseTheWebWithProtractor.using(protractor.browser))\\n  .attemptsTo(\\n    Enter.theValue(ProtractorParam.called(\'login\').username).into(Form.exampleInput),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Specifying path to param as string\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor, ProtractorParam } from \'@serenity-js/protractor\'\\nimport { Enter } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\\n\\nawait actorCalled(\'Jane\')\\n  .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))\\n  .attemptsTo(\\n    Enter.theValue(ProtractorParam.called(\'login.username\')).into(Form.exampleInput),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWebWithProtractor.param`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/#param)"}]},"children":[{"id":6238,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":76,"character":11}],"signatures":[{"id":6239,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the parameter to retrieve. This could also be a dot-delimited path,\\ne.g. "},{"kind":"code","text":"`login.username`"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":76,"character":11}],"typeParameter":[{"id":6240,"name":"Return_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":6241,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":6240,"name":"Return_Type","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":6242,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":6243,"name":"new ProtractorParam","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":6237,"name":"ProtractorParam","package":"@serenity-js/protractor"}}]}],"groups":[{"title":"Constructors","children":[6242]},{"title":"Methods","children":[6238]}],"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":68,"character":13}],"permalink":"/api/protractor/class/ProtractorParam","categories":[],"previousId":6163}],"groups":[{"title":"Abilities","children":[5869]},{"title":"Activities","children":[5899]},{"title":"Models","children":[5906,5939,6044,6163]},{"title":"Questions","children":[6237]}],"sources":[{"fileName":"packages/protractor/src/index.ts","line":1,"character":0}],"permalink":"/api/protractor"},"urlSlug":"protractor"}],"packageName":"@serenity-js/protractor","packageVersion":"3.31.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":45,"name":"@serenity-js/rest","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":7307,"name":"AxiosRequestConfigProxyDefaults","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":3,"character":12}],"type":{"type":"reflection","declaration":{"id":7308,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7309,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":4,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":7310,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":5,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":7311,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":6,"character":4}],"type":{"type":"reflection","declaration":{"id":7312,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7313,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":7,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":7314,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":8,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[7313,7314]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":6,"character":11}]}}},{"id":7315,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[7309,7310,7311,7315]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":3,"character":46}]}},"permalink":"/api/rest#AxiosRequestConfigProxyDefaults","categories":[],"previousId":22564,"nextId":7316},{"id":7316,"name":"AxiosRequestConfigDefaults","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":13,"character":12}],"typeParameters":[{"id":7319,"name":"Data","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"CreateAxiosDefaults"},"typeArguments":[{"type":"reference","target":7319,"name":"Data","package":"@serenity-js/rest","refersToTypeParameter":true}],"name":"CreateAxiosDefaults","package":"axios"},{"type":"literal","value":"proxy"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reflection","declaration":{"id":7317,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7318,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":14,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":7307,"name":"AxiosRequestConfigProxyDefaults","package":"@serenity-js/rest"},{"type":"literal","value":false}]}}],"groups":[{"title":"Properties","children":[7318]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":13,"character":96}]}}]},"permalink":"/api/rest#AxiosRequestConfigDefaults","categories":[],"previousId":7307},{"id":7320,"name":"createAxios","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/createAxios.ts","line":12,"character":16}],"signatures":[{"id":7321,"name":"createAxios","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an Axios instance with desired configuration and proxy support."}]},"sources":[{"fileName":"packages/rest/src/io/createAxios.ts","line":12,"character":16}],"parameters":[{"id":7322,"name":"axiosInstanceOrConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"},{"type":"reference","target":7316,"name":"AxiosRequestConfigDefaults","package":"@serenity-js/rest"}]},"defaultValue":"{}"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"}}],"permalink":"/api/rest/function/createAxios","categories":[],"previousId":7378,"nextId":7422},{"id":7323,"name":"CallAnApi","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An [ability](/api/core/class/Ability/) that wraps [axios client](https://axios-http.com/docs/api_intro) and enables\\nthe [actor](/api/core/class/Actor/) to [send](/api/rest/class/Send/)\\n[HTTP requests](/api/rest/class/HTTPRequest/) to HTTP APIs.\\n\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" uses ["},{"kind":"code","text":"`proxy-from-env`"},{"kind":"text","text":"](https://www.npmjs.com/package/proxy-from-env) and an approach\\ndescribed in [\\"Node.js Axios behind corporate proxies\\"](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d)\\nto automatically detect proxy server configuration based\\non your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables).\\nYou can override this configuration if needed.\\n\\n## Configuring the ability to call an API\\n\\nThe easiest way to configure the ability to "},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" is to provide the "},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":" of your HTTP API,\\nand rely on Serenity/JS to offer other sensible defaults:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'https://api.example.org/\')\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/v1/users/2\')),            // GET https://api.example.org/v1/users/2\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Resolving relative URLs\\n\\nSerenity/JS resolves request URLs using Node.js [WHATWG URL API](https://nodejs.org/api/url.html#new-urlinput-base).\\nThis means that the request URL is determined using the resource path resolved in the context of base URL, i.e. "},{"kind":"code","text":"`new URL(resourcePath, [baseURL])`"},{"kind":"text","text":".\\n\\nConsider the following example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(baseURL)\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(resourcePath)),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\nIn the above example:\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" is defined as a full URL, it overrides the base URL\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" starts with a forward slash "},{"kind":"code","text":"`/`"},{"kind":"text","text":", it replaces any path defined in the base URL\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" is not a full URL and doesn\'t start with a forward slash, it gets appended to the base URL\\n\\n| baseURL                       | resourcePath               | result                               |\\n| ----------------------------- | -------------------------- | ------------------------------------ |\\n| "},{"kind":"code","text":"`https://api.example.org/`"},{"kind":"text","text":"    | "},{"kind":"code","text":"`/v1/users/2`"},{"kind":"text","text":"              | "},{"kind":"code","text":"`https://api.example.org/v1/users/2`"},{"kind":"text","text":" |\\n| "},{"kind":"code","text":"`https://example.org/api/v1/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`users/2`"},{"kind":"text","text":"                  | "},{"kind":"code","text":"`https://example.org/api/v1/users/2`"},{"kind":"text","text":" |\\n| "},{"kind":"code","text":"`https://example.org/api/v1/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`/secure/oauth`"},{"kind":"text","text":"            | "},{"kind":"code","text":"`https://example.org/secure/oauth`"},{"kind":"text","text":"   |\\n| "},{"kind":"code","text":"`https://v1.example.org/api/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`https://v2.example.org/`"},{"kind":"text","text":"  | "},{"kind":"code","text":"`https://v2.example.org/`"},{"kind":"text","text":"            |\\n\\n### Using Axios configuration object\\n\\nWhen you need more control over how your Axios instance is configured, provide\\nan [Axios configuration object](https://axios-http.com/docs/req_config). For example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      timeout: 30_000,\\n      // ... other configuration options\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Working with proxy servers\\n\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" uses ["},{"kind":"code","text":"`proxy-from-env`"},{"kind":"text","text":"](https://www.npmjs.com/package/proxy-from-env) to automatically\\ndetect proxy server configuration based on your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables).\\n\\nThis default behaviour can be overridden by providing explicit proxy configuration:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      proxy: {\\n        protocol: \'http\',\\n        host: \'proxy.example.org\',\\n        port: 9000,\\n        auth: {                          // `auth` is optional\\n          username: \'proxy-username\',\\n          password: \'proxy-password\',\\n        }\\n      }\\n      // ... other configuration options\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\nPlease note that Serenity/JS uses [proxy-agents](https://github.com/TooTallNate/proxy-agents)\\nand the approach described in [\\"Node.js Axios behind corporate proxies\\"](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d)\\nto work around [limited proxy support capabilities](https://github.com/axios/axios/issues?q=is%3Aissue+is%3Aopen+proxy) in Axios itself.\\n\\n### Using Axios instance with proxy support\\n\\nTo have full control over the Axios instance used by the ability to "},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":", you can create it yourself\\nand inject it into the ability.\\nThis approach allows you to still benefit from automated proxy detection in configuration, while taking advantage\\nof the many [Axios plugins](https://www.npmjs.com/search?q=axios).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { createAxios, CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport axiosRetry from \'axios-retry\'\\n\\nconst instance = createAxios({ baseURL \'https://api.example.org/\' })\\naxiosRetry(instance, { retries: 3 })\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using(instance)\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Using raw Axios instance\\n\\nIf you don\'t want Serenity/JS to enhance your Axios instance with proxy support, instantiate the ability to\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" using its constructor directly.\\nNote, however, that by using this approach you\'re taking the responsibility for all the aspects of configuring Axios.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport { axiosCreate } from \'@serenity-js/rest\'\\nimport axiosRetry from \'axios-retry\'\\n\\nconst instance = axiosCreate({ baseURL \'https://api.example.org/\' })\\naxiosRetry(instance, { retries: 3 })\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    new CallAnApi(instance)     // using the constructor ensures your axios instance is not modified in any way.\\n  )\\n  .attemptsTo(\\n    // ...\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Serenity/JS defaults\\n\\nWhen using ["},{"kind":"code","text":"`CallAnApi.at`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#at) or ["},{"kind":"code","text":"`CallAnApi.using`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#using) with a configuration object, Serenity/JS\\nmerges your [Axios request configuration](https://axios-http.com/docs/req_config) with the following defaults:\\n- "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":": 10 seconds\\n\\n\\nYou can override them by specifying the given property in your configuration object, for example:\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      timeout: 30_000\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Interacting with multiple APIs\\n\\nSome test scenarios might require you to interact with multiple HTTP APIs. With Serenity/JS you can do this\\nusing either API-specific actors, or by specifying full URLs when performing the requests.\\n\\nThe following examples will assume that the test scenarios needs to interact with the following APIs:\\n- "},{"kind":"code","text":"`https://testdata.example.org/api/v1/`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`https://shop.example.org/api/v1/`"},{"kind":"text","text":"\\n\\nLet\'s also assume that the "},{"kind":"code","text":"`testdata`"},{"kind":"text","text":" API allows the automation to manage the test data used by the "},{"kind":"code","text":"`shop`"},{"kind":"text","text":" API.\\n\\n### Using API-specific actors\\n\\nTo create API-specific actors, configure your [test runner](/handbook/test-runners/) with a [cast](/api/core/class/Cast/)\\nthat gives your actors appropriate abilities based, for example, on their name:\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { Actor, Cast, engage } from \'@serenity-js/core\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nexport class MyActors implements Cast {\\n  prepare(actor: Actor): Actor {\\n    switch(actor.name) {\\n      case \'Ted\':\\n        return actor.whoCan(CallAnApi.at(\'https://testdata.example.org/api/v1/\'))\\n      case \'Shelly\':\\n        return actor.whoCan(CallAnApi.at(\'https://shop.example.org/api/v1/\'))\\n      default:\\n        return actor;\\n    }\\n  }\\n}\\n\\nbeforeEach(() => engage(new MyActors()))\\n```"},{"kind":"text","text":"\\n\\nNext, retrieve the appropriate actor in your test scenario using ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/), for example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, beforeEach } from \'mocha\'\\nimport { actorCalled, engage } from \'@serenity-js/core\\nimport { Send, GetRequest, PostRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Multi-actor API testing\', () => {\\n  beforeEach(() => engage(new MyActors()))\\n\\n  it(\'allows each actor to interact with their API\', async () => {\\n\\n    await actorCalled(\'Ted\').attemptsTo(\\n      Send.a(PostRequest.to(\'products\').with({ name: \'Apples\', price: \'\xa32.50\' })),\\n      Ensure.that(LastResponse.status(), equals(201)),\\n    )\\n\\n    await actorCalled(\'Shelly\').attemptsTo(\\n      Send.a(GetRequest.to(\'?product=Apples\')),\\n      Ensure.that(LastResponse.status(), equals(200)),\\n      Ensure.that(LastResponse.body(), equals([\\n        { name: \'Apples\', price: \'\xa32.50\' }\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n### Using full URLs\\n\\nIf you prefer to have a single actor interacting with multiple APIs, you can specify the full URL for every request:\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, beforeEach } from \'mocha\'\\nimport { actorCalled, Cast, engage } from \'@serenity-js/core\\nimport { CallAnApi, Send, GetRequest, PostRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Multi-actor API testing\', () => {\\n  beforeEach(() => engage(\\n    Cast.where(actor => actor.whoCan(CallAnApi.using({})))\\n  ))\\n\\n  it(\'allows each actor to interact with their API\', async () => {\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Send.a(PostRequest.to(\'https://testdata.example.org/api/v1/products\')\\n        .with({ name: \'Apples\', price: \'\xa32.50\' })),\\n      Ensure.that(LastResponse.status(), equals(201)),\\n\\n      Send.a(GetRequest.to(\'https://shop.example.org/api/v1/?product=Apples\')),\\n      Ensure.that(LastResponse.status(), equals(200)),\\n      Ensure.that(LastResponse.body(), equals([\\n        { name: \'Apples\', price: \'\xa32.50\' }\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Axios: Configuring requests](https://axios-http.com/docs/req_config)\\n- [MDN: HTTP methods documentation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods)"}]},"children":[{"id":7324,"name":"at","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":344,"character":11}],"signatures":[{"id":7325,"name":"at","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [ability](/api/core/class/Ability/) to call a REST API at a specified "},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":";\\n\\nThis is the same as invoking "},{"kind":"code","text":"`CallAnApi.using({ baseURL: \'https://example.org\' })`"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":344,"character":11}],"parameters":[{"id":7326,"name":"baseURL","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}]}}],"type":{"type":"reference","target":7323,"name":"CallAnApi","package":"@serenity-js/rest"}}]},{"id":7327,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":369,"character":11}],"signatures":[{"id":7328,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [ability](/api/core/class/Ability/) to call an HTTP API using the given Axios instance,\\nor an Axios request configuration object.\\n\\nWhen you provide an [Axios configuration object](https://axios-http.com/docs/req_config),\\nit gets shallow-merged with the following defaults:\\n- request timeout of 10 seconds\\n- automatic proxy support based on\\n  your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables)\\n\\nWhen you provide an Axios instance, it\'s enhanced with proxy support and no other modifications are made.\\n\\nIf you don\'t want Serenity/JS to augment or modify your Axios instance in any way,\\nplease use the ["},{"kind":"code","text":"`CallAnApi.constructor`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#constructor) directly."}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":369,"character":11}],"parameters":[{"id":7329,"name":"axiosInstanceOrConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"},{"type":"reference","target":7316,"name":"AxiosRequestConfigDefaults","package":"@serenity-js/rest"}]}}],"type":{"type":"reference","target":7323,"name":"CallAnApi","package":"@serenity-js/rest"}}]},{"id":7363,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":7364,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}},{"id":7337,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":380,"character":4}],"signatures":[{"id":7338,"name":"new CallAnApi","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- [AxiosInstance](https://axios-http.com/docs/instance)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":380,"character":4}],"parameters":[{"id":7339,"name":"axiosInstance","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A pre-configured instance of the Axios HTTP client"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"}}],"type":{"type":"reference","target":7323,"name":"CallAnApi","package":"@serenity-js/rest"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":7342,"name":"modifyConfig","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":4}],"signatures":[{"id":7343,"name":"modifyConfig","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for the original Axios config to be changed after\\nthe [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nhas been instantiated and given to the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":4}],"parameters":[{"id":7344,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7345,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":21}],"signatures":[{"id":7346,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":21}],"parameters":[{"id":7347,"name":"original","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosDefaults"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosDefaults","package":"axios"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":7348,"name":"request","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":411,"character":10}],"signatures":[{"id":7349,"name":"request","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sends an HTTP request to a specified url.\\nResponse will be cached and available via ["},{"kind":"code","text":"`CallAnApi.mapLastResponse`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#mapLastResponse).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":411,"character":10}],"parameters":[{"id":7350,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration, which can be used to override the defaults\\n provided when the [ability](/api/core/class/Ability/)\\n to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosResponse"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AxiosResponse","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":7351,"name":"resolveUrl","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":451,"character":4}],"signatures":[{"id":7352,"name":"resolveUrl","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the final URL, based on the ["},{"kind":"code","text":"`AxiosRequestConfig`"},{"kind":"text","text":"](https://axios-http.com/docs/req_config) provided\\nand any defaults that the ["},{"kind":"code","text":"`AxiosInstance`"},{"kind":"text","text":"](https://axios-http.com/docs/instance) has been configured with.\\n\\nNote that unlike Axios, this method uses the Node.js [WHATWG URL API](https://nodejs.org/api/url.html#new-urlinput-base)\\nto ensure URLs are correctly resolved."}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":451,"character":4}],"parameters":[{"id":7353,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":7354,"name":"mapLastResponse","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":4}],"signatures":[{"id":7355,"name":"mapLastResponse","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps the last cached response to another type.\\nUseful when you need to extract a portion of the ["},{"kind":"code","text":"`AxiosResponse`"},{"kind":"text","text":"](https://axios-http.com/docs/res_schema) object.\\n\\n#### Learn more\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":4}],"typeParameter":[{"id":7356,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":7357,"name":"mappingFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7358,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":40}],"signatures":[{"id":7359,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":40}],"parameters":[{"id":7360,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosResponse"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AxiosResponse","package":"axios"}}],"type":{"type":"reference","target":7356,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":7356,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}}]},{"id":7361,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":476,"character":4}],"signatures":[{"id":7362,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":476,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"groups":[{"title":"Constructors","children":[7337]},{"title":"Methods","children":[7324,7327,7363,7342,7348,7351,7354,7361]}],"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":333,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/rest/class/CallAnApi","categories":[],"nextId":7365},{"id":7365,"name":"ChangeApiConfig","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes configuration of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nthat the [actor](/api/core/class/Actor/) executing this [interaction](/api/core/class/Interaction/) has been configured with.\\n\\n## Changing API URL for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { By Navigate, PageElement, Text } from \'@serenity-js/web\';\\nimport { axiosCreate, CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nimport * as axios from \'axios\';\\n\\n// Let\'s imagine that the website under test displays\\n// a dynamically generated API URL that we would like to use\\nconst ApiDetailsWidget = {\\n  url: () => PageElement.located(By.id(\'api-url\')).describedAs(\'API URL\'),\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    BrowseTheWeb.using(protractor.browser),\\n\\n    // Note: no default base URL is given when the axios instance is created\\n    CallAnApi.using(axiosCreate()),\\n  )\\n  .attemptsTo(\\n    Navigate.to(\'/profile\'),\\n\\n    // We change the API URL based on the text displayed in the widget\\n    // (although we could change it to some arbitrary string too).\\n    ChangeApiConfig.setUrlTo(Text.of(ApiDetailsWidget.url())),\\n\\n    // Any subsequent request will be sent to the newly set URL\\n    Send.a(GetRequest.to(\'/projects\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Changing API port for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { LocalServer, ManageALocalServer, StartLocalServer } from \'@serenity-js/local-server\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    ManageALocalServer.runningAHttpListener(someServer),\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    StartALocalServer.onRandomPort(),\\n    ChangeApiConfig.setPortTo(LocalServer.port()),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Setting a header for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n// A sample Question reading a Node process environment variable\\nconst EnvVar = (var_name: string) =>\\n    Question.about(`${ name } environment variable`, actor => process.env[var_name]);\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    ChangeApiConfig.setHeader(\'Authorization\', EnvVar(\'TOKEN\')),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Handling sensitive information\\n\\nBy design, any data handled by an actor appears in Serenity/JS reports.\\nTo prevent the exposure of any sensitive information, such as passwords or tokens, you should use ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    ChangeApiConfig.setHeader(\'Authorization\', Masked.valueOf(\'secret token\')),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":7366,"name":"setUrlTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":121,"character":11}],"signatures":[{"id":7367,"name":"setUrlTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the base URL\\nof their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":121,"character":11}],"parameters":[{"id":7368,"name":"newApiUrl","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":7369,"name":"setPortTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":131,"character":11}],"signatures":[{"id":7370,"name":"setPortTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the port configured in the base URL\\nof their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":131,"character":11}],"parameters":[{"id":7371,"name":"newApiPort","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":7372,"name":"setHeader","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":144,"character":11}],"signatures":[{"id":7373,"name":"setHeader","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the configuration of the ["},{"kind":"code","text":"`AxiosInstance`"},{"kind":"text","text":"](https://axios-http.com/docs/instance)\\nused by their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nand set an HTTP request header for any subsequent [HTTP requests](/api/rest/class/HTTPRequest/)\\nissued via ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/)."}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":144,"character":11}],"parameters":[{"id":7374,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":7375,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":7376,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":7377,"name":"new ChangeApiConfig","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":7365,"name":"ChangeApiConfig","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Constructors","children":[7376]},{"title":"Methods","children":[7366,7369,7372]}],"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":113,"character":13}],"permalink":"/api/rest/class/ChangeApiConfig","categories":[],"previousId":7323,"nextId":7378},{"id":7378,"name":"Send","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sends a ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/) to a specified URL.\\n\\nThe response to the request is made available via ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/).\\n\\n## Send a GET request\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":7379,"name":"a","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":42,"character":11}],"signatures":[{"id":7380,"name":"a","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":42,"character":11}],"parameters":[{"id":7381,"name":"request","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":7408,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":7409,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":7410,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":7411,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":7412,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7413,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7414,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[7414]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":7420,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":7421,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":7396,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":56,"character":4}],"signatures":[{"id":7397,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":56,"character":4}],"parameters":[{"id":7398,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[7379,7408,7410,7420,7396]}],"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":32,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/rest/class/Send","categories":[],"previousId":7365,"nextId":7320},{"id":7422,"name":"DeleteRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The DELETE method requests that the origin server remove the\\nassociation between the target resource and its current\\nfunctionality.\\n\\n## Create and then remove a resource\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { CallAnApi, DeleteRequest, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\n import { Ensure, equals, startsWith } from \'@serenity-js/assertions\'\\n\\n await actorCalled(\'Apisitt\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n   .attemptsTo(\\n     // create a new test user account\\n     Send.a(PostRequest.to(\'/users\').with({\\n         login: \'tester\',\\n         password: \'P@ssword1\',\\n     }),\\n     Ensure.that(LastResponse.status(), equals(201)),\\n     Ensure.that(LastResponse.header(\'Location\'), startsWith(\'/users\')),\\n\\n     // delete the test user account\\n     Send.a(DeleteRequest.to(LastResponse.header(\'Location\'))),\\n     Ensure.that(LastResponse.status(), equals(200)),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE\\n- https://tools.ietf.org/html/rfc7231#section-4.3.5"}]},"children":[{"id":7423,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":55,"character":11}],"signatures":[{"id":7424,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":55,"character":11}],"parameters":[{"id":7425,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":7422,"name":"DeleteRequest","package":"@serenity-js/rest"}}]},{"id":9370,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":9371,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":9372,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14654,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14653,"name":"HTTPRequest.describedAs"}},{"id":9373,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":9374,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":9375,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":9376,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9377,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":9378,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":9379,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14657,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14656,"name":"HTTPRequest.as"}},{"id":9380,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":9381,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":9382,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9383,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9384,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[9384]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14664,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14663,"name":"HTTPRequest.describedBy"}},{"id":9390,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":9391,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14674,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14673,"name":"HTTPRequest.toString"}},{"id":8107,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":71,"character":4}],"signatures":[{"id":8108,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":71,"character":4}],"parameters":[{"id":8109,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":8110,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8111,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8112,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8113,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8114,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8115,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":8116,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":8117,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8118,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":8119,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":8120,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8121,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8122,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8123,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8124,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8125,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8126,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8127,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8128,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8129,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8130,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8131,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8132,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8133,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8134,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8135,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8136,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8137,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8138,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8139,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8140,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8141,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8142,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8143,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8144,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8145,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8146,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8147,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8148,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8122,8123,8124,8125,8126,8127,8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,8144,8145,8146,8147,8148]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":8149,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8150,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8151,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8152,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8153,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8154,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8155,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8156,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8157,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8158,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8159,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8160,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8161,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8162,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8163,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8164,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8165,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8166,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8167,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8168,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8169,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8170,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8171,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8172,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8173,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8174,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8175,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8176,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8177,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8178,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8152,8153,8154,8155,8156,8157,8158,8159,8160,8161,8162,8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,8176,8177,8178]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":8179,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8180,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8181,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8182,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8183,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8184,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8185,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8186,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8187,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8188,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8189,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8190,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8191,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8192,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8193,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8194,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8195,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8196,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8197,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8198,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8199,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8200,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8201,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8202,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8203,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8204,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8205,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8206,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8207,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":8208,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8209,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8210,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8211,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8212,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8213,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8214,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8215,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8216,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8217,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8218,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8219,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8220,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8221,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8222,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8223,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8224,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8225,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8226,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8227,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8228,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8229,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8230,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8231,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8232,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8233,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8234,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8235,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8236,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":8237,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8238,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8239,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8240,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8241,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8242,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8243,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8244,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8245,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8246,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8247,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8248,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8249,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8250,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8251,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8252,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8253,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8254,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8255,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8256,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8257,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8258,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8259,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8260,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8261,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8262,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8263,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8264,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8265,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8239,8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250,8251,8252,8253,8254,8255,8256,8257,8258,8259,8260,8261,8262,8263,8264,8265]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":8266,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8267,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8268,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8269,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8270,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8271,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8272,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8273,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8274,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8275,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8276,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8277,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8278,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8279,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8280,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8281,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8282,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8283,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8284,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8285,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8286,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8287,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8288,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8289,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8290,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8291,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8292,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8293,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8294,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8268,8269,8270,8271,8272,8273,8274,8275,8276,8277,8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,8288,8289,8290,8291,8292,8293,8294]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":8324,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8325,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8326,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8327,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8328,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8329,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8330,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8331,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8332,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8333,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8334,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8335,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8336,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8337,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8338,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8339,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8340,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8341,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8342,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8343,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8344,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8345,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8346,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8347,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8348,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8349,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8350,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8351,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8352,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337,8338,8339,8340,8341,8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,8352]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8353,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8354,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8355,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8356,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8357,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8358,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8359,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8360,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8361,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8362,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8363,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8364,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8365,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8366,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8367,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8368,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8369,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8370,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8371,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8372,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8373,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8374,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8375,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8376,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8377,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8378,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8379,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8380,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8381,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8355,8356,8357,8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,8368,8369,8370,8371,8372,8373,8374,8375,8376,8377,8378,8379,8380,8381]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8382,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8383,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8384,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8385,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8386,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8387,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8388,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8389,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8390,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8391,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8392,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8393,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8394,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8395,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8396,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8397,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8398,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8399,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8400,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8401,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8402,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8403,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8404,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8405,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8406,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8407,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8408,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8409,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8410,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8411,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8412,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8413,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8414,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8415,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8416,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8417,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8418,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8419,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8420,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8421,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8422,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8423,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8424,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8425,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8426,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8427,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8428,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8429,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8430,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8431,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8432,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8433,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8434,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8435,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8436,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8437,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8438,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8439,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8413,8414,8415,8416,8417,8418,8419,8420,8421,8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,8432,8433,8434,8435,8436,8437,8438,8439]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8440,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8441,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8442,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8443,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8444,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8445,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8446,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8447,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8448,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8449,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8450,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8451,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8452,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8453,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8454,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8455,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8456,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8457,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8458,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8459,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8460,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8461,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8462,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8463,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8464,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8465,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8466,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8467,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8468,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8442,8443,8444,8445,8446,8447,8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,8464,8465,8466,8467,8468]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8469,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8470,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8471,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8472,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8473,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8474,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8475,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8476,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8477,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8478,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8479,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8480,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8481,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8482,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8483,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8484,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8485,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8486,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8487,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8488,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8489,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8490,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8491,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8492,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8493,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8494,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8495,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8496,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8497,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8471,8472,8473,8474,8475,8476,8477,8478,8479,8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490,8491,8492,8493,8494,8495,8496,8497]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8498,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8499,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8500,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8501,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8502,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8503,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8504,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8505,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8506,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8507,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8508,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8509,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8510,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8511,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8512,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8513,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8514,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8515,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8516,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8517,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8518,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8519,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8520,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8521,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8522,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8523,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8524,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8525,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8526,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8500,8501,8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517,8518,8519,8520,8521,8522,8523,8524,8525,8526]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8527,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8528,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8529,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8530,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8531,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8532,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8533,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8534,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8535,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8536,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8537,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8538,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8539,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8540,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8541,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8542,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8543,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8544,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8545,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8546,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8547,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8548,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8549,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8550,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8551,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8552,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8553,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8554,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8555,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8529,8530,8531,8532,8533,8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8556,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8557,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8558,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8559,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8560,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8561,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8562,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8563,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8564,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8565,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8566,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8567,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8568,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8569,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8570,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8571,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8572,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8573,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8574,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8575,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8576,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8577,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8578,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8579,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8580,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8581,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8582,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8583,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8584,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8558,8559,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,8576,8577,8578,8579,8580,8581,8582,8583,8584]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8585,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8586,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8587,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8588,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8589,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8590,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8591,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8592,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8593,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8594,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8595,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8596,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8597,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8598,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8599,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8600,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8601,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8602,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8603,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8604,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8605,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8606,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8607,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8608,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8609,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8610,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8611,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8612,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8613,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597,8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,8608,8609,8610,8611,8612,8613]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8614,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8615,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8616,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8617,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8618,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8619,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8620,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8621,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8622,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8623,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8624,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8625,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8626,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8627,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8628,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8629,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8630,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8631,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8632,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8633,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8634,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8635,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8636,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8637,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8638,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8639,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8640,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8641,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8642,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8616,8617,8618,8619,8620,8621,8622,8623,8624,8625,8626,8627,8628,8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,8640,8641,8642]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8295,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8296,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8297,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8298,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8299,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8300,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8301,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8302,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8303,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8304,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8305,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8306,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8307,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8308,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8309,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8310,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8311,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8312,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8313,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8314,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8315,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8316,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8317,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8318,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8319,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8320,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8321,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8322,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8323,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,8308,8309,8310,8311,8312,8313,8314,8315,8316,8317,8318,8319,8320,8321,8322,8323]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[8150,8179,8208,8237,8266,8324,8353,8382,8411,8440,8469,8498,8527,8556,8585,8614,8295]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8643,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8644,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8645,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8650,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8651,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8652,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8653,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8654,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8646,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8647,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8648,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8649,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8650,8652,8653,8654,8646,8648]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":8655,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8656,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8657,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8658,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8659,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8660,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8661,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":8662,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8663,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8664,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8665,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8664,8665]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8666,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8667,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8668,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8669,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8670,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8671,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8672,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8673,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8674,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8675,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8676,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8677,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8678,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8679,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":8680,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8681,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8682,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8683,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8684,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8685,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8686,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8687,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8688,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8689,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8690,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8691,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8692,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8693,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8692,8693]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8694,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8688,8689,8690,8694]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8695,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8696,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8697,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8698,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8699,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8700,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8700]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8701,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[8697,8698]},{"title":"Methods","children":[8701]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8702,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8703,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8704,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8705,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8706,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8707,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[8705,8706,8707]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8708,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8709,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8710,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8711,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8712,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8713,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8714,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8715,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8716,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8710,8711,8713,8715]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8717,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8718,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8719,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8720,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8721,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8720]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8722,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8723,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8724,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8725,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8726,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8727,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8728,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[8724,8726,8727,8728]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8729,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8730,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8731,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":8732,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8733,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8734,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8735,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8736,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8111,8112,8113,8114,8117,8120,8643,8644,8656,8657,8658,8659,8660,8662,8666,8667,8668,8669,8670,8672,8674,8675,8677,8678,8679,8680,8682,8683,8684,8685,8686,8695,8702,8703,8708,8717,8718,8722,8729,8730,8733,8735]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":7422,"name":"DeleteRequest","package":"@serenity-js/rest"}}]},{"id":9367,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":9368,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":9369,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14651,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14650,"name":"HTTPRequest.answeredBy"}}],"groups":[{"title":"Methods","children":[7423,9370,9373,9380,9390,8107,9367]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":42,"character":13}],"extendedTypes":[{"type":"reference","target":13332,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/DeleteRequest","categories":[],"previousId":7320,"nextId":9392},{"id":9392,"name":"GetRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP GET method requests a representation of the specified resource.\\nIt is the most frequent type of request made by consumers of a typical HTTP API.\\nFor this reason it\'s important to test every known endpoint that responds to GET requests and ensure that it\\nbehaves correctly.\\n\\nSince the GET method is used to _retrieve_ data from a server, it should be implemented\\nas [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe)\\nand [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\\nThis means that an identical request can be made once or several times in a row with the same effect while leaving\\nthe server in the same state.\\n\\n## Verify response to a GET request\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n interface Book {\\n     title: string;\\n     author: string;\\n }\\n\\n await actorCalled(\'Apisitt\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n   .attemptsTo(\\n     Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n     Ensure.that(LastResponse.status(), equals(200)),\\n     Ensure.that(LastResponse.body<Book>(), equals({\\n         title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n         author: \'Robert M. Pirsig\',\\n     })),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET\\n- https://tools.ietf.org/html/rfc7231#section-4.3.1"}]},"children":[{"id":9393,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":62,"character":11}],"signatures":[{"id":9394,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":62,"character":11}],"parameters":[{"id":9395,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":9392,"name":"GetRequest","package":"@serenity-js/rest"}}]},{"id":11340,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":11341,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":11342,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14654,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14653,"name":"HTTPRequest.describedAs"}},{"id":11343,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":11344,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":11345,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":11346,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11347,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":11348,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":11349,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14657,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14656,"name":"HTTPRequest.as"}},{"id":11350,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":11351,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":11352,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11353,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11354,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[11354]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14664,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14663,"name":"HTTPRequest.describedBy"}},{"id":11360,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":11361,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14674,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14673,"name":"HTTPRequest.toString"}},{"id":10077,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":78,"character":4}],"signatures":[{"id":10078,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":78,"character":4}],"parameters":[{"id":10079,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":10080,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10081,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10082,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10083,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10084,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10085,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":10086,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":10087,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10088,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":10089,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":10090,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10091,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10092,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10093,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10094,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10095,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10096,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10097,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10098,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10099,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10100,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10101,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10102,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10103,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10104,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10105,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10106,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10107,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10108,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10109,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10110,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10111,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10112,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10113,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10114,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10115,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10116,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10117,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10118,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110,10111,10112,10113,10114,10115,10116,10117,10118]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":10119,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10120,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10121,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10122,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10123,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10124,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10125,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10126,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10127,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10128,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10129,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10130,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10131,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10132,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10133,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10134,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10135,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10136,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10137,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10138,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10139,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10140,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10141,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10142,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10143,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10144,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10145,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10146,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10147,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10148,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10122,10123,10124,10125,10126,10127,10128,10129,10130,10131,10132,10133,10134,10135,10136,10137,10138,10139,10140,10141,10142,10143,10144,10145,10146,10147,10148]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":10149,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10150,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10151,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10152,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10153,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10154,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10155,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10156,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10157,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10158,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10159,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10160,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10161,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10162,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10163,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10164,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10165,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10166,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10167,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10168,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10169,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10170,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10171,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10172,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10173,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10174,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10175,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10176,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10177,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10151,10152,10153,10154,10155,10156,10157,10158,10159,10160,10161,10162,10163,10164,10165,10166,10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":10178,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10179,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10180,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10181,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10182,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10183,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10184,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10185,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10186,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10187,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10188,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10189,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10190,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10191,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10192,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10193,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10194,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10195,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10196,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10197,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10198,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10199,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10200,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10201,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10202,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10203,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10204,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10205,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10206,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10180,10181,10182,10183,10184,10185,10186,10187,10188,10189,10190,10191,10192,10193,10194,10195,10196,10197,10198,10199,10200,10201,10202,10203,10204,10205,10206]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":10207,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10208,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10209,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10210,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10211,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10212,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10213,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10214,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10215,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10216,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10217,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10218,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10219,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10220,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10221,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10222,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10223,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10224,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10225,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10226,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10227,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10228,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10229,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10230,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10231,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10232,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10233,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10234,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10235,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10209,10210,10211,10212,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10225,10226,10227,10228,10229,10230,10231,10232,10233,10234,10235]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":10236,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10237,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10238,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10239,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10240,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10241,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10242,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10243,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10244,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10245,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10246,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10247,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10248,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10249,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10250,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10251,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10252,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10253,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10254,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10255,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10256,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10257,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10258,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10259,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10260,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10261,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10262,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10263,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10264,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10238,10239,10240,10241,10242,10243,10244,10245,10246,10247,10248,10249,10250,10251,10252,10253,10254,10255,10256,10257,10258,10259,10260,10261,10262,10263,10264]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":10294,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10295,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10296,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10297,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10298,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10299,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10300,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10301,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10302,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10303,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10304,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10305,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10306,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10307,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10308,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10309,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10310,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10311,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10312,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10313,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10314,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10315,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10316,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10317,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10318,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10319,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10320,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10321,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10322,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10296,10297,10298,10299,10300,10301,10302,10303,10304,10305,10306,10307,10308,10309,10310,10311,10312,10313,10314,10315,10316,10317,10318,10319,10320,10321,10322]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10323,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10324,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10325,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10326,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10327,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10328,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10329,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10330,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10331,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10332,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10333,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10334,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10335,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10336,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10337,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10338,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10339,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10340,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10341,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10342,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10343,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10344,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10345,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10346,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10347,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10348,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10349,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10350,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10351,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10325,10326,10327,10328,10329,10330,10331,10332,10333,10334,10335,10336,10337,10338,10339,10340,10341,10342,10343,10344,10345,10346,10347,10348,10349,10350,10351]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10352,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10353,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10354,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10355,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10356,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10357,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10358,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10359,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10360,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10361,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10362,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10363,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10364,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10365,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10366,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10367,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10368,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10369,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10370,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10371,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10372,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10373,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10374,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10375,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10376,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10377,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10378,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10379,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10380,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10354,10355,10356,10357,10358,10359,10360,10361,10362,10363,10364,10365,10366,10367,10368,10369,10370,10371,10372,10373,10374,10375,10376,10377,10378,10379,10380]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10381,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10382,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10383,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10384,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10385,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10386,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10387,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10388,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10389,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10390,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10391,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10392,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10393,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10394,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10395,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10396,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10397,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10398,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10399,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10400,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10401,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10402,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10403,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10404,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10405,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10406,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10407,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10408,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10409,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10383,10384,10385,10386,10387,10388,10389,10390,10391,10392,10393,10394,10395,10396,10397,10398,10399,10400,10401,10402,10403,10404,10405,10406,10407,10408,10409]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10410,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10411,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10412,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10413,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10414,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10415,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10416,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10417,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10418,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10419,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10420,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10421,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10422,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10423,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10424,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10425,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10426,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10427,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10428,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10429,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10430,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10431,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10432,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10433,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10434,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10435,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10436,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10437,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10438,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10412,10413,10414,10415,10416,10417,10418,10419,10420,10421,10422,10423,10424,10425,10426,10427,10428,10429,10430,10431,10432,10433,10434,10435,10436,10437,10438]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10439,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10440,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10441,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10442,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10443,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10444,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10445,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10446,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10447,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10448,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10449,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10450,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10451,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10452,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10453,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10454,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10455,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10456,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10457,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10458,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10459,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10460,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10461,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10462,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10463,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10464,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10465,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10466,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10467,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10441,10442,10443,10444,10445,10446,10447,10448,10449,10450,10451,10452,10453,10454,10455,10456,10457,10458,10459,10460,10461,10462,10463,10464,10465,10466,10467]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10468,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10469,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10470,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10471,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10472,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10473,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10474,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10475,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10476,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10477,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10478,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10479,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10480,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10481,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10482,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10483,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10484,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10485,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10486,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10487,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10488,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10489,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10490,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10491,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10492,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10493,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10494,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10495,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10496,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10470,10471,10472,10473,10474,10475,10476,10477,10478,10479,10480,10481,10482,10483,10484,10485,10486,10487,10488,10489,10490,10491,10492,10493,10494,10495,10496]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10497,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10498,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10499,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10500,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10501,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10502,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10503,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10504,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10505,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10506,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10507,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10508,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10509,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10510,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10511,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10512,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10513,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10514,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10515,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10516,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10517,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10518,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10519,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10520,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10521,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10522,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10523,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10524,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10525,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10499,10500,10501,10502,10503,10504,10505,10506,10507,10508,10509,10510,10511,10512,10513,10514,10515,10516,10517,10518,10519,10520,10521,10522,10523,10524,10525]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10526,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10527,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10528,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10529,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10530,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10531,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10532,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10533,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10534,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10535,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10536,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10537,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10538,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10539,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10540,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10541,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10542,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10543,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10544,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10545,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10546,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10547,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10548,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10549,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10550,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10551,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10552,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10553,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10554,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10528,10529,10530,10531,10532,10533,10534,10535,10536,10537,10538,10539,10540,10541,10542,10543,10544,10545,10546,10547,10548,10549,10550,10551,10552,10553,10554]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10555,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10556,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10557,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10558,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10559,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10560,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10561,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10562,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10563,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10564,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10565,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10566,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10567,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10568,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10569,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10570,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10571,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10572,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10573,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10574,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10575,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10576,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10577,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10578,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10579,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10580,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10581,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10582,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10583,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10557,10558,10559,10560,10561,10562,10563,10564,10565,10566,10567,10568,10569,10570,10571,10572,10573,10574,10575,10576,10577,10578,10579,10580,10581,10582,10583]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10584,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10585,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10586,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10587,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10588,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10589,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10590,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10591,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10592,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10593,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10594,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10595,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10596,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10597,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10598,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10599,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10600,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10601,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10602,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10603,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10604,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10605,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10606,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10607,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10608,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10609,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10610,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10611,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10612,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10586,10587,10588,10589,10590,10591,10592,10593,10594,10595,10596,10597,10598,10599,10600,10601,10602,10603,10604,10605,10606,10607,10608,10609,10610,10611,10612]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10265,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10266,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10267,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10268,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10269,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10270,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10271,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10272,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10273,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10274,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10275,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10276,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10277,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10278,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10279,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10280,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10281,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10282,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10283,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10284,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10285,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10286,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10287,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10288,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10289,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10290,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10291,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10292,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10293,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10267,10268,10269,10270,10271,10272,10273,10274,10275,10276,10277,10278,10279,10280,10281,10282,10283,10284,10285,10286,10287,10288,10289,10290,10291,10292,10293]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[10120,10149,10178,10207,10236,10294,10323,10352,10381,10410,10439,10468,10497,10526,10555,10584,10265]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10613,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10614,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10615,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10620,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10621,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10622,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10623,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10624,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10616,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10617,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10618,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10619,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[10620,10622,10623,10624,10616,10618]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":10625,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10626,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10627,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10628,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10629,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10630,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10631,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":10632,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10633,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10634,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10635,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10634,10635]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10636,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10637,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10638,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10639,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10640,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10641,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10642,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10643,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10644,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10645,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10646,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10647,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10648,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10649,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":10650,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10651,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10652,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10653,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10654,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10655,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10656,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10657,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10658,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10659,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10660,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10661,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10662,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10663,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10662,10663]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10664,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10658,10659,10660,10664]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10665,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10666,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10667,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10668,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10669,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10670,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10670]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10671,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[10667,10668]},{"title":"Methods","children":[10671]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10672,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10673,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10674,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10675,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10676,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10677,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[10675,10676,10677]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10678,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10679,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10680,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10681,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10682,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10683,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10684,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10685,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10686,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[10680,10681,10683,10685]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10687,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10688,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10689,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10690,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10691,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[10690]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10692,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10693,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10694,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10695,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10696,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10697,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10698,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[10694,10696,10697,10698]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10699,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10700,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10701,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":10702,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10703,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10704,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10705,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10706,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[10081,10082,10083,10084,10087,10090,10613,10614,10626,10627,10628,10629,10630,10632,10636,10637,10638,10639,10640,10642,10644,10645,10647,10648,10649,10650,10652,10653,10654,10655,10656,10665,10672,10673,10678,10687,10688,10692,10699,10700,10703,10705]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":9392,"name":"GetRequest","package":"@serenity-js/rest"}}]},{"id":11337,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":11338,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":11339,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14651,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14650,"name":"HTTPRequest.answeredBy"}}],"groups":[{"title":"Methods","children":[9393,11340,11343,11350,11360,10077,11337]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":49,"character":13}],"extendedTypes":[{"type":"reference","target":13332,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/GetRequest","categories":[],"previousId":7422,"nextId":13332},{"id":13332,"name":"HTTPRequest","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"HTTP Request sent by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nusing the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/)"}]},"children":[{"id":14653,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":14654,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":14655,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":14656,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":14657,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":14658,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":14659,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":14660,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":14661,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":14662,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":14663,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":14664,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":14665,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":14666,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14667,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[14667]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":14673,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":14674,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"}},{"id":14650,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":14651,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":14652,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Methods","children":[14653,14656,14663,14673,14650]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":7422,"name":"DeleteRequest"},{"type":"reference","target":9392,"name":"GetRequest"},{"type":"reference","target":11362,"name":"HeadRequest"},{"type":"reference","target":14675,"name":"OptionsRequest"},{"type":"reference","target":16645,"name":"PatchRequest"},{"type":"reference","target":18618,"name":"PostRequest"},{"type":"reference","target":20591,"name":"PutRequest"}],"permalink":"/api/rest/class/HTTPRequest","categories":[],"previousId":9392,"nextId":11362},{"id":11362,"name":"HeadRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP HEAD method requests the headers that are returned if the specified resource\\nwould be requested with an HTTP GET method.\\nSuch a request can be done before deciding to download a large resource to save bandwidth, for example.\\n\\n## File download test\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, HeadRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(HeadRequest.to(\'/downloads/my-test-document.pdf\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Content-Length\'), equals(256)), // assuming we know the size of the document\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD\\n- https://tools.ietf.org/html/rfc7231#section-4.3.2"}]},"children":[{"id":11363,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":47,"character":11}],"signatures":[{"id":11364,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":47,"character":11}],"parameters":[{"id":11365,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":11362,"name":"HeadRequest","package":"@serenity-js/rest"}}]},{"id":13310,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":13311,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":13312,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14654,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14653,"name":"HTTPRequest.describedAs"}},{"id":13313,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":13314,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":13315,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":13316,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":13317,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":13318,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":13319,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14657,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14656,"name":"HTTPRequest.as"}},{"id":13320,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":13321,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":13322,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":13323,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13324,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[13324]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14664,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14663,"name":"HTTPRequest.describedBy"}},{"id":13330,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":13331,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14674,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14673,"name":"HTTPRequest.toString"}},{"id":13307,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":13308,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":13309,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14651,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14650,"name":"HTTPRequest.answeredBy"}},{"id":12047,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":63,"character":4}],"signatures":[{"id":12048,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":63,"character":4}],"parameters":[{"id":12049,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":12050,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12051,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12052,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12053,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12054,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":12055,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":12056,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":12057,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":12058,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":12059,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":12060,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":12061,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12062,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12063,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12064,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12065,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12066,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12067,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12068,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12069,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12070,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12071,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12072,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12073,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12074,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12075,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12076,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12077,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12078,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12079,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12080,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12081,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12082,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12083,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12084,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12085,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12086,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12087,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12088,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12062,12063,12064,12065,12066,12067,12068,12069,12070,12071,12072,12073,12074,12075,12076,12077,12078,12079,12080,12081,12082,12083,12084,12085,12086,12087,12088]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":12089,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12090,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12091,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12092,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12093,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12094,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12095,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12096,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12097,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12098,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12099,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12100,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12101,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12102,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12103,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12104,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12105,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12106,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12107,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12108,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12109,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12110,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12111,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12112,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12113,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12114,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12115,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12116,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12117,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12118,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12092,12093,12094,12095,12096,12097,12098,12099,12100,12101,12102,12103,12104,12105,12106,12107,12108,12109,12110,12111,12112,12113,12114,12115,12116,12117,12118]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":12119,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12120,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12121,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12122,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12123,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12124,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12125,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12126,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12127,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12128,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12129,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12130,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12131,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12132,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12133,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12134,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12135,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12136,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12137,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12138,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12139,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12140,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12141,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12142,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12143,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12144,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12145,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12146,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12147,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12121,12122,12123,12124,12125,12126,12127,12128,12129,12130,12131,12132,12133,12134,12135,12136,12137,12138,12139,12140,12141,12142,12143,12144,12145,12146,12147]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":12148,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12149,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12150,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12151,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12152,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12153,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12154,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12155,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12156,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12157,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12158,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12159,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12160,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12161,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12162,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12163,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12164,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12165,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12166,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12167,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12168,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12169,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12170,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12171,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12172,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12173,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12174,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12175,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12176,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12150,12151,12152,12153,12154,12155,12156,12157,12158,12159,12160,12161,12162,12163,12164,12165,12166,12167,12168,12169,12170,12171,12172,12173,12174,12175,12176]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":12177,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12178,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12179,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12180,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12181,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12182,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12183,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12184,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12185,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12186,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12187,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12188,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12189,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12190,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12191,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12192,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12193,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12194,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12195,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12196,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12197,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12198,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12199,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12200,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12201,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12202,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12203,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12204,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12205,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12179,12180,12181,12182,12183,12184,12185,12186,12187,12188,12189,12190,12191,12192,12193,12194,12195,12196,12197,12198,12199,12200,12201,12202,12203,12204,12205]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":12206,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12207,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12208,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12209,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12210,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12211,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12212,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12213,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12214,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12215,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12216,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12217,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12218,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12219,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12220,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12221,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12222,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12223,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12224,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12225,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12226,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12227,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12228,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12229,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12230,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12231,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12232,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12233,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12234,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12208,12209,12210,12211,12212,12213,12214,12215,12216,12217,12218,12219,12220,12221,12222,12223,12224,12225,12226,12227,12228,12229,12230,12231,12232,12233,12234]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":12264,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12265,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12266,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12267,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12268,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12269,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12270,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12271,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12272,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12273,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12274,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12275,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12276,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12277,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12278,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12279,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12280,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12281,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12282,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12283,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12284,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12285,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12286,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12287,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12288,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12289,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12290,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12291,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12292,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12266,12267,12268,12269,12270,12271,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12284,12285,12286,12287,12288,12289,12290,12291,12292]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12293,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12294,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12295,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12296,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12297,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12298,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12299,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12300,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12301,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12302,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12303,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12304,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12305,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12306,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12307,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12308,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12309,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12310,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12311,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12312,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12313,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12314,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12315,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12316,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12317,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12318,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12319,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12320,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12321,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12295,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,12306,12307,12308,12309,12310,12311,12312,12313,12314,12315,12316,12317,12318,12319,12320,12321]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12322,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12323,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12324,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12325,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12326,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12327,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12328,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12329,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12330,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12331,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12332,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12333,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12334,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12335,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12336,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12337,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12338,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12339,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12340,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12341,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12342,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12343,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12344,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12345,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12346,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12347,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12348,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12349,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12350,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12324,12325,12326,12327,12328,12329,12330,12331,12332,12333,12334,12335,12336,12337,12338,12339,12340,12341,12342,12343,12344,12345,12346,12347,12348,12349,12350]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12351,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12352,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12353,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12354,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12355,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12356,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12357,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12358,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12359,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12360,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12361,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12362,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12363,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12364,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12365,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12366,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12367,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12368,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12369,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12370,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12371,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12372,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12373,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12374,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12375,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12376,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12377,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12378,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12379,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12380,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12381,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12382,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12383,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12384,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12385,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12386,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12387,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12388,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12389,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12390,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12391,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12392,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12393,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12394,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12395,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12396,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12397,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12398,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12399,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12400,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12401,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12402,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12403,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12404,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12405,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12406,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12407,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12408,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12409,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12410,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12411,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12412,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12413,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12414,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12415,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12416,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12417,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12418,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12419,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12420,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12421,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12422,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12423,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12424,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12425,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12426,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12427,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12428,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12429,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12430,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12431,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12432,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12433,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12434,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12435,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12436,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12437,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12436,12437]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12438,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12439,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12440,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12441,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12442,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12443,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12444,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12445,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12446,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12447,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12448,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12449,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12450,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12451,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12452,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12453,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12454,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12455,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12456,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12457,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12458,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12459,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12460,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12461,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12462,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12463,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12464,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12465,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12466,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12440,12441,12442,12443,12444,12445,12446,12447,12448,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12467,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12468,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12469,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12470,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12471,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12472,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12473,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12474,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12475,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12476,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12477,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12478,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12479,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12480,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12481,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12482,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12483,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12484,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12485,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12486,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12487,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12488,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12489,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12490,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12491,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12492,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12493,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12494,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12495,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12496,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12497,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12498,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12499,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12500,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12501,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12502,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12503,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12504,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12505,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12506,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12507,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12508,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12509,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12510,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12511,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12512,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12513,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12514,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12515,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12516,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12517,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12518,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12519,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12520,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12521,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12522,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12523,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12524,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12525,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12526,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12527,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12528,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12529,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12530,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12531,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12532,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12533,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12534,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12535,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12536,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12537,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12538,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12539,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12540,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12541,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12542,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12543,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12544,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12545,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12546,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12547,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12548,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12549,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12550,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12551,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12552,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12553,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12527,12528,12529,12530,12531,12532,12533,12534,12535,12536,12537,12538,12539,12540,12541,12542,12543,12544,12545,12546,12547,12548,12549,12550,12551,12552,12553]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12554,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12555,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12556,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12557,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12558,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12559,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12560,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12561,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12562,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12563,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12564,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12565,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12566,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12567,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12568,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12569,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12570,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12571,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12572,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12573,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12574,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12575,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12576,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12577,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12578,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12579,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12580,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12581,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12582,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12235,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12236,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12237,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12238,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12239,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12240,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12241,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12242,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12243,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12244,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12245,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12246,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12247,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12248,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12249,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12250,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12251,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12252,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12253,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12254,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12255,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12256,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12257,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12258,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12259,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12260,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12261,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12262,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12263,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12237,12238,12239,12240,12241,12242,12243,12244,12245,12246,12247,12248,12249,12250,12251,12252,12253,12254,12255,12256,12257,12258,12259,12260,12261,12262,12263]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[12090,12119,12148,12177,12206,12264,12293,12322,12351,12380,12409,12438,12467,12496,12525,12554,12235]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12583,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":12584,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":12585,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12590,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12591,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12592,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12593,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12594,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12586,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12587,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12588,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12589,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[12590,12592,12593,12594,12586,12588]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":12595,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12596,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":12597,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12598,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12599,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12600,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12601,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":12602,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12603,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12604,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12605,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[12604,12605]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12606,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12607,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12608,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12609,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12610,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12611,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12612,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12613,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12614,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12615,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12616,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12617,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12618,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12619,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":12620,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12621,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12622,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12623,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":12624,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":12625,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":12626,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12627,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12628,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12629,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12630,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12631,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12632,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12633,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[12632,12633]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12634,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[12628,12629,12630,12634]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12635,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12636,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12637,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12638,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12639,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12640,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[12640]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12641,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[12637,12638]},{"title":"Methods","children":[12641]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12642,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12643,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12644,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12645,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12646,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12647,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[12645,12646,12647]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12648,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12649,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12650,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12651,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12652,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12653,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12654,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12655,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12656,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[12650,12651,12653,12655]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12657,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12658,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12659,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12660,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12661,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[12660]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12662,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12663,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12664,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12665,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12666,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12667,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12668,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[12664,12666,12667,12668]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12669,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12670,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":12671,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":12672,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12673,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12674,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12675,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12676,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[12051,12052,12053,12054,12057,12060,12583,12584,12596,12597,12598,12599,12600,12602,12606,12607,12608,12609,12610,12612,12614,12615,12617,12618,12619,12620,12622,12623,12624,12625,12626,12635,12642,12643,12648,12657,12658,12662,12669,12670,12673,12675]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":11362,"name":"HeadRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[11363,13310,13313,13320,13330,13307,12047]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":34,"character":13}],"extendedTypes":[{"type":"reference","target":13332,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/HeadRequest","categories":[],"previousId":13332,"nextId":14675},{"id":14675,"name":"OptionsRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The OPTIONS method requests information about the communication\\noptions available for the target resource, at either the origin\\nserver or an intervening intermediary.  This method allows a client\\nto determine the options and/or requirements associated with a\\nresource, or the capabilities of a server, without implying a\\nresource action.\\n\\n## File download test\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, OptionsRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(OptionsRequest.to(\'/downloads/my-test-document.pdf\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Allow\'), equals(\'OPTIONS, GET, HEAD\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS\\n- https://tools.ietf.org/html/rfc7231#section-4.3.7"}]},"children":[{"id":14676,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":50,"character":11}],"signatures":[{"id":14677,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":50,"character":11}],"parameters":[{"id":14678,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":14675,"name":"OptionsRequest","package":"@serenity-js/rest"}}]},{"id":16623,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":16624,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":16625,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14654,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14653,"name":"HTTPRequest.describedAs"}},{"id":16626,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":16627,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":16628,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":16629,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16630,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":16631,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":16632,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14657,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14656,"name":"HTTPRequest.as"}},{"id":16633,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":16634,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":16635,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16636,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16637,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[16637]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14664,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14663,"name":"HTTPRequest.describedBy"}},{"id":16643,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":16644,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14674,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14673,"name":"HTTPRequest.toString"}},{"id":16620,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":16621,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":16622,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14651,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14650,"name":"HTTPRequest.answeredBy"}},{"id":15360,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":66,"character":4}],"signatures":[{"id":15361,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":66,"character":4}],"parameters":[{"id":15362,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":15363,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15364,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15365,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15366,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15367,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":15368,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":15369,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":15370,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":15371,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":15372,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":15373,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":15374,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15375,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15376,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15377,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15378,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15379,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15380,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15381,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15382,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15383,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15384,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15385,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15386,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15387,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15388,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15389,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15390,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15391,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15392,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15393,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15394,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15395,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15396,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15397,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15398,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15399,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15400,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15401,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15375,15376,15377,15378,15379,15380,15381,15382,15383,15384,15385,15386,15387,15388,15389,15390,15391,15392,15393,15394,15395,15396,15397,15398,15399,15400,15401]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":15402,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15403,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15404,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15405,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15406,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15407,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15408,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15409,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15410,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15411,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15412,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15413,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15414,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15415,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15416,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15417,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15418,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15419,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15420,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15421,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15422,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15423,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15424,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15425,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15426,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15427,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15428,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15429,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15430,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15431,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15405,15406,15407,15408,15409,15410,15411,15412,15413,15414,15415,15416,15417,15418,15419,15420,15421,15422,15423,15424,15425,15426,15427,15428,15429,15430,15431]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":15432,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15433,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15434,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15435,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15436,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15437,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15438,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15439,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15440,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15441,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15442,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15443,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15444,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15445,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15446,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15447,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15448,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15449,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15450,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15451,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15452,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15453,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15454,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15455,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15456,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15457,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15458,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15459,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15460,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15434,15435,15436,15437,15438,15439,15440,15441,15442,15443,15444,15445,15446,15447,15448,15449,15450,15451,15452,15453,15454,15455,15456,15457,15458,15459,15460]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":15461,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15462,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15463,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15464,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15465,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15466,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15467,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15468,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15469,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15470,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15471,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15472,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15473,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15474,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15475,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15476,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15477,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15478,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15479,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15480,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15481,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15482,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15483,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15484,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15485,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15486,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15487,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15488,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15489,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15463,15464,15465,15466,15467,15468,15469,15470,15471,15472,15473,15474,15475,15476,15477,15478,15479,15480,15481,15482,15483,15484,15485,15486,15487,15488,15489]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":15490,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15491,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15492,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15493,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15494,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15495,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15496,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15497,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15498,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15499,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15500,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15501,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15502,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15503,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15504,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15505,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15506,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15507,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15508,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15509,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15510,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15511,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15512,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15513,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15514,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15515,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15516,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15517,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15518,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15492,15493,15494,15495,15496,15497,15498,15499,15500,15501,15502,15503,15504,15505,15506,15507,15508,15509,15510,15511,15512,15513,15514,15515,15516,15517,15518]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":15519,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15520,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15521,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15522,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15523,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15524,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15525,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15526,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15527,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15528,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15529,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15530,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15531,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15532,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15533,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15534,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15535,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15536,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15537,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15538,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15539,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15540,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15541,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15542,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15543,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15544,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15545,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15546,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15547,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15521,15522,15523,15524,15525,15526,15527,15528,15529,15530,15531,15532,15533,15534,15535,15536,15537,15538,15539,15540,15541,15542,15543,15544,15545,15546,15547]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":15577,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15578,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15579,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15580,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15581,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15582,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15583,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15584,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15585,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15586,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15587,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15588,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15589,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15590,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15591,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15592,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15593,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15594,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15595,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15596,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15597,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15598,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15599,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15600,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15601,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15602,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15603,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15604,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15605,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15579,15580,15581,15582,15583,15584,15585,15586,15587,15588,15589,15590,15591,15592,15593,15594,15595,15596,15597,15598,15599,15600,15601,15602,15603,15604,15605]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15606,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15607,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15608,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15609,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15610,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15611,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15612,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15613,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15614,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15615,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15616,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15617,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15618,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15619,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15620,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15621,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15622,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15623,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15624,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15625,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15626,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15627,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15628,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15629,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15630,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15631,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15632,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15633,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15634,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15608,15609,15610,15611,15612,15613,15614,15615,15616,15617,15618,15619,15620,15621,15622,15623,15624,15625,15626,15627,15628,15629,15630,15631,15632,15633,15634]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15635,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15636,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15637,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15638,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15639,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15640,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15641,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15642,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15643,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15644,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15645,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15646,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15647,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15648,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15649,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15650,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15651,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15652,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15653,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15654,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15655,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15656,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15657,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15658,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15659,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15660,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15661,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15662,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15663,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15637,15638,15639,15640,15641,15642,15643,15644,15645,15646,15647,15648,15649,15650,15651,15652,15653,15654,15655,15656,15657,15658,15659,15660,15661,15662,15663]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15664,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15665,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15666,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15667,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15668,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15669,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15670,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15671,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15672,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15673,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15674,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15675,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15676,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15677,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15678,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15679,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15680,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15681,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15682,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15683,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15684,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15685,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15686,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15687,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15688,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15689,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15690,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15691,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15692,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15666,15667,15668,15669,15670,15671,15672,15673,15674,15675,15676,15677,15678,15679,15680,15681,15682,15683,15684,15685,15686,15687,15688,15689,15690,15691,15692]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15693,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15694,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15695,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15696,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15697,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15698,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15699,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15700,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15701,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15702,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15703,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15704,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15705,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15706,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15707,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15708,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15709,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15710,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15711,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15712,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15713,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15714,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15715,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15716,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15717,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15718,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15719,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15720,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15721,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15695,15696,15697,15698,15699,15700,15701,15702,15703,15704,15705,15706,15707,15708,15709,15710,15711,15712,15713,15714,15715,15716,15717,15718,15719,15720,15721]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15722,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15723,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15724,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15725,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15726,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15727,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15728,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15729,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15730,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15731,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15732,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15733,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15734,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15735,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15736,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15737,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15738,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15739,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15740,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15741,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15742,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15743,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15744,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15745,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15746,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15747,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15748,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15749,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15750,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15724,15725,15726,15727,15728,15729,15730,15731,15732,15733,15734,15735,15736,15737,15738,15739,15740,15741,15742,15743,15744,15745,15746,15747,15748,15749,15750]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15751,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15752,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15753,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15754,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15755,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15756,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15757,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15758,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15759,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15760,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15761,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15762,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15763,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15764,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15765,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15766,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15767,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15768,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15769,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15770,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15771,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15772,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15773,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15774,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15775,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15776,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15777,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15778,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15779,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15753,15754,15755,15756,15757,15758,15759,15760,15761,15762,15763,15764,15765,15766,15767,15768,15769,15770,15771,15772,15773,15774,15775,15776,15777,15778,15779]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15780,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15781,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15782,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15783,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15784,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15785,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15786,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15787,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15788,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15789,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15790,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15791,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15792,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15793,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15794,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15795,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15796,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15797,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15798,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15799,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15800,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15801,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15802,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15803,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15804,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15805,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15806,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15807,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15808,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15782,15783,15784,15785,15786,15787,15788,15789,15790,15791,15792,15793,15794,15795,15796,15797,15798,15799,15800,15801,15802,15803,15804,15805,15806,15807,15808]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15809,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15810,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15811,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15812,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15813,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15814,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15815,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15816,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15817,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15818,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15819,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15820,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15821,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15822,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15823,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15824,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15825,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15826,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15827,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15828,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15829,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15830,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15831,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15832,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15833,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15834,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15835,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15836,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15837,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15811,15812,15813,15814,15815,15816,15817,15818,15819,15820,15821,15822,15823,15824,15825,15826,15827,15828,15829,15830,15831,15832,15833,15834,15835,15836,15837]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15838,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15839,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15840,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15841,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15842,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15843,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15844,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15845,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15846,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15847,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15848,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15849,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15850,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15851,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15852,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15853,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15854,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15855,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15856,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15857,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15858,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15859,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15860,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15861,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15862,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15863,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15864,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15865,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15866,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15840,15841,15842,15843,15844,15845,15846,15847,15848,15849,15850,15851,15852,15853,15854,15855,15856,15857,15858,15859,15860,15861,15862,15863,15864,15865,15866]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15867,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15868,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15869,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15870,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15871,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15872,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15873,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15874,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15875,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15876,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15877,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15878,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15879,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15880,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15881,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15882,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15883,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15884,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15885,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15886,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15887,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15888,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15889,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15890,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15891,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15892,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15893,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15894,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15895,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15869,15870,15871,15872,15873,15874,15875,15876,15877,15878,15879,15880,15881,15882,15883,15884,15885,15886,15887,15888,15889,15890,15891,15892,15893,15894,15895]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15548,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15549,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15550,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15551,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15552,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15553,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15554,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15555,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15556,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15557,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15558,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15559,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15560,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15561,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15562,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15563,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15564,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15565,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15566,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15567,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15568,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15569,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15570,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15571,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15572,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15573,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15574,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15575,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15576,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15550,15551,15552,15553,15554,15555,15556,15557,15558,15559,15560,15561,15562,15563,15564,15565,15566,15567,15568,15569,15570,15571,15572,15573,15574,15575,15576]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[15403,15432,15461,15490,15519,15577,15606,15635,15664,15693,15722,15751,15780,15809,15838,15867,15548]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15896,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15897,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":15898,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15903,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15904,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15905,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15906,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15907,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15899,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15900,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15901,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15902,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[15903,15905,15906,15907,15899,15901]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":15908,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15909,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15910,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15911,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15912,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15913,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15914,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":15915,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15916,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15917,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15918,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15917,15918]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15919,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15920,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15921,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15922,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15923,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15924,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15925,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15926,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15927,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15928,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15929,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15930,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15931,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15932,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":15933,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15934,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15935,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15936,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15937,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15938,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15939,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15940,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15941,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15942,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15943,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15944,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15945,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15946,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15945,15946]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15947,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15941,15942,15943,15947]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15948,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15949,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15950,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15951,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15952,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15953,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15953]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15954,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[15950,15951]},{"title":"Methods","children":[15954]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15955,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15956,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15957,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15958,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15959,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15960,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[15958,15959,15960]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15961,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15962,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15963,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15964,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15965,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15966,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15967,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15968,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15969,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[15963,15964,15966,15968]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15970,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15971,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15972,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15973,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15974,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[15973]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15975,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15976,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15977,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15978,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15979,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15980,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15981,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[15977,15979,15980,15981]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15982,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15983,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":15984,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":15985,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15986,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15987,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15988,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15989,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[15364,15365,15366,15367,15370,15373,15896,15897,15909,15910,15911,15912,15913,15915,15919,15920,15921,15922,15923,15925,15927,15928,15930,15931,15932,15933,15935,15936,15937,15938,15939,15948,15955,15956,15961,15970,15971,15975,15982,15983,15986,15988]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":14675,"name":"OptionsRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[14676,16623,16626,16633,16643,16620,15360]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":37,"character":13}],"extendedTypes":[{"type":"reference","target":13332,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/OptionsRequest","categories":[],"previousId":11362,"nextId":16645},{"id":16645,"name":"PatchRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The PATCH method requests that a set of changes described in the\\nrequest entity be applied to the resource identified by the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\n## Add new resource to a collection\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PatchRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PatchRequest.to(\'/books/0-688-00230-7\').with({\\n      lastReadOn: \'2016-06-16\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(204)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH\\n- https://tools.ietf.org/html/rfc5789"}]},"children":[{"id":16646,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":47,"character":11}],"signatures":[{"id":16647,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":47,"character":11}],"parameters":[{"id":16648,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":16645,"name":"PatchRequest","package":"@serenity-js/rest"}}]},{"id":18596,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":18597,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":18598,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14654,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14653,"name":"HTTPRequest.describedAs"}},{"id":18599,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":18600,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":18601,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":18602,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18603,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":18604,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":18605,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14657,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14656,"name":"HTTPRequest.as"}},{"id":18606,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":18607,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":18608,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18609,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18610,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[18610]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14664,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14663,"name":"HTTPRequest.describedBy"}},{"id":18616,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":18617,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14674,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14673,"name":"HTTPRequest.toString"}},{"id":18593,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":18594,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":18595,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14651,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14650,"name":"HTTPRequest.answeredBy"}},{"id":17330,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":57,"character":4}],"signatures":[{"id":17331,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":57,"character":4}],"parameters":[{"id":17332,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":16645,"name":"PatchRequest","package":"@serenity-js/rest"}}]},{"id":17333,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":73,"character":4}],"signatures":[{"id":17334,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":73,"character":4}],"parameters":[{"id":17335,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":17336,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17337,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17338,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17339,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17340,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":17341,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":17342,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":17343,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":17344,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":17345,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":17346,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":17347,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17348,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17349,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17350,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17351,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17352,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17353,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17354,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17355,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17356,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17357,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17358,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17359,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17360,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17361,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17362,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17363,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17364,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17365,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17366,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17367,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17368,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17369,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17370,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17371,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17372,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17373,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17374,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17348,17349,17350,17351,17352,17353,17354,17355,17356,17357,17358,17359,17360,17361,17362,17363,17364,17365,17366,17367,17368,17369,17370,17371,17372,17373,17374]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":17375,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17376,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17377,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17378,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17379,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17380,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17381,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17382,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17383,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17384,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17385,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17386,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17387,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17388,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17389,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17390,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17391,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17392,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17393,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17394,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17395,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17396,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17397,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17398,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17399,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17400,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17401,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17402,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17403,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17404,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17378,17379,17380,17381,17382,17383,17384,17385,17386,17387,17388,17389,17390,17391,17392,17393,17394,17395,17396,17397,17398,17399,17400,17401,17402,17403,17404]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":17405,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17406,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17407,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17408,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17409,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17410,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17411,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17412,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17413,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17414,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17415,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17416,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17417,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17418,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17419,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17420,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17421,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17422,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17423,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17424,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17425,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17426,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17427,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17428,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17429,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17430,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17431,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17432,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17433,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17407,17408,17409,17410,17411,17412,17413,17414,17415,17416,17417,17418,17419,17420,17421,17422,17423,17424,17425,17426,17427,17428,17429,17430,17431,17432,17433]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":17434,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17435,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17436,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17437,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17438,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17439,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17440,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17441,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17442,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17443,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17444,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17445,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17446,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17447,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17448,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17449,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17450,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17451,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17452,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17453,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17454,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17455,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17456,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17457,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17458,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17459,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17460,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17461,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17462,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17436,17437,17438,17439,17440,17441,17442,17443,17444,17445,17446,17447,17448,17449,17450,17451,17452,17453,17454,17455,17456,17457,17458,17459,17460,17461,17462]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":17463,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17464,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17465,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17466,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17467,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17468,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17469,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17470,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17471,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17472,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17473,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17474,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17475,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17476,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17477,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17478,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17479,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17480,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17481,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17482,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17483,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17484,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17485,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17486,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17487,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17488,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17489,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17490,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17491,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17465,17466,17467,17468,17469,17470,17471,17472,17473,17474,17475,17476,17477,17478,17479,17480,17481,17482,17483,17484,17485,17486,17487,17488,17489,17490,17491]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":17492,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17493,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17494,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17495,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17496,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17497,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17498,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17499,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17500,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17501,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17502,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17503,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17504,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17505,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17506,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17507,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17508,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17509,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17510,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17511,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17512,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17513,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17514,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17515,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17516,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17517,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17518,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17519,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17520,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17494,17495,17496,17497,17498,17499,17500,17501,17502,17503,17504,17505,17506,17507,17508,17509,17510,17511,17512,17513,17514,17515,17516,17517,17518,17519,17520]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":17550,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17551,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17552,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17553,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17554,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17555,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17556,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17557,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17558,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17559,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17560,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17561,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17562,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17563,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17564,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17565,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17566,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17567,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17568,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17569,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17570,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17571,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17572,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17573,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17574,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17575,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17576,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17577,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17578,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17552,17553,17554,17555,17556,17557,17558,17559,17560,17561,17562,17563,17564,17565,17566,17567,17568,17569,17570,17571,17572,17573,17574,17575,17576,17577,17578]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17579,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17580,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17581,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17582,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17583,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17584,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17585,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17586,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17587,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17588,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17589,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17590,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17591,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17592,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17593,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17594,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17595,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17596,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17597,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17598,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17599,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17600,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17601,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17602,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17603,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17604,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17605,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17606,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17607,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17581,17582,17583,17584,17585,17586,17587,17588,17589,17590,17591,17592,17593,17594,17595,17596,17597,17598,17599,17600,17601,17602,17603,17604,17605,17606,17607]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17608,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17609,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17610,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17611,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17612,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17613,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17614,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17615,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17616,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17617,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17618,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17619,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17620,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17621,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17622,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17623,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17624,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17625,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17626,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17627,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17628,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17629,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17630,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17631,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17632,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17633,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17634,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17635,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17636,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17610,17611,17612,17613,17614,17615,17616,17617,17618,17619,17620,17621,17622,17623,17624,17625,17626,17627,17628,17629,17630,17631,17632,17633,17634,17635,17636]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17637,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17638,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17639,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17640,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17641,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17642,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17643,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17644,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17645,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17646,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17647,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17648,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17649,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17650,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17651,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17652,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17653,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17654,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17655,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17656,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17657,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17658,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17659,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17660,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17661,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17662,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17663,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17664,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17665,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17639,17640,17641,17642,17643,17644,17645,17646,17647,17648,17649,17650,17651,17652,17653,17654,17655,17656,17657,17658,17659,17660,17661,17662,17663,17664,17665]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17666,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17667,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17668,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17669,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17670,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17671,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17672,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17673,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17674,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17675,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17676,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17677,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17678,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17679,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17680,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17681,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17682,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17683,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17684,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17685,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17686,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17687,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17688,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17689,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17690,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17691,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17692,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17693,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17694,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17668,17669,17670,17671,17672,17673,17674,17675,17676,17677,17678,17679,17680,17681,17682,17683,17684,17685,17686,17687,17688,17689,17690,17691,17692,17693,17694]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17695,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17696,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17697,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17698,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17699,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17700,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17701,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17702,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17703,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17704,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17705,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17706,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17707,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17708,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17709,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17710,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17711,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17712,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17713,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17714,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17715,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17716,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17717,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17718,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17719,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17720,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17721,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17722,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17723,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17697,17698,17699,17700,17701,17702,17703,17704,17705,17706,17707,17708,17709,17710,17711,17712,17713,17714,17715,17716,17717,17718,17719,17720,17721,17722,17723]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17724,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17725,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17726,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17727,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17728,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17729,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17730,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17731,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17732,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17733,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17734,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17735,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17736,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17737,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17738,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17739,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17740,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17741,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17742,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17743,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17744,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17745,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17746,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17747,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17748,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17749,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17750,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17751,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17752,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17726,17727,17728,17729,17730,17731,17732,17733,17734,17735,17736,17737,17738,17739,17740,17741,17742,17743,17744,17745,17746,17747,17748,17749,17750,17751,17752]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17753,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17754,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17755,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17756,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17757,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17758,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17759,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17760,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17761,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17762,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17763,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17764,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17765,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17766,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17767,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17768,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17769,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17770,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17771,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17772,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17773,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17774,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17775,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17776,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17777,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17778,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17779,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17780,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17781,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17755,17756,17757,17758,17759,17760,17761,17762,17763,17764,17765,17766,17767,17768,17769,17770,17771,17772,17773,17774,17775,17776,17777,17778,17779,17780,17781]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17782,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17783,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17784,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17785,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17786,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17787,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17788,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17789,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17790,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17791,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17792,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17793,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17794,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17795,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17796,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17797,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17798,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17799,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17800,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17801,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17802,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17803,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17804,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17805,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17806,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17807,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17808,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17809,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17810,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17784,17785,17786,17787,17788,17789,17790,17791,17792,17793,17794,17795,17796,17797,17798,17799,17800,17801,17802,17803,17804,17805,17806,17807,17808,17809,17810]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17811,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17812,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17813,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17814,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17815,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17816,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17817,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17818,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17819,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17820,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17821,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17822,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17823,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17824,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17825,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17826,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17827,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17828,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17829,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17830,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17831,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17832,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17833,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17834,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17835,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17836,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17837,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17838,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17839,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17813,17814,17815,17816,17817,17818,17819,17820,17821,17822,17823,17824,17825,17826,17827,17828,17829,17830,17831,17832,17833,17834,17835,17836,17837,17838,17839]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17840,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17841,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17842,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17843,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17844,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17845,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17846,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17847,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17848,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17849,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17850,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17851,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17852,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17853,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17854,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17855,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17856,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17857,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17858,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17859,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17860,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17861,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17862,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17863,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17864,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17865,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17866,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17867,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17868,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17842,17843,17844,17845,17846,17847,17848,17849,17850,17851,17852,17853,17854,17855,17856,17857,17858,17859,17860,17861,17862,17863,17864,17865,17866,17867,17868]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17521,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17522,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17523,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17524,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17525,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17526,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17527,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17528,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17529,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17530,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17531,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17532,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17533,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17534,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17535,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17536,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17537,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17538,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17539,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17540,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17541,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17542,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17543,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17544,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17545,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17546,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17547,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17548,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17549,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17523,17524,17525,17526,17527,17528,17529,17530,17531,17532,17533,17534,17535,17536,17537,17538,17539,17540,17541,17542,17543,17544,17545,17546,17547,17548,17549]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[17376,17405,17434,17463,17492,17550,17579,17608,17637,17666,17695,17724,17753,17782,17811,17840,17521]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17869,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17870,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":17871,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17876,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17877,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17878,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17879,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17880,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17872,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17873,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17874,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17875,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[17876,17878,17879,17880,17872,17874]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":17881,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17882,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17883,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17884,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17885,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17886,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17887,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":17888,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17889,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17890,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17891,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17890,17891]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17892,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17893,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17894,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17895,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17896,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17897,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17898,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17899,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17900,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17901,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17902,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17903,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17904,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17905,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":17906,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17907,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17908,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17909,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17910,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17911,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17912,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17913,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17914,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17915,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17916,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17917,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17918,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17919,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17918,17919]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17920,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17914,17915,17916,17920]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17921,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17922,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17923,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17924,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17925,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17926,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17926]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17927,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[17923,17924]},{"title":"Methods","children":[17927]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17928,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17929,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17930,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17931,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17932,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17933,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[17931,17932,17933]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17934,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17935,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17936,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17937,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17938,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17939,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17940,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17941,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17942,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[17936,17937,17939,17941]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17943,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17944,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17945,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17946,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17947,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[17946]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17948,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17949,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17950,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17951,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17952,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17953,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17954,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[17950,17952,17953,17954]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17955,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17956,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":17957,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":17958,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17959,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17960,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17961,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17962,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[17337,17338,17339,17340,17343,17346,17869,17870,17882,17883,17884,17885,17886,17888,17892,17893,17894,17895,17896,17898,17900,17901,17903,17904,17905,17906,17908,17909,17910,17911,17912,17921,17928,17929,17934,17943,17944,17948,17955,17956,17959,17961]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":16645,"name":"PatchRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[16646,18596,18599,18606,18616,18593,17330,17333]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":34,"character":13}],"extendedTypes":[{"type":"reference","target":13332,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PatchRequest","categories":[],"previousId":14675,"nextId":18618},{"id":18618,"name":"PostRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP POST method requests that the origin server accepts\\nthe entity enclosed in the request as a new subordinate of the resource\\nidentified by the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\nThis means that the POST should be used when you want to create a child resource under\\na collection of resources.\\n\\nPOST request is neither [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe),\\nnor [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\\nThis means that if you retry a POST request N times,\\na correctly implemented HTTP REST API will create N resources with N different URIs.\\n\\n## Add new resource to a collection\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PostRequest.to(\'/books\').with({\\n      isbn: \'0-688-00230-7\',\\n      title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n      author: \'Robert M. Pirsig\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(201)),\\n    Ensure.that(LastResponse.header(\'Location\'), equals(\'/books/0-688-00230-7\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Submit an HTML form\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { stringify } from \'querystring\'\\n\\nconst formData = stringify({\\n    name: actor.name,\\n    email: `${ actor.name }@example.com`,\\n    text: \'Your website is great! Learnt a lot :-)\'\\n});\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PostRequest.to(\'/feedback\').with(formData).using({\\n      headers: {\\n        \'Content-Type\': \'application/x-www-form-urlencoded\',\\n        \'Content-Length\': formData.length\\n      }\\n    })),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Location\'), equals(\'/feedback/thank-you.html\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST\\n- https://tools.ietf.org/html/rfc7231#section-4.3.3"}]},"children":[{"id":18619,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":87,"character":11}],"signatures":[{"id":18620,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":87,"character":11}],"parameters":[{"id":18621,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":18618,"name":"PostRequest","package":"@serenity-js/rest"}}]},{"id":20569,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":20570,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":20571,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14654,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14653,"name":"HTTPRequest.describedAs"}},{"id":20572,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":20573,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":20574,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":20575,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":20576,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":20577,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":20578,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14657,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14656,"name":"HTTPRequest.as"}},{"id":20579,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":20580,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":20581,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20582,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20583,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[20583]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14664,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14663,"name":"HTTPRequest.describedBy"}},{"id":20589,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":20590,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14674,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14673,"name":"HTTPRequest.toString"}},{"id":20566,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":20567,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":20568,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14651,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14650,"name":"HTTPRequest.answeredBy"}},{"id":19303,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":97,"character":4}],"signatures":[{"id":19304,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":97,"character":4}],"parameters":[{"id":19305,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":18618,"name":"PostRequest","package":"@serenity-js/rest"}}]},{"id":19306,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":113,"character":4}],"signatures":[{"id":19307,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":113,"character":4}],"parameters":[{"id":19308,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":19309,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19310,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19311,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19312,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19313,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19314,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":19315,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":19316,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19317,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":19318,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":19319,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19320,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19321,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19322,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19323,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19324,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19325,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19326,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19327,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19328,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19329,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19330,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19331,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19332,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19333,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19334,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19335,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19336,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19337,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19338,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19339,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19340,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19341,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19342,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19343,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19344,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19345,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19346,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19347,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19321,19322,19323,19324,19325,19326,19327,19328,19329,19330,19331,19332,19333,19334,19335,19336,19337,19338,19339,19340,19341,19342,19343,19344,19345,19346,19347]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":19348,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19349,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19350,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19351,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19352,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19353,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19354,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19355,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19356,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19357,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19358,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19359,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19360,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19361,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19362,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19363,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19364,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19365,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19366,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19367,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19368,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19369,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19370,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19371,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19372,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19373,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19374,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19375,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19376,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19377,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19351,19352,19353,19354,19355,19356,19357,19358,19359,19360,19361,19362,19363,19364,19365,19366,19367,19368,19369,19370,19371,19372,19373,19374,19375,19376,19377]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":19378,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19379,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19380,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19381,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19382,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19383,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19384,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19385,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19386,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19387,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19388,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19389,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19390,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19391,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19392,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19393,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19394,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19395,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19396,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19397,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19398,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19399,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19400,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19401,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19402,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19403,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19404,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19405,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19406,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19380,19381,19382,19383,19384,19385,19386,19387,19388,19389,19390,19391,19392,19393,19394,19395,19396,19397,19398,19399,19400,19401,19402,19403,19404,19405,19406]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":19407,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19408,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19409,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19410,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19411,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19412,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19413,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19414,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19415,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19416,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19417,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19418,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19419,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19420,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19421,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19422,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19423,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19424,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19425,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19426,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19427,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19428,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19429,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19430,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19431,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19432,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19433,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19434,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19435,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19409,19410,19411,19412,19413,19414,19415,19416,19417,19418,19419,19420,19421,19422,19423,19424,19425,19426,19427,19428,19429,19430,19431,19432,19433,19434,19435]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":19436,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19437,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19438,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19439,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19440,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19441,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19442,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19443,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19444,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19445,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19446,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19447,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19448,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19449,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19450,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19451,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19452,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19453,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19454,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19455,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19456,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19457,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19458,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19459,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19460,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19461,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19462,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19463,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19464,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19438,19439,19440,19441,19442,19443,19444,19445,19446,19447,19448,19449,19450,19451,19452,19453,19454,19455,19456,19457,19458,19459,19460,19461,19462,19463,19464]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":19465,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19466,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19467,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19468,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19469,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19470,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19471,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19472,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19473,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19474,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19475,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19476,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19477,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19478,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19479,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19480,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19481,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19482,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19483,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19484,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19485,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19486,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19487,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19488,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19489,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19490,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19491,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19492,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19493,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19467,19468,19469,19470,19471,19472,19473,19474,19475,19476,19477,19478,19479,19480,19481,19482,19483,19484,19485,19486,19487,19488,19489,19490,19491,19492,19493]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":19523,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19524,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19525,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19526,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19527,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19528,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19529,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19530,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19531,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19532,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19533,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19534,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19535,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19536,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19537,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19538,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19539,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19540,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19541,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19542,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19543,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19544,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19545,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19546,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19547,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19548,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19549,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19550,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19551,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19525,19526,19527,19528,19529,19530,19531,19532,19533,19534,19535,19536,19537,19538,19539,19540,19541,19542,19543,19544,19545,19546,19547,19548,19549,19550,19551]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19552,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19553,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19554,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19555,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19556,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19557,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19558,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19559,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19560,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19561,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19562,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19563,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19564,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19565,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19566,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19567,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19568,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19569,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19570,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19571,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19572,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19573,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19574,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19575,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19576,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19577,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19578,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19579,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19580,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19554,19555,19556,19557,19558,19559,19560,19561,19562,19563,19564,19565,19566,19567,19568,19569,19570,19571,19572,19573,19574,19575,19576,19577,19578,19579,19580]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19581,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19582,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19583,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19584,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19585,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19586,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19587,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19588,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19589,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19590,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19591,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19592,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19593,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19594,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19595,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19596,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19597,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19598,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19599,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19600,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19601,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19602,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19603,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19604,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19605,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19606,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19607,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19608,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19609,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19583,19584,19585,19586,19587,19588,19589,19590,19591,19592,19593,19594,19595,19596,19597,19598,19599,19600,19601,19602,19603,19604,19605,19606,19607,19608,19609]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19610,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19611,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19612,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19613,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19614,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19615,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19616,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19617,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19618,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19619,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19620,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19621,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19622,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19623,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19624,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19625,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19626,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19627,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19628,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19629,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19630,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19631,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19632,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19633,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19634,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19635,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19636,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19637,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19638,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19612,19613,19614,19615,19616,19617,19618,19619,19620,19621,19622,19623,19624,19625,19626,19627,19628,19629,19630,19631,19632,19633,19634,19635,19636,19637,19638]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19639,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19640,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19641,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19642,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19643,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19644,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19645,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19646,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19647,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19648,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19649,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19650,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19651,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19652,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19653,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19654,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19655,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19656,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19657,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19658,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19659,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19660,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19661,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19662,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19663,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19664,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19665,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19666,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19667,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19641,19642,19643,19644,19645,19646,19647,19648,19649,19650,19651,19652,19653,19654,19655,19656,19657,19658,19659,19660,19661,19662,19663,19664,19665,19666,19667]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19668,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19669,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19670,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19671,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19672,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19673,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19674,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19675,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19676,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19677,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19678,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19679,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19680,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19681,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19682,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19683,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19684,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19685,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19686,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19687,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19688,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19689,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19690,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19691,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19692,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19693,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19694,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19695,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19696,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19670,19671,19672,19673,19674,19675,19676,19677,19678,19679,19680,19681,19682,19683,19684,19685,19686,19687,19688,19689,19690,19691,19692,19693,19694,19695,19696]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19697,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19698,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19699,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19700,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19701,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19702,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19703,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19704,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19705,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19706,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19707,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19708,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19709,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19710,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19711,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19712,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19713,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19714,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19715,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19716,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19717,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19718,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19719,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19720,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19721,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19722,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19723,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19724,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19725,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19699,19700,19701,19702,19703,19704,19705,19706,19707,19708,19709,19710,19711,19712,19713,19714,19715,19716,19717,19718,19719,19720,19721,19722,19723,19724,19725]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19726,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19727,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19728,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19729,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19730,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19731,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19732,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19733,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19734,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19735,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19736,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19737,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19738,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19739,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19740,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19741,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19742,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19743,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19744,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19745,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19746,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19747,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19748,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19749,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19750,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19751,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19752,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19753,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19754,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19728,19729,19730,19731,19732,19733,19734,19735,19736,19737,19738,19739,19740,19741,19742,19743,19744,19745,19746,19747,19748,19749,19750,19751,19752,19753,19754]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19755,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19756,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19757,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19758,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19759,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19760,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19761,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19762,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19763,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19764,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19765,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19766,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19767,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19768,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19769,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19770,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19771,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19772,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19773,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19774,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19775,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19776,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19777,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19778,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19779,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19780,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19781,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19782,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19783,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19757,19758,19759,19760,19761,19762,19763,19764,19765,19766,19767,19768,19769,19770,19771,19772,19773,19774,19775,19776,19777,19778,19779,19780,19781,19782,19783]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19784,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19785,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19786,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19787,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19788,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19789,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19790,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19791,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19792,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19793,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19794,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19795,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19796,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19797,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19798,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19799,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19800,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19801,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19802,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19803,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19804,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19805,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19806,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19807,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19808,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19809,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19810,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19811,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19812,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19786,19787,19788,19789,19790,19791,19792,19793,19794,19795,19796,19797,19798,19799,19800,19801,19802,19803,19804,19805,19806,19807,19808,19809,19810,19811,19812]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19813,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19814,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19815,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19816,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19817,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19818,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19819,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19820,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19821,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19822,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19823,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19824,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19825,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19826,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19827,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19828,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19829,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19830,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19831,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19832,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19833,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19834,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19835,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19836,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19837,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19838,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19839,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19840,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19841,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19815,19816,19817,19818,19819,19820,19821,19822,19823,19824,19825,19826,19827,19828,19829,19830,19831,19832,19833,19834,19835,19836,19837,19838,19839,19840,19841]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19494,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19495,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19496,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19497,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19498,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19499,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19500,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19501,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19502,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19503,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19504,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19505,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19506,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19507,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19508,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19509,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19510,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19511,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19512,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19513,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19514,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19515,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19516,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19517,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19518,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19519,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19520,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19521,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19522,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19496,19497,19498,19499,19500,19501,19502,19503,19504,19505,19506,19507,19508,19509,19510,19511,19512,19513,19514,19515,19516,19517,19518,19519,19520,19521,19522]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[19349,19378,19407,19436,19465,19523,19552,19581,19610,19639,19668,19697,19726,19755,19784,19813,19494]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19842,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19843,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19844,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19849,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19850,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19851,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19852,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19853,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19845,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19846,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19847,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19848,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19849,19851,19852,19853,19845,19847]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":19854,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19855,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19856,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19857,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19858,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19859,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19860,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":19861,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19862,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19863,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19864,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19863,19864]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19865,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19866,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19867,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19868,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19869,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19870,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19871,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19872,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19873,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19874,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19875,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19876,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19877,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19878,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":19879,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19880,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19881,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19882,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19883,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19884,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19885,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19886,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19887,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19888,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19889,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19890,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19891,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19892,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19891,19892]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19893,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19887,19888,19889,19893]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19894,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19895,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19896,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19897,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19898,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19899,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19899]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19900,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[19896,19897]},{"title":"Methods","children":[19900]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19901,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19902,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19903,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19904,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19905,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19906,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[19904,19905,19906]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19907,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19908,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19909,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19910,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19911,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19912,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19913,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19914,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19915,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19909,19910,19912,19914]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19916,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19917,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19918,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19919,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19920,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19919]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19921,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19922,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19923,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19924,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19925,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19926,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19927,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[19923,19925,19926,19927]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19928,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19929,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19930,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":19931,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19932,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19933,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19934,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19935,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19310,19311,19312,19313,19316,19319,19842,19843,19855,19856,19857,19858,19859,19861,19865,19866,19867,19868,19869,19871,19873,19874,19876,19877,19878,19879,19881,19882,19883,19884,19885,19894,19901,19902,19907,19916,19917,19921,19928,19929,19932,19934]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":18618,"name":"PostRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[18619,20569,20572,20579,20589,20566,19303,19306]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":74,"character":13}],"extendedTypes":[{"type":"reference","target":13332,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PostRequest","categories":[],"previousId":16645,"nextId":20591},{"id":20591,"name":"PutRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The PUT method requests that the state of the target resource be\\ncreated or replaced with the state defined by the representation\\nenclosed in the request message payload.\\n\\nPUT request should be used when you want to create\\na new resource at a known "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" (e.g. "},{"kind":"code","text":"`/books/0-688-00230-7`"},{"kind":"text","text":")\\nor replace an existing resource at such "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\nPUT request is [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent):\\ncalling it once or several times successively has the same effect (that is no _side effect_).\\n\\n## Create a new resource at a known location\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { CallAnApi, LastResponse, PutRequest, Send } from \'@serenity-js/rest\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PutRequest.to(\'/books/0-688-00230-7\').with({\\n      isbn: \'0-688-00230-7\',\\n      title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n      author: \'Robert M. Pirsig\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(201)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT\\n- https://tools.ietf.org/html/rfc7231#section-4.3.4"}]},"children":[{"id":20592,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":57,"character":11}],"signatures":[{"id":20593,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":57,"character":11}],"parameters":[{"id":20594,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":20591,"name":"PutRequest","package":"@serenity-js/rest"}}]},{"id":22542,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":22543,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":22544,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14654,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14653,"name":"HTTPRequest.describedAs"}},{"id":22545,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":22546,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":22547,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":22548,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22549,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":22550,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":22551,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14657,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14656,"name":"HTTPRequest.as"}},{"id":22552,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":22553,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":22554,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22555,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22556,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[22556]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14664,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14663,"name":"HTTPRequest.describedBy"}},{"id":22562,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":22563,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14674,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14673,"name":"HTTPRequest.toString"}},{"id":22539,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":22540,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":22541,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14651,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14650,"name":"HTTPRequest.answeredBy"}},{"id":21276,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":67,"character":4}],"signatures":[{"id":21277,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":67,"character":4}],"parameters":[{"id":21278,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":20591,"name":"PutRequest","package":"@serenity-js/rest"}}]},{"id":21279,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":83,"character":4}],"signatures":[{"id":21280,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":83,"character":4}],"parameters":[{"id":21281,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":21282,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21283,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21284,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21285,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21286,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21287,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":21288,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":21289,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21290,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":21291,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":21292,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21293,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21294,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21295,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21296,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21297,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21298,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21299,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21300,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21301,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21302,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21303,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21304,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21305,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21306,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21307,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21308,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21309,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21310,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21311,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21312,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21313,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21314,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21315,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21316,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21317,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21318,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21319,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21320,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21294,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21305,21306,21307,21308,21309,21310,21311,21312,21313,21314,21315,21316,21317,21318,21319,21320]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":21321,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21322,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21323,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21324,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21325,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21326,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21327,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21328,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21329,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21330,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21331,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21332,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21333,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21334,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21335,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21336,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21337,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21338,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21339,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21340,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21341,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21342,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21343,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21344,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21345,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21346,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21347,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21348,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21349,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21350,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21324,21325,21326,21327,21328,21329,21330,21331,21332,21333,21334,21335,21336,21337,21338,21339,21340,21341,21342,21343,21344,21345,21346,21347,21348,21349,21350]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":21351,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21352,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21353,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21354,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21355,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21356,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21357,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21358,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21359,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21360,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21361,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21362,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21363,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21364,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21365,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21366,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21367,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21368,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21369,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21370,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21371,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21372,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21373,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21374,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21375,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21376,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21377,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21378,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21379,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21353,21354,21355,21356,21357,21358,21359,21360,21361,21362,21363,21364,21365,21366,21367,21368,21369,21370,21371,21372,21373,21374,21375,21376,21377,21378,21379]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":21380,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21381,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21382,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21383,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21384,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21385,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21386,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21387,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21388,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21389,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21390,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21391,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21392,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21393,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21394,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21395,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21396,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21397,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21398,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21399,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21400,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21401,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21402,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21403,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21404,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21405,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21406,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21407,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21408,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21382,21383,21384,21385,21386,21387,21388,21389,21390,21391,21392,21393,21394,21395,21396,21397,21398,21399,21400,21401,21402,21403,21404,21405,21406,21407,21408]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":21409,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21410,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21411,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21412,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21413,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21414,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21415,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21416,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21417,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21418,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21419,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21420,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21421,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21422,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21423,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21424,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21425,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21426,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21427,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21428,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21429,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21430,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21431,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21432,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21433,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21434,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21435,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21436,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21437,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21411,21412,21413,21414,21415,21416,21417,21418,21419,21420,21421,21422,21423,21424,21425,21426,21427,21428,21429,21430,21431,21432,21433,21434,21435,21436,21437]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":21438,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21439,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21440,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21441,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21442,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21443,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21444,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21445,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21446,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21447,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21448,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21449,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21450,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21451,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21452,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21453,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21454,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21455,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21456,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21457,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21458,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21459,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21460,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21461,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21462,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21463,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21464,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21465,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21466,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21440,21441,21442,21443,21444,21445,21446,21447,21448,21449,21450,21451,21452,21453,21454,21455,21456,21457,21458,21459,21460,21461,21462,21463,21464,21465,21466]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":21496,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21497,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21498,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21499,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21500,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21501,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21502,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21503,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21504,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21505,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21506,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21507,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21508,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21509,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21510,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21511,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21512,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21513,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21514,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21515,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21516,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21517,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21518,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21519,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21520,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21521,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21522,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21523,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21524,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21498,21499,21500,21501,21502,21503,21504,21505,21506,21507,21508,21509,21510,21511,21512,21513,21514,21515,21516,21517,21518,21519,21520,21521,21522,21523,21524]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21525,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21526,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21527,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21528,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21529,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21530,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21531,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21532,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21533,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21534,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21535,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21536,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21537,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21538,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21539,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21540,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21541,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21542,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21543,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21544,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21545,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21546,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21547,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21548,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21549,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21550,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21551,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21552,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21553,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21527,21528,21529,21530,21531,21532,21533,21534,21535,21536,21537,21538,21539,21540,21541,21542,21543,21544,21545,21546,21547,21548,21549,21550,21551,21552,21553]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21554,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21555,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21556,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21557,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21558,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21559,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21560,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21561,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21562,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21563,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21564,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21565,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21566,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21567,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21568,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21569,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21570,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21571,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21572,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21573,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21574,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21575,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21576,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21577,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21578,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21579,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21580,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21581,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21582,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21556,21557,21558,21559,21560,21561,21562,21563,21564,21565,21566,21567,21568,21569,21570,21571,21572,21573,21574,21575,21576,21577,21578,21579,21580,21581,21582]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21583,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21584,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21585,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21586,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21587,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21588,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21589,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21590,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21591,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21592,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21593,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21594,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21595,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21596,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21597,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21598,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21599,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21600,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21601,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21602,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21603,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21604,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21605,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21606,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21607,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21608,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21609,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21610,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21611,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21585,21586,21587,21588,21589,21590,21591,21592,21593,21594,21595,21596,21597,21598,21599,21600,21601,21602,21603,21604,21605,21606,21607,21608,21609,21610,21611]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21612,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21613,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21614,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21615,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21616,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21617,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21618,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21619,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21620,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21621,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21622,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21623,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21624,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21625,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21626,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21627,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21628,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21629,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21630,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21631,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21632,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21633,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21634,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21635,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21636,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21637,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21638,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21639,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21640,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21614,21615,21616,21617,21618,21619,21620,21621,21622,21623,21624,21625,21626,21627,21628,21629,21630,21631,21632,21633,21634,21635,21636,21637,21638,21639,21640]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21641,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21642,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21643,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21644,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21645,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21646,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21647,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21648,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21649,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21650,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21651,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21652,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21653,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21654,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21655,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21656,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21657,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21658,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21659,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21660,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21661,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21662,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21663,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21664,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21665,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21666,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21667,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21668,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21669,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21643,21644,21645,21646,21647,21648,21649,21650,21651,21652,21653,21654,21655,21656,21657,21658,21659,21660,21661,21662,21663,21664,21665,21666,21667,21668,21669]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21670,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21671,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21672,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21673,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21674,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21675,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21676,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21677,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21678,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21679,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21680,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21681,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21682,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21683,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21684,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21685,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21686,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21687,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21688,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21689,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21690,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21691,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21692,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21693,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21694,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21695,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21696,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21697,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21698,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21672,21673,21674,21675,21676,21677,21678,21679,21680,21681,21682,21683,21684,21685,21686,21687,21688,21689,21690,21691,21692,21693,21694,21695,21696,21697,21698]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21699,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21700,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21701,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21702,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21703,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21704,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21705,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21706,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21707,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21708,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21709,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21710,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21711,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21712,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21713,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21714,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21715,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21716,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21717,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21718,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21719,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21720,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21721,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21722,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21723,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21724,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21725,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21726,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21727,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21701,21702,21703,21704,21705,21706,21707,21708,21709,21710,21711,21712,21713,21714,21715,21716,21717,21718,21719,21720,21721,21722,21723,21724,21725,21726,21727]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21728,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21729,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21730,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21731,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21732,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21733,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21734,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21735,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21736,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21737,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21738,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21739,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21740,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21741,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21742,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21743,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21744,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21745,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21746,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21747,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21748,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21749,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21750,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21751,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21752,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21753,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21754,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21755,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21756,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21730,21731,21732,21733,21734,21735,21736,21737,21738,21739,21740,21741,21742,21743,21744,21745,21746,21747,21748,21749,21750,21751,21752,21753,21754,21755,21756]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21757,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21758,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21759,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21760,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21761,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21762,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21763,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21764,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21765,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21766,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21767,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21768,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21769,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21770,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21771,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21772,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21773,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21774,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21775,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21776,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21777,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21778,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21779,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21780,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21781,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21782,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21783,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21784,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21785,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21759,21760,21761,21762,21763,21764,21765,21766,21767,21768,21769,21770,21771,21772,21773,21774,21775,21776,21777,21778,21779,21780,21781,21782,21783,21784,21785]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21786,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21787,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21788,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21789,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21790,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21791,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21792,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21793,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21794,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21795,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21796,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21797,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21798,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21799,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21800,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21801,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21802,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21803,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21804,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21805,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21806,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21807,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21808,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21809,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21810,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21811,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21812,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21813,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21814,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21788,21789,21790,21791,21792,21793,21794,21795,21796,21797,21798,21799,21800,21801,21802,21803,21804,21805,21806,21807,21808,21809,21810,21811,21812,21813,21814]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21467,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21468,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21469,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21470,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21471,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21472,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21473,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21474,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21475,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21476,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21477,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21478,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21479,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21480,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21481,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21482,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21483,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21484,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21485,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21486,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21487,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21488,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21489,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21490,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21491,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21492,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21493,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21494,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21495,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21469,21470,21471,21472,21473,21474,21475,21476,21477,21478,21479,21480,21481,21482,21483,21484,21485,21486,21487,21488,21489,21490,21491,21492,21493,21494,21495]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[21322,21351,21380,21409,21438,21496,21525,21554,21583,21612,21641,21670,21699,21728,21757,21786,21467]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21815,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21816,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21817,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21822,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21823,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21824,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21825,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21826,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21818,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21819,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21820,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21821,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21822,21824,21825,21826,21818,21820]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":21827,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21828,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21829,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21830,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21831,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21832,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21833,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":21834,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21835,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21836,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21837,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21836,21837]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21838,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21839,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21840,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21841,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21842,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21843,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21844,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21845,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21846,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21847,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21848,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21849,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21850,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21851,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":21852,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21853,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21854,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21855,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21856,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21857,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21858,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21859,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21860,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21861,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21862,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21863,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21864,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21865,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21864,21865]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21866,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21860,21861,21862,21866]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21867,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21868,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21869,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21870,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21871,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21872,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21872]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21873,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[21869,21870]},{"title":"Methods","children":[21873]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21874,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21875,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21876,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21877,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21878,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21879,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[21877,21878,21879]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21880,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21881,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21882,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21883,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21884,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21885,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21886,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21887,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21888,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21882,21883,21885,21887]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21889,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21890,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21891,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21892,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21893,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21892]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21894,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21895,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21896,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21897,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21898,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21899,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21900,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[21896,21898,21899,21900]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21901,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21902,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21903,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":21904,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21905,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21906,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21907,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21908,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21283,21284,21285,21286,21289,21292,21815,21816,21828,21829,21830,21831,21832,21834,21838,21839,21840,21841,21842,21844,21846,21847,21849,21850,21851,21852,21854,21855,21856,21857,21858,21867,21874,21875,21880,21889,21890,21894,21901,21902,21905,21907]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":20591,"name":"PutRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[20592,22542,22545,22552,22562,22539,21276,21279]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":44,"character":13}],"extendedTypes":[{"type":"reference","target":13332,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PutRequest","categories":[],"previousId":18618,"nextId":22564},{"id":22564,"name":"LastResponse","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the properties of the last ["},{"kind":"code","text":"`AxiosResponse`"},{"kind":"text","text":"](https://axios-http.com/docs/res_schema) object,\\ncached on the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/).\\n\\n## Verify response to a GET request\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Book {\\n    title: string;\\n    author: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Content-Type\'), equals(\'application/json\')),\\n    Ensure.that(LastResponse.body<Book>(), equals({\\n        title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n        author: \'Robert M. Pirsig\',\\n    })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Use Serenity/JS adapters to navigate complex response objects\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Developer {\\n    name: string;\\n    id: string;\\n    projects: Project[];\\n}\\n\\ninterface Project {\\n    name: string;\\n    repoUrl: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/developers/jan-molak\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.body<Developer>().name, equals(\'Jan Molak\')),\\n    Ensure.that(LastResponse.body<Developer>().projects[0].name, equals(\'Serenity/JS\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"children":[{"id":22565,"name":"status","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":77,"character":11}],"signatures":[{"id":22566,"name":"status","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the status code of the [last response](/api/rest/class/LastResponse/)\\n\\n#### Learn more\\n- [HTTP response status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":77,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22567,"name":"body","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":157,"character":11}],"signatures":[{"id":22568,"name":"body","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the body of the [last response](/api/rest/class/LastResponse/)\\n\\n#### A type-safe approach using generics\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Book {\\n  title: string;\\n  author: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n     // ...\\n\\n     // note body<T>() parameterised with type \\"Book\\"\\n     Ensure.that(LastResponse.body<Book>(), equals({\\n       title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n       author: \'Robert M. Pirsig\',\\n     })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## A not type-safe approach using "},{"kind":"code","text":"`any`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n     // ...\\n\\n     // note body<T>() parameterised with \\"any\\" or with no parameter is not type-safe!\\n     Ensure.that(LastResponse.body<any>(), equals({\\n       title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n       author: \'Robert M. Pirsig\',\\n     })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Iterating over the items in the response body\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Product {\\n  id: number;\\n  name: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    List.of<Product>(LastResponse.body<{ products: Product[] }>().products)\\n      .forEach(({ item, actor }) =>\\n        actor.attemptsTo(\\n          Send.a(GetRequest.to(`/products/${ item.id }`)),\\n          Ensure.that(LastResponse.body<Product>().id, equals(item.id)),\\n        )\\n      ),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":157,"character":11}],"typeParameter":[{"id":22569,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":22569,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22570,"name":"header","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":183,"character":11}],"signatures":[{"id":22571,"name":"header","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a header of the [last response](/api/rest/class/LastResponse/), identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":"\\n\\n## Asserting on a header\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    Ensure.that(LastResponse.header(\'Content-Type\'), equals(\'application/json\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":183,"character":11}],"parameters":[{"id":22572,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22573,"name":"headers","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":207,"character":11}],"signatures":[{"id":22574,"name":"headers","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves all the headers of the [last response](/api/rest/class/LastResponse/).\\n\\n## Asserting on a header\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    Ensure.that(LastResponse.headers()[\'Content-Type\'], equals(\'application/json\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":207,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"RawAxiosHeaders"},"name":"RawAxiosHeaders","package":"axios"},{"type":"reflection","declaration":{"id":22575,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22576,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":22577,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":22578,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":22579,"name":"Server","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":22580,"name":"Cache-Control","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}}],"groups":[{"title":"Properties","children":[22576,22577,22578,22579,22580]}],"sources":[]}},{"type":"reflection","declaration":{"id":22581,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22582,"name":"set-cookie","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[22582]}],"sources":[]}}]}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22583,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":22584,"name":"new LastResponse","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":22564,"name":"LastResponse","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Constructors","children":[22583]},{"title":"Methods","children":[22565,22567,22570,22573]}],"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":69,"character":13}],"permalink":"/api/rest/class/LastResponse","categories":[],"previousId":20591,"nextId":7307}],"groups":[{"title":"Abilities","children":[7323]},{"title":"Activities","children":[7365,7378]},{"title":"Functions","children":[7320]},{"title":"Models","children":[7422,9392,13332,11362,14675,16645,18618,20591]},{"title":"Questions","children":[22564]},{"title":"Type Aliases","children":[7307,7316]}],"sources":[{"fileName":"packages/rest/src/index.ts","line":1,"character":0}],"permalink":"/api/rest"},"urlSlug":"rest"}],"packageName":"@serenity-js/rest","packageVersion":"3.31.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":51,"name":"@serenity-js/serenity-bdd","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":52,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":8,"character":24}],"signatures":[{"id":53,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":8,"character":24}],"parameters":[{"id":54,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22782,"name":"SerenityBDDReporterConfig","package":"@serenity-js/serenity-bdd"},"defaultValue":"{}"}],"type":{"type":"reference","target":2241,"typeArguments":[{"type":"reference","target":22760,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}],"permalink":"/api/serenity-bdd/function/default","categories":[],"nextId":22760},{"id":22760,"name":"SerenityBDDReporter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that produces [Serenity BDD](http://serenity-bdd.info/)-standard JSON reports\\nto be parsed by [Serenity BDD CLI Reporter](https://github.com/serenity-bdd/serenity-cli)\\nto produce HTML reports and living documentation.\\n\\n## Registering Serenity BDD Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { ArtifactArchiver, configure } from \'@serenity-js/core\';\\nimport { SerenityBDDReporter } from \'@serenity-js/serenity-bdd\';\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.fromJSON({\\n      outputDirectory: \'./target/site/serenity\'\\n    }),\\n    SerenityBDDReporter.fromJSON({\\n      specDirectory: \'./features\'            // optional configuration\\n    })\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport { devices } from \'@playwright/test\';\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\';\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'line\' ],\\n    [ \'html\', { open: \'never\' } ],\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/serenity-bdd\',\\n        [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      ]\\n    }]\\n  ],\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\';\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n       [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n        \'@serenity-js/serenity-bdd\',\\n         [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Configuring Serenity BDD Reporter\\n\\nTo override Serenity BDD Reporter default configuration, provide a ["},{"kind":"code","text":"`SerenityBDDReporterConfig`"},{"kind":"text","text":"](/api/serenity-bdd/interface/SerenityBDDReporterConfig/)\\nas the second element of the ["},{"kind":"code","text":"`SerenityBDDReporterConfig`"},{"kind":"text","text":"](/api/serenity-bdd/interface/SerenityBDDReporterConfig/) array\\nusing your test runner-specific configuration mechanism.\\n\\nFor example, to change the default location\\nof the [requirements hierarchy root directory](https://serenity-bdd.github.io/docs/reporting/living_documentation#the-requirements-hierarchy),\\nspecify the "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" property:\\n\\n"},{"kind":"code","text":"```js\\n    crew: [\\n      [ \'@serenity-js/serenity-bdd\', { specDirectory: \'./features\' } ],\\n      // ...\\n    ],\\n```"},{"kind":"text","text":"\\n\\n### Learn more:\\n- [Serenity BDD Reporter integration documentation](/handbook/reporting/serenity-bdd-reporter/)\\n- [Serenity/JS examples on GitHub](https://github.com/serenity-js/serenity-js/tree/main/examples)"}]},"children":[{"id":22761,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":124,"character":11}],"signatures":[{"id":22762,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":124,"character":11}],"parameters":[{"id":22763,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22782,"name":"SerenityBDDReporterConfig","package":"@serenity-js/serenity-bdd"}}],"type":{"type":"reference","target":2241,"typeArguments":[{"type":"reference","target":22760,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22764,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":133,"character":4}],"signatures":[{"id":22765,"name":"new SerenityBDDReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":133,"character":4}],"parameters":[{"id":22766,"name":"processors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"EventQueueProcessors","package":"@serenity-js/serenity-bdd"}},{"id":22767,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22760,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}}]},{"id":22771,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":143,"character":4}],"signatures":[{"id":22772,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":143,"character":4}],"parameters":[{"id":22773,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}},{"id":22774,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":151,"character":4}],"signatures":[{"id":22775,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":151,"character":4}],"parameters":[{"id":22776,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[22764]},{"title":"Methods","children":[22761,22771,22774]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":121,"character":13}],"implementedTypes":[{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/serenity-bdd/class/SerenityBDDReporter","categories":[],"previousId":52,"nextId":22782},{"id":22782,"name":"SerenityBDDReporterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options for the ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/)."}]},"children":[{"id":22783,"name":"specDirectory","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root directory that ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/) should recursively scan for test scenario files\\nto determine the [requirements hierarchy](https://serenity-bdd.github.io/docs/reporting/living_documentation#the-requirements-hierarchy),\\nrelative to the current working directory.\\n\\nIf not specified, "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" defaults to the first one of the following subdirectories that\'s present in the current working\\ndirectory:\\n- "},{"kind":"code","text":"`features`"},{"kind":"text","text":" - typically used by [Serenity/JS + Cucumber.js](/handbook/test-runners/cucumber/) projects to store "},{"kind":"code","text":"`.feature`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`specs`"},{"kind":"text","text":" - typically used by [Serenity/JS + Jasmine](/handbook/test-runners/jasmine/) and [Mocha](/handbook/test-runners/mocha/) projects to store "},{"kind":"code","text":"`.spec.js`"},{"kind":"text","text":" or "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`spec`"},{"kind":"text","text":" - another popular naming convention seen in [Serenity/JS + Jasmine](/handbook/test-runners/jasmine/) and [Mocha](/handbook/test-runners/mocha/) projects\\n- "},{"kind":"code","text":"`tests`"},{"kind":"text","text":" - typically used by [Serenity/JS + Playwright Test](/handbook/test-runners/playwright-test/) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`test`"},{"kind":"text","text":" - typically used by [Serenity/JS + WebdriverIO](/handbook/test-runners/webdriverio/) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`src`"},{"kind":"text","text":" - typically used by [Serenity/JS + Playwright Component Test](/api/playwright-test/#ui-component-testing) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files alongside the source code\\n\\nIf not specified and none of the above subdirectories are present, "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" defaults to the current working directory.\\n\\nIf "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" _is_ specified, but the directory doesn\'t exist, SerenityBDDReporter throws a ["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/).\\n\\n**IMPORTANT**: For the Serenity BDD CLI Reporter to correctly parse the requirements hierarchy and recognise your test scenarios,\\nyour test scenario files must be named using either:\\n- "},{"kind":"code","text":"`<feature name>.feature`"},{"kind":"text","text":" naming convention for Cucumber.js projects\\n- "},{"kind":"code","text":"`<feature name>.<suffix>.<extension>`"},{"kind":"text","text":" naming convention for non-Cucumber.js projects\\n\\nIn the naming conventions above:\\n- "},{"kind":"code","text":"`<feature name>`"},{"kind":"text","text":" is the name of the feature or component the scenario exercises; e.g. "},{"kind":"code","text":"`checkout.feature`"},{"kind":"text","text":", "},{"kind":"code","text":"`checkout.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`LoginForm.spec.ts`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`<suffix>`"},{"kind":"text","text":" is one of the following: "},{"kind":"code","text":"`spec`"},{"kind":"text","text":", "},{"kind":"code","text":"`test`"},{"kind":"text","text":", "},{"kind":"code","text":"`integration`"},{"kind":"text","text":", "},{"kind":"code","text":"`it`"},{"kind":"text","text":", "},{"kind":"code","text":"`e2e`"},{"kind":"text","text":", "},{"kind":"code","text":"`spec.e2e`"},{"kind":"text","text":", "},{"kind":"code","text":"`spec-e2e`"},{"kind":"text","text":"; e.g. "},{"kind":"code","text":"`checkout.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`payments.spec-e2e.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`user_registration.integration.ts`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`<extension>`"},{"kind":"text","text":" is one of the following: "},{"kind":"code","text":"`js`"},{"kind":"text","text":", "},{"kind":"code","text":"`jsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`mjs`"},{"kind":"text","text":", "},{"kind":"code","text":"`mjsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`cjs`"},{"kind":"text","text":", "},{"kind":"code","text":"`cjsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`tsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`mts`"},{"kind":"text","text":", "},{"kind":"code","text":"`mtsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`cts`"},{"kind":"text","text":", "},{"kind":"code","text":"`ctxs`"},{"kind":"text","text":"; e.g. "},{"kind":"code","text":"`authentication.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`FormValidator.spec.mtsx`"},{"kind":"text","text":"\\n\\nTo find out more about how [Serenity BDD CLI](https://github.com/serenity-bdd/serenity-core/tree/main/serenity-cli) parses the requirements hierarchy,\\nsee the [SpecFileFilters](https://github.com/serenity-bdd/serenity-core/blob/main/serenity-model/src/main/java/net/thucydides/model/requirements/SpecFileFilters.java)\\nclass."}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":40,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22784,"name":"reporter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":42,"character":4}],"type":{"type":"reflection","declaration":{"id":22785,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22786,"name":"includeAbilityDetails","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to include the details of final state and configuration details of actors\' abilities in Serenity BDD reports.\\nDefaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":47,"character":8}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[22786]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":42,"character":15}]}}}],"groups":[{"title":"Properties","children":[22783,22784]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":7,"character":17}],"permalink":"/api/serenity-bdd/interface/SerenityBDDReporterConfig","categories":[],"previousId":22760}],"groups":[{"title":"Functions","children":[52]},{"title":"Stage","children":[22760,22782]}],"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":1,"character":0}],"permalink":"/api/serenity-bdd"},"urlSlug":"serenity-bdd"}],"packageName":"@serenity-js/serenity-bdd","packageVersion":"3.31.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":5,"name":"@serenity-js/web","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":3219,"name":"BrowserWindowClosedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when you\'re trying to take a screenshot of a browser window\\nthat\'s already been closed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TakeScreenshot`"},{"kind":"text","text":"](/api/web/class/TakeScreenshot/)\\n- ["},{"kind":"code","text":"`Page.takeScreenshot`"},{"kind":"text","text":"](/api/web/class/Page/#takeScreenshot)"}]},"children":[{"id":3237,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.cause"}},{"id":3238,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3239,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}},{"id":3240,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3241,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}},{"id":3233,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":14,"character":4}],"signatures":[{"id":3234,"name":"new BrowserWindowClosedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":14,"character":4}],"parameters":[{"id":3235,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3236,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3219,"name":"BrowserWindowClosedError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}},{"id":3242,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.name"}},{"id":3243,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.message"}},{"id":3244,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.stack"}}],"groups":[{"title":"Constructors","children":[3233]},{"title":"Properties","children":[3237,3242,3243,3244]},{"title":"Methods","children":[3238,3240]}],"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":315,"name":"LogicError","package":"@serenity-js/core"}],"permalink":"/api/web/class/BrowserWindowClosedError","categories":[],"previousId":3843,"nextId":3245},{"id":3245,"name":"CookieMissingError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when the [cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies)\\nyou\'re trying to retrieve has not been set yet.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)\\n- ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)"}]},"children":[{"id":3260,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.cause"}},{"id":3261,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3262,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toString"}},{"id":3263,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3264,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toJSON"}},{"id":3256,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":14,"character":4}],"signatures":[{"id":3257,"name":"new CookieMissingError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":14,"character":4}],"parameters":[{"id":3258,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3259,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3245,"name":"CookieMissingError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":3265,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.name"}},{"id":3266,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.message"}},{"id":3267,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[3256]},{"title":"Properties","children":[3260,3265,3266,3267]},{"title":"Methods","children":[3261,3263]}],"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/web/class/CookieMissingError","categories":[],"previousId":3219,"nextId":3268},{"id":3268,"name":"ModalDialogObstructsScreenshotError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when the presence of a JavaScript dialog obstructs taking a screenshot.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/)\\n- ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n- ["},{"kind":"code","text":"`TakeScreenshot`"},{"kind":"text","text":"](/api/web/class/TakeScreenshot/)"}]},"children":[{"id":3286,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.cause"}},{"id":3287,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3288,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}},{"id":3289,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3290,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}},{"id":3282,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":14,"character":4}],"signatures":[{"id":3283,"name":"new ModalDialogObstructsScreenshotError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":14,"character":4}],"parameters":[{"id":3284,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3285,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3268,"name":"ModalDialogObstructsScreenshotError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}},{"id":3291,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.name"}},{"id":3292,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.message"}},{"id":3293,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.stack"}}],"groups":[{"title":"Constructors","children":[3282]},{"title":"Properties","children":[3286,3291,3292,3293]},{"title":"Methods","children":[3287,3289]}],"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":315,"name":"LogicError","package":"@serenity-js/core"}],"permalink":"/api/web/class/ModalDialogObstructsScreenshotError","categories":[],"previousId":3245,"nextId":3294},{"id":3294,"name":"isActive","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isActive.ts","line":27,"character":16}],"signatures":[{"id":3295,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is \\"active\\", which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isActive`"},{"kind":"text","text":"](/api/web/class/PageElement/#isActive) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isActive`"},{"kind":"text","text":"](/api/web/class/PageElement/#isActive)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isActive.ts","line":27,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4406,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isActive","categories":[],"previousId":3268,"nextId":3296},{"id":3296,"name":"isClickable","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isClickable.ts","line":27,"character":16}],"signatures":[{"id":3297,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is clickable, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isClickable`"},{"kind":"text","text":"](/api/web/class/PageElement/#isClickable) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isClickable`"},{"kind":"text","text":"](/api/web/class/PageElement/#isClickable)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isClickable.ts","line":27,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4406,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isClickable","categories":[],"previousId":3294,"nextId":3298},{"id":3298,"name":"isEnabled","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isEnabled.ts","line":27,"character":16}],"signatures":[{"id":3299,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is enabled, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isEnabled`"},{"kind":"text","text":"](/api/web/class/PageElement/#isEnabled) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isEnabled`"},{"kind":"text","text":"](/api/web/class/PageElement/#isEnabled)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isEnabled.ts","line":27,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4406,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isEnabled","categories":[],"previousId":3296,"nextId":3300},{"id":3300,"name":"isSelected","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isSelected.ts","line":27,"character":16}],"signatures":[{"id":3301,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an "},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`<input>`"},{"kind":"text","text":" element is selected, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isSelected`"},{"kind":"text","text":"](/api/web/class/PageElement/#isSelected) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isSelected`"},{"kind":"text","text":"](/api/web/class/PageElement/#isSelected)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isSelected.ts","line":27,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4406,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isSelected","categories":[],"previousId":3298,"nextId":3302},{"id":3302,"name":"isVisible","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isVisible.ts","line":27,"character":16}],"signatures":[{"id":3303,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is visible, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isVisible`"},{"kind":"text","text":"](/api/web/class/PageElement/#isVisible) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isVisible`"},{"kind":"text","text":"](/api/web/class/PageElement/#isVisible)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isVisible.ts","line":27,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4406,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isVisible","categories":[],"previousId":3300,"nextId":3879},{"id":3304,"name":"BrowseTheWeb","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"The [ability](/api/core/class/Ability/) to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" enables an [actor](/api/core/class/Actor/)\\nto [interact with](/api/core/class/Interaction/) and [retrieve information from](/api/core/class/Question/) Web-based user interfaces.\\n\\n"},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" wraps test integration tools such as [Playwright](/api/playwright),\\n[Protractor](/api/protractor), or [WebdriverIO](/api/webdriverio),\\nand together with Serenity/JS Web models, such as ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) - offers a standardised way\\nto write Web-based tests following the Screenplay Pattern.\\n\\nThe consistent and portable design of abstractions provided by the ["},{"kind":"code","text":"`@serenity-js/web`"},{"kind":"text","text":" module](/api/web)\\nalso helps to make your tests portable across the various test integration tools and helps to make your test\\ncode easier to reuse across projects and teams.\\n\\n## Giving the actors an ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nTo give an [actor](/api/core/class/Actor/) an ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":", provide the **integration tool-specific implementation**\\nvia ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) in ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare), or via ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where).\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { engage, Actor, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n\\n  engage(\\n    BrowseTheWebWithPlaywright.using(browser),\\n  )\\n})\\n```"},{"kind":"text","text":"\\n\\n### Learn more\\n\\nTo learn more about using Serenity/JS with your chosen test integration tool, follow their respective documentation:\\n\\n- ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n- ["},{"kind":"code","text":"`BrowseTheWebWithProtractor`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/)\\n- ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/)\\n\\n## Using the ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nTo use the ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" in a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nor ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/), use the **generic** method ["},{"kind":"code","text":"`BrowseTheWeb.as`"},{"kind":"text","text":"](/api/core/class/Ability/#as)\\nto retrieve it.\\n\\nThis generic method retrieves the integration tool-specific implementation of ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) present on the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/),\\nsuch as ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\nor ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/), using ["},{"kind":"code","text":"`Actor.abilityTo`"},{"kind":"text","text":"](/api/core/class/Actor/#abilityTo).\\n\\nThis decoupling mechanism helps to make your test code portable across test integration tools,\\nsince the only part of your test suite that needs to know about the test integration tool used are the actors.\\nThe rest of your test code, so [tasks](/api/core/class/Task/), [interactions](/api/core/class/Interaction/), and [questions](/api/core/class/Question/),\\nremain fully agnostic of the underlying tool.\\n\\n"},{"kind":"code","text":"```ts\\nimport { BrowseTheWeb, Question } from \'@serenity-js/web\'\\n\\nconst BrowserDetails = () =>\\n Question.about(\'browser details\', async actor => {\\n   const capabilities = await BrowseTheWeb.as(actor).browserCapabilities();\\n   return ${ capabilities.browserName } ${ capabilities.browserVersion }`;\\n })\\n```"},{"kind":"text","text":"\\n\\n**Pro tip:** Use the specific "},{"kind":"code","text":"`BrowseTheWebWith<test integration tool name>`"},{"kind":"text","text":" to give the actor the ability,\\nand generic "},{"kind":"code","text":"`BrowseTheWeb.as(actor)`"},{"kind":"text","text":" to retrieve it.\\n\\n### Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan)\\n- ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where)\\n- ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare)"}]},"children":[{"id":3323,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":3324,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}},{"id":3325,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":3326,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}},{"id":3312,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":85,"character":4}],"signatures":[{"id":3313,"name":"new BrowseTheWeb","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":85,"character":4}],"typeParameter":[{"id":3314,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":3315,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3920,"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":3314,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":3304,"typeArguments":[{"type":"reference","target":3314,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"BrowseTheWeb","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":3317,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":10}],"signatures":[{"id":3318,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":3314,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3319,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":100,"character":4}],"signatures":[{"id":3320,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":100,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":3314,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3321,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":107,"character":10}],"signatures":[{"id":3322,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":107,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3312]},{"title":"Methods","children":[3323,3325,3317,3319,3321]}],"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":22}],"typeParameters":[{"id":3327,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/web/class/BrowseTheWeb","categories":[],"nextId":3328},{"id":3328,"name":"Clear","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto clear the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" of a [form "},{"kind":"code","text":"`input`"},{"kind":"text","text":" field](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst Form = {\\n  exampleInput: () =>\\n    PageElement.located(By.id(\'example\'))\\n     .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Clearing the value of an input field\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Clear, Enter, Value } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'In\xe9s\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Enter.theValue(\'Hello world!\').into(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput()), equals(\'Hello world!\')),\\n\\n    Clear.theValueOf(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput()), equals(\'\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/)\\n- ["},{"kind":"code","text":"`Value`"},{"kind":"text","text":"](/api/web/class/Value/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3329,"name":"theValueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":68,"character":11}],"signatures":[{"id":3330,"name":"theValueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto clear the value of an input "},{"kind":"code","text":"`field`"},{"kind":"text","text":","}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":68,"character":11}],"parameters":[{"id":3331,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The field which value should be cleared"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3360,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3361,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3632,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3631,"name":"PageElementInteraction.instantiationLocation"}},{"id":3362,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3363,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3364,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3365,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3366,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3366]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3634,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3633,"name":"PageElementInteraction.describedBy"}},{"id":3372,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3373,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.toString"}},{"id":3346,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":79,"character":10}],"signatures":[{"id":3347,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":79,"character":10}],"parameters":[{"id":3348,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3628,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3627,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3329,3360,3362,3372,3346]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":58,"character":13}],"extendedTypes":[{"type":"reference","target":3608,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Clear","categories":[],"previousId":3304,"nextId":3374},{"id":3374,"name":"Click","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto scroll the given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) into view and then [click](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) on it.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/webdriverio\';\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(by.id(\'example\'))\\n      .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Clicking on an element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Click, isSelected } from \'@serenity-js/web\'\\nimport { Ensure } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Chlo\xe9\')\\n  .attemptsTo(\\n    Click.on(Form.exampleInput()),\\n    Ensure.that(Form.exampleInput(), isSelected()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3375,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":60,"character":11}],"signatures":[{"id":3376,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":60,"character":11}],"parameters":[{"id":3377,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be clicked on"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3400,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3401,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3632,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3631,"name":"PageElementInteraction.instantiationLocation"}},{"id":3402,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3403,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3404,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3405,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3406,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3406]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3634,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3633,"name":"PageElementInteraction.describedBy"}},{"id":3412,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3413,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.toString"}},{"id":3392,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":71,"character":10}],"signatures":[{"id":3393,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":71,"character":10}],"parameters":[{"id":3394,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3628,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3627,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3375,3400,3402,3412,3392]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":52,"character":13}],"extendedTypes":[{"type":"reference","target":3608,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Click","categories":[],"previousId":3328,"nextId":3414},{"id":3414,"name":"DoubleClick","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto perform a double click on a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n    The editor shows up when the user double-clicks\\n    on one of the properties of their profile\\n    and lets them change the value of that property.\\n--\x3e\\n<div id=\\"user-profile\\">\\n    <ul>\\n        <li id=\\"display-name\\" ondblclick=\\"edit(this)\\">User12345</li>\\n        <li id=\\"email-address\\" ondblclick=\\"edit(this)\\">tester@example.org</li>\\n    </ul>\\n    <form id=\\"editor\\" class=\\"hidden\\">\\n        <input type=\\"text\\" value=\\"\\" />\\n    </form>\\n</div>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass UserProfile {\\n  static displayName = () =>\\n    PageElement.located(by.id(\'display-name\'))\\n      .describedAs(\'display name\')\\n\\n  static emailAddress = () =>\\n    PageElement.located(by.id(\'email-address\'))\\n      .describedAs(\'email address\')\\n\\n  static editor = () =>\\n    PageElement.located(by.id(\'editor\'))\\n      .describedAs(\'editor\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Double-clicking on an element\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { DoubleClick, isVisible, Enter, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals, not } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Dorothy\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    DoubleClick.on(UserProfile.displayName),\\n    Wait.until(UserProfile.editor(), isVisible()),\\n\\n    Enter.theValue(\'New username\').into(UserProfile.editor),\\n\\n    Ensure.that(Text.of(UserProfile.displayName()), equals(\'New username\')),\\n    Ensure.that(UserProfile.editor, not(isVisible()))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3415,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":83,"character":11}],"signatures":[{"id":3416,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":83,"character":11}],"parameters":[{"id":3417,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be double-clicked on"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3440,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3441,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3632,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3631,"name":"PageElementInteraction.instantiationLocation"}},{"id":3442,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3443,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3444,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3445,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3446,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3446]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3634,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3633,"name":"PageElementInteraction.describedBy"}},{"id":3452,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3453,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.toString"}},{"id":3432,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":94,"character":10}],"signatures":[{"id":3433,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":94,"character":10}],"parameters":[{"id":3434,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3628,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3627,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3415,3440,3442,3452,3432]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":75,"character":13}],"extendedTypes":[{"type":"reference","target":3608,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/DoubleClick","categories":[],"previousId":3374,"nextId":3454},{"id":3454,"name":"Enter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto enter a value into a [form "},{"kind":"code","text":"`input`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input) field.\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n<form>\\n <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(By.id(\'example\'))\\n      .describedAs(\'example input\')\\n }\\n```"},{"kind":"text","text":"\\n\\n## Entering the value into a form field\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Enter } from \'@serenity-js/web\';\\n\\nawait actorCalled(\'Esme\')\\n  .attemptsTo(\\n    Enter.theValue(\'Hello world!\').into(Form.exampleInput()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Handling sensitive information\\n\\nBy design, any data handled by an actor appears in Serenity/JS reports.\\nTo prevent the exposure of any sensitive information, such as passwords or tokens, you should use ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\'\\nimport { Enter } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esme\')\\n  .attemptsTo(\\n    Enter.theValue(Masked.valueOf(\'your little secret\').into(Form.exampleInputField()),\\n  )\\n\\n  // Gets reported as: \\"Esme enters [a masked value] into the example input field\\"\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3455,"name":"theValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":11}],"signatures":[{"id":3456,"name":"theValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":11}],"parameters":[{"id":3457,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"The text value to be entered"}]},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3458,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3459,"name":"into","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":92}],"type":{"type":"reflection","declaration":{"id":3460,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":98}],"signatures":[{"id":3461,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":98}],"parameters":[{"id":3462,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3459]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":90}]}}}]},{"id":3487,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3488,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3632,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3631,"name":"PageElementInteraction.instantiationLocation"}},{"id":3489,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3490,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3491,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3492,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3493,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3493]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3634,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3633,"name":"PageElementInteraction.describedBy"}},{"id":3499,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3500,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.toString"}},{"id":3479,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":96,"character":10}],"signatures":[{"id":3480,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":96,"character":10}],"parameters":[{"id":3481,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3628,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3627,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3455,3487,3489,3499,3479]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":67,"character":13}],"extendedTypes":[{"type":"reference","target":3608,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Enter","categories":[],"previousId":3414,"nextId":3501},{"id":3501,"name":"ExecuteScript","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto inject a script into the browser and execute it in the context of the current browser tab.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"children":[{"id":3502,"name":"from","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":28,"character":11}],"signatures":[{"id":3503,"name":"from","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to load a script from "},{"kind":"code","text":"`sourceUrl`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":28,"character":11}],"parameters":[{"id":3504,"name":"sourceUrl","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URL to load the script from"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3505,"name":"async","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":173,"character":11}],"signatures":[{"id":3506,"name":"async","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto execute an asynchronous script within the context of the current browser tab.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\nor ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nUnlike executing synchronous JavaScript with ["},{"kind":"code","text":"`ExecuteScript.sync`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/#sync),\\nscripts executed with this function must explicitly signal they are finished by invoking the provided callback.\\n\\nThis callback will always be injected into the executed function as the last argument,\\nand thus may be referenced with "},{"kind":"code","text":"`arguments[arguments.length - 1]`"},{"kind":"text","text":".\\n\\nIf the script invokes the "},{"kind":"code","text":"`callback`"},{"kind":"text","text":" with a return value, this will be made available\\nvia the ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result).\\n\\n**Please note** that in order to signal an error in the "},{"kind":"code","text":"`script`"},{"kind":"text","text":" you need to throw an ["},{"kind":"code","text":"`Error`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error)\\ninstead of passing it to the callback function.\\n\\n#### Executing an async script\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var callback = arguments[arguments.length - 1]\\n\\n    // do stuff\\n\\n    callback(result)\\n  `)\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Executing async script as function\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(function getText(header, callback) {\\n    callback(header.innerText)\\n  }).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Passing arguments to an async script\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var name = arguments[0];\\n    var age = arguments[1];\\n    var callback = arguments[arguments.length - 1]\\n\\n    // do stuff\\n\\n    callback(result)\\n  `).withArguments(\'Bob\', 24)\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Passing PageElement arguments to an async script\\n\\nSerenity/JS automatically converts ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects passed as arguments to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var header = arguments[0]\\n    var callback = arguments[arguments.length - 1]\\n\\n    callback(header.innerText)\\n  `).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using nested data structures containing PageElement objects\\n\\nSerenity/JS automatically converts any ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects\\ncontained in nested data structures passed to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n\\n  article: () =>\\n    PageElement.located(By.css(\'article\')).describedAs(\'article\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var { include, exclude }  = arguments[0]\\n    var callback = arguments[arguments.length - 1]\\n\\n    callback(include[0].innerText)\\n  `).withArguments({\\n    include: [ MyPage.article() ],\\n    exclude: [ MyPage.header() ],\\n  })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":173,"character":11}],"parameters":[{"id":3507,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The script to be executed"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}}],"type":{"type":"reference","target":3513,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"}}]},{"id":3508,"name":"sync","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":285,"character":11}],"signatures":[{"id":3509,"name":"sync","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto execute a synchronous script within the context of the current browser tab.\\n\\nIf the script returns a value, it will be made available via ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result).\\n\\n#### Executing a sync script as string and reading the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(\'return navigator.userAgent\'),\\n    Ensure.that(LastScriptExecution.result<string>(), includes(\'Chrome\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Executing a sync script as function and retrieving the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Enter, ExecuteScript, LastScriptExecution, PageElement } from \'@serenity-js/web\'\\n\\nconst Checkout = {\\n  someOfferField: () =>\\n    PageElement.located(By.id(\'offer-code\'))\\n      .describedAs(\'offer code\')\\n\\n  applyOfferCodeField = () =>\\n    PageElement.located(By.id(\'apply-offer-code\'))\\n      .describedAs(\'apply offer field\')\\n}\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    // inject JavaScript to read some property of an element\\n    ExecuteScript.sync(function getValue(element) {\\n        return element.value;\\n    }).withArguments(Checkout.someOfferField()),\\n\\n    // use LastScriptExecution.result() to read the value\\n    // returned from the injected script\\n    // and pass it to another interaction\\n    Enter.theValue(LastScriptExecution.result<string>()).into(Checkout.applyOfferCodeField()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Passing PageElement arguments to a sync script\\n\\nSerenity/JS automatically converts ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects passed as arguments to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.sync(function getInnerHtml(element) {\\n    return element.innerHTML;\\n  }).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using nested data structures containing PageElement objects\\n\\nSerenity/JS automatically converts any ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects\\ncontained in nested data structures passed to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n\\n  article: () =>\\n    PageElement.located(By.css(\'article\')).describedAs(\'article\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(function getInnerHtml(scope) {\\n    return scope.include[0].innerHTML;\\n  `).withArguments({\\n    include: [ MyPage.article() ],\\n    exclude: [ MyPage.header() ],\\n  })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":285,"character":11}],"parameters":[{"id":3510,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The script to be executed"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}}],"type":{"type":"reference","target":3513,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"}}]},{"id":3511,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3512,"name":"new ExecuteScript","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3501,"name":"ExecuteScript","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3511]},{"title":"Methods","children":[3502,3505,3508]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":19,"character":13}],"permalink":"/api/web/class/ExecuteScript","categories":[],"previousId":3454,"nextId":3513},{"id":3513,"name":"ExecuteScriptWithArguments","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Allows for a script to be executed to be parametrised.\\n\\n## Learn more\\n-  ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)"}]},"children":[{"id":3542,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3543,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3544,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3545,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3546,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3547,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3548,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3548]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3554,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3555,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3524,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":303,"character":4}],"signatures":[{"id":3525,"name":"new ExecuteScriptWithArguments","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":303,"character":4}],"parameters":[{"id":3526,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3527,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}},{"id":3528,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"defaultValue":"[]"}],"type":{"type":"reference","target":3513,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":3531,"name":"withArguments","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":317,"character":20}],"signatures":[{"id":3532,"name":"withArguments","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":317,"character":20}],"parameters":[{"id":3533,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Arguments to parametrise the script with"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3534,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":322,"character":10}],"signatures":[{"id":3535,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":322,"character":10}],"parameters":[{"id":3536,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[3524]},{"title":"Methods","children":[3542,3544,3554,3531,3534]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":301,"character":22}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/ExecuteScriptWithArguments","categories":[],"previousId":3501,"nextId":3556},{"id":3556,"name":"Hover","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto hover the mouse pointer over a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n <a data-test=\\"example-link\\"\\n     class=\\"off\\"\\n     onmouseover=\\"this.className=\'on\';\\"\\n     onmouseout=\\"this.className=\'off\';\\"\\n     href=\\"/\\">hover over me</a>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Example {\\n  static link = () =>\\n    PageElement.located(By.css(\'[data-test=\\"example-link\\"]\'))\\n      .describedAs(\'example link\')\\n }\\n```"},{"kind":"text","text":"\\n\\n## Hovering over an element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Hover, CssClasses } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Hank\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n     Ensure.that(CssClasses.of(Example.link()), equals([ \'off\' ])),\\n\\n    Hover.over(Example.link),\\n    Ensure.that(CssClasses.of(Example.link()), equals([ \'on\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3557,"name":"over","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":64,"character":11}],"signatures":[{"id":3558,"name":"over","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":64,"character":11}],"parameters":[{"id":3559,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be hovered over"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3582,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3583,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3632,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3631,"name":"PageElementInteraction.instantiationLocation"}},{"id":3584,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3585,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3586,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3587,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3588,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3588]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3634,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3633,"name":"PageElementInteraction.describedBy"}},{"id":3594,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3595,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.toString"}},{"id":3574,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":75,"character":10}],"signatures":[{"id":3575,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":75,"character":10}],"parameters":[{"id":3576,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3628,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3627,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3557,3582,3584,3594,3574]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":56,"character":13}],"extendedTypes":[{"type":"reference","target":3608,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Hover","categories":[],"previousId":3513,"nextId":3596},{"id":3596,"name":"Navigate","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate to a specific destination, as well as back and forth in the browser history,\\nor reload the current page.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)"}]},"children":[{"id":3597,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":68,"character":11}],"signatures":[{"id":3598,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate to a given URL.\\n\\nThe URL can be:\\n- absolute, e.g. "},{"kind":"code","text":"`https://example.org/search`"},{"kind":"text","text":"\\n- relative, e.g. "},{"kind":"code","text":"`/search`"},{"kind":"text","text":"\\n\\nIf the URL is relative, your Web test integration tool will append it to any base URL\\nspecified in its respective configuration file.\\n\\n\\n#### Navigate to path relative to baseUrl\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .attemptsTo(\\n    Navigate.to(\'/search\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Navigate to an absolute URL (overrides baseUrl)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'https://mycompany.org/login\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- ["},{"kind":"code","text":"`Page.navigateTo`"},{"kind":"text","text":"](/api/web/class/Page/#navigateTo)\\n- [WebdriverIO: Configuration Options](https://webdriver.io/docs/options/#baseurl)\\n- [Playwright: Browser](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright: Test Options](https://playwright.dev/docs/api/class-testoptions#test-options-base-url)\\n- [Protractor: Configuration](https://github.com/angular/protractor/blob/master/lib/config.ts)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":68,"character":11}],"parameters":[{"id":3599,"name":"url","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An absolute URL or path an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should navigate to"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3600,"name":"back","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":95,"character":11}],"signatures":[{"id":3601,"name":"back","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate back one page in the joint session history of the current top-level browsing context.\\n\\n#### Navigate back in browsing history\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/first\'),\\n    Navigate.to(\'/second\'),\\n\\n    Navigate.back(),\\n\\n    Ensure.that(Page.current().url().href, endsWith(\'/first\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":95,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3602,"name":"forward","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":127,"character":11}],"signatures":[{"id":3603,"name":"forward","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate forward one page in the joint session history of the current top-level browsing context.\\n\\n#### Navigate forward in browsing history\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/first\'),\\n    Navigate.to(\'/second\'),\\n\\n    Navigate.back(),\\n    Navigate.forward(),\\n\\n    Ensure.that(Page.current().url().href, endsWith(\'/second\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":127,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3604,"name":"reloadPage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":156,"character":11}],"signatures":[{"id":3605,"name":"reloadPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto reload the current page.\\n\\n#### Navigate to path relative to baseUrl\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/login\'),\\n    Cookie.called(\'session_id\').delete(),\\n    Navigate.reloadPage(),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":156,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3606,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3607,"name":"new Navigate","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3596,"name":"Navigate","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3606]},{"title":"Methods","children":[3597,3600,3602,3604]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":17,"character":13}],"permalink":"/api/web/class/Navigate","categories":[],"previousId":3556,"nextId":3608},{"id":3608,"name":"PageElementInteraction","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"A base class for interactions with ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects.\\n\\n**Note:** The recommended way to implement custom interactions\\nin your code is to use the ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) factory method."}]},"children":[{"id":3631,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3632,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3627,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/lib/screenplay/Interaction.ts","line":89,"character":13}],"signatures":[{"id":3628,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Interaction.ts","line":89,"character":13}],"parameters":[{"id":3629,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":3633,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3634,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3635,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3636,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3637,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3637]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3643,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3644,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[3631,3627,3633,3643]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/PageElementInteraction.ts","line":15,"character":22}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":3328,"name":"Clear"},{"type":"reference","target":3374,"name":"Click"},{"type":"reference","target":3414,"name":"DoubleClick"},{"type":"reference","target":3454,"name":"Enter"},{"type":"reference","target":3556,"name":"Hover"},{"type":"reference","target":3645,"name":"Press"},{"type":"reference","target":3693,"name":"RightClick"}],"permalink":"/api/web/class/PageElementInteraction","categories":[],"previousId":3596,"nextId":3645},{"id":3645,"name":"Press","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto send a key press or a sequence of keys to a Web element.\\n\\n**Note:** On macOS, some keyboard shortcuts might not work\\nwith the ["},{"kind":"code","text":"`devtools`"},{"kind":"text","text":" protocol](https://webdriver.io/docs/automationProtocols/#devtools-protocol).\\n\\n For example:\\n - to *copy*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`C`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Control`"},{"kind":"text","text":"](/api/web/class/Key/#Control)+["},{"kind":"code","text":"`Key.Insert`"},{"kind":"text","text":"](/api/web/class/Key/#Insert)\\n - to *cut*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`X`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Control`"},{"kind":"text","text":"](/api/web/class/Key/#Control)+["},{"kind":"code","text":"`Key.Delete`"},{"kind":"text","text":"](/api/web/class/Key/#Delete)\\n - to *paste*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`V`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Shift`"},{"kind":"text","text":"](/api/web/class/Key/#Shift)+["},{"kind":"code","text":"`Key.Insert`"},{"kind":"text","text":"](/api/web/class/Key/#Insert)\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(By.id(\'example\'))\\n      .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Pressing keys\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Key, Press, Value } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Priyanka\')\\n  .attemptsTo(\\n    Press.the(\'H\', \'i\', \'!\', Key.ENTER).in(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput), equals(\'Hi!\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Key`"},{"kind":"text","text":"](/api/web/class/Key/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3646,"name":"the","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":11}],"signatures":[{"id":3647,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto press a sequence of [keys](/api/web/class/Key/),\\n\\nWhen no "},{"kind":"code","text":"`field`"},{"kind":"text","text":" is specified, the key sequence will be sent to the currently focused element,\\nand if no element is focused - to the "},{"kind":"code","text":"`document.body`"},{"kind":"text","text":" to handle."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":11}],"parameters":[{"id":3648,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of one or more keys to press"}]},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"intersection","types":[{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3649,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3650,"name":"in","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":90}],"type":{"type":"reflection","declaration":{"id":3651,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":94}],"signatures":[{"id":3652,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":94}],"parameters":[{"id":3653,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3650]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":88}]}}]}}]},{"id":3679,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3680,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3632,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3631,"name":"PageElementInteraction.instantiationLocation"}},{"id":3681,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3682,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3683,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3684,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3685,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3685]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3634,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3633,"name":"PageElementInteraction.describedBy"}},{"id":3691,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3692,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.toString"}},{"id":3667,"name":"in","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":86,"character":4}],"signatures":[{"id":3668,"name":"in","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Send the key sequence to a specific element."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":86,"character":4}],"parameters":[{"id":3669,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3671,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":103,"character":10}],"signatures":[{"id":3672,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":103,"character":10}],"parameters":[{"id":3673,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3628,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3627,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3646,3679,3681,3691,3667,3671]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":64,"character":13}],"extendedTypes":[{"type":"reference","target":3608,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Press","categories":[],"previousId":3608,"nextId":3693},{"id":3693,"name":"RightClick","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\r\\nto perform a right click on a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\r\\n\\r\\nThis is typically used to open a [custom context menu](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event)\\r\\non a given Web element, since it\'s not possible to interact with the standard context menu offered by your browser.\\r\\n\\r\\n## Example widget\\r\\n\\r\\n"},{"kind":"code","text":"```html\\r\\n<form>\\r\\n  <input type=\\"text\\" id=\\"field\\"\\r\\n    oncontextmenu=\\"showMenu(); return false;\\" />\\r\\n\\r\\n  <div id=\\"context-menu\\" style=\\"display:none\\">\\r\\n    Custom context menu\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<script>\\r\\n  function showMenu() {\\r\\n    document.getElementById(\\"context-menu\\").style.display = \'block\';\\r\\n  }\\r\\n<\/script>\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Lean Page Object describing the widget\\r\\n\\r\\n"},{"kind":"code","text":"```ts\\r\\nimport { By, PageElement } from \'@serenity-js/web\'\\r\\n\\r\\nclass Form {\\r\\n  static exampleInput = () =>\\r\\n    PageElement.located(By.id(\'example\'))\\r\\n      .describedAs(\'example input\')\\r\\n\\r\\n  static exampleContextMenu = () =>\\r\\n    PageElement.located(By.id(\'context-menu\'))\\r\\n      .describedAs(\'example context menu\')\\r\\n}\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Right-click on an element\\r\\n\\r\\n"},{"kind":"code","text":"```ts\\r\\nimport { actorCalled } from \'@serenity-js/core\'\\r\\nimport { RightClick, isVisible } from \'@serenity-js/web\'\\r\\nimport { Ensure } from \'@serenity-js/assertions\'\\r\\n\\r\\nawait actorCalled(\'Chlo\xe9\')\\r\\n  .whoCan(BrowseTheWeb.using(browser))\\r\\n  .attemptsTo(\\r\\n    RightClick.on(Form.exampleInput()),\\r\\n    Ensure.that(Form.exampleContextMenu(), isVisible()),\\r\\n  )\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Learn more\\r\\n\\r\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\r\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3694,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":78,"character":11}],"signatures":[{"id":3695,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":78,"character":11}],"parameters":[{"id":3696,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be right-clicked on"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3719,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3720,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3632,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3631,"name":"PageElementInteraction.instantiationLocation"}},{"id":3721,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3722,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3723,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3724,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3725,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3725]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3634,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3633,"name":"PageElementInteraction.describedBy"}},{"id":3731,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3732,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.toString"}},{"id":3711,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":89,"character":10}],"signatures":[{"id":3712,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":89,"character":10}],"parameters":[{"id":3713,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3628,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3627,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3694,3719,3721,3731,3711]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":71,"character":13}],"extendedTypes":[{"type":"reference","target":3608,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/RightClick","categories":[],"previousId":3645,"nextId":3733},{"id":3733,"name":"Scroll","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto scroll until a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) comes into view.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n  an element somewhere at the bottom of the page,\\n  outside of the visible area\\n--\x3e\\n<input type=\\"submit\\" id=\\"submit\\" />\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static submitButton = () => {\\n    PageElement.located(By.id(\'submit\'))\\n      .describedAs(\'submit button\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Scrolling to element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure } from \'@serenity-js/assertions\'\\nimport { Scroll, isVisible } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Sara\')\\n  .attemptsTo(\\n    Scroll.to(Form.submitButton()),\\n    Ensure.that(Form.submitButton(), isVisible()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3734,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":61,"character":11}],"signatures":[{"id":3735,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":61,"character":11}],"parameters":[{"id":3736,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to scroll to"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3733,"name":"Scroll","package":"@serenity-js/web"}}]},{"id":3755,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3756,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3757,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3758,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3759,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3760,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3761,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3761]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3767,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3768,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3751,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":72,"character":10}],"signatures":[{"id":3752,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":72,"character":10}],"parameters":[{"id":3753,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3734,3755,3757,3767,3751]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":53,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/Scroll","categories":[],"previousId":3693,"nextId":3769},{"id":3769,"name":"Select","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto select an option from a [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select),\\neither by its display name, or by value.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Selected`"},{"kind":"text","text":"](/api/web/class/Selected/)"}]},"children":[{"id":3770,"name":"value","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":11}],"signatures":[{"id":3771,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select a single ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nwith a given ["},{"kind":"code","text":"`value`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-value).,\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"C\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.value(\'UK\').from(Countries.dropdown()),\\n    Ensure.that(Selected.valueOf(Countries.dropdown()), equals(\'UK\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.valueOf`"},{"kind":"text","text":"](/api/web/class/Selected/#valueOf)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":11}],"parameters":[{"id":3772,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A value of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":3773,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3774,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":47}],"type":{"type":"reflection","declaration":{"id":3775,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":53}],"signatures":[{"id":3776,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":53}],"parameters":[{"id":3777,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3774]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":45}]}}}]},{"id":3778,"name":"values","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":11}],"signatures":[{"id":3779,"name":"values","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select multiple ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nidentified by their ["},{"kind":"code","text":"`value`"},{"kind":"text","text":"s](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-value).\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```ts\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.values(\'UK\').from(Countries.dropdown()),\\n    Ensure.that(Selected.valuesOf(Countries.dropdown()), equals([ \'UK\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- ["},{"kind":"code","text":"`Selected.valuesOf`"},{"kind":"text","text":"](/api/web/class/Selected/#valuesOf)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":11}],"parameters":[{"id":3780,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Values of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3781,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3782,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":70}],"type":{"type":"reflection","declaration":{"id":3783,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":76}],"signatures":[{"id":3784,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":76}],"parameters":[{"id":3785,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3782]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":68}]}}}]},{"id":3786,"name":"option","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":11}],"signatures":[{"id":3787,"name":"option","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select a single ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nwith a given description.\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/by\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.option(\'Poland\').from(Countries.dropdown()),\\n    Ensure.that(\\n      Selected.optionIn(Countries.dropdown()),\\n      equals(\'Poland\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.optionIn`"},{"kind":"text","text":"](/api/web/class/Selected/#optionIn)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":11}],"parameters":[{"id":3788,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Text of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":3789,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3790,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":48}],"type":{"type":"reflection","declaration":{"id":3791,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":54}],"signatures":[{"id":3792,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":54}],"parameters":[{"id":3793,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3790]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":46}]}}}]},{"id":3794,"name":"options","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":11}],"signatures":[{"id":3795,"name":"options","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select multiple ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nidentified by their descriptions.\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n##### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.options(\'Poland\', \'United States\').from(Countries.dropdown()),\\n    Ensure.that(\\n      Selected.optionsIn(Countries.dropdown()),\\n      equals([ \'Poland\', \'United States\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.optionsIn`"},{"kind":"text","text":"](/api/web/class/Selected/#optionsIn)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":11}],"parameters":[{"id":3796,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Text of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" elements  ](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3797,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3798,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":71}],"type":{"type":"reflection","declaration":{"id":3799,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":77}],"signatures":[{"id":3800,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":77}],"parameters":[{"id":3801,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3798]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":69}]}}}]},{"id":3802,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3803,"name":"new Select","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3769,"name":"Select","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3802]},{"title":"Methods","children":[3770,3778,3786,3794]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":18,"character":13}],"permalink":"/api/web/class/Select","categories":[],"previousId":3733,"nextId":3804},{"id":3804,"name":"Switch","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/), such as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\nPlease note that when the ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) implementing ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/) represents an ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe),\\nusing ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) will result in switching the top-level browsing context to that ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe).\\n\\nWhen the ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) represents any other [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement),\\nusing ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) sets ["},{"kind":"code","text":"`HTMLElement#focus`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus)\\non the specified element. Assuming it can be focused.\\n\\n**Note:** The focused element is the element which will receive keyboard [press](/api/web/class/Press/) events by default.\\n\\n## Perform activities in the context of an iframe\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Enter, PageElement, Switch } from \'@serenity-js/web\'\\n\\n// Lean Page Object describing a login form, embedded in an iframe\\nclass LoginForm {\\n  static iframe = () =>\\n    PageElement.located(By.css(\'iframe\'))\\n      .describedAs(\'login form\')\\n\\n  static usernameField = () =>\\n    PageElement.located(By.css(\'[data-testid=\\"username\\"]\'))\\n      .describedAs(\'username field\')\\n\\n  static passwordField = () =>\\n    PageElement.located(By.css(\'[data-testid=\\"password\\"]\'))\\n      .describedAs(\'password field\')\\n\\n  static submitButton = () =>\\n    PageElement.located(By.css(\'button[type=\\"submit\\"]\'))\\n      .describedAs(\'submit button\')\\n }\\n\\n await actorCalled(\'Francesca\')\\n   .attemptsTo(\\n     Switch.to(LoginForm.iframe).and(\\n       Enter.theValue(\'francesca@example.org\').into(LoginForm.usernameField()),\\n       Enter.theValue(\'correct-horse-battery-staple\').into(LoginForm.passwordField()),\\n       Click.on(LoginForm.submitButton()),\\n     )\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Perform activities in the context of another page\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Click, Enter, Switch } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nawait actorCalled(\'Francesca\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Switch.to(Page.whichName(startsWith(\'popup\'))).and(\\n      // perform some activities in the context of the new window\\n\\n      // optionally, close the browser tab\\n      Page.current().close(),\\n    ),\\n\\n    // Note that switching back to the original page happens automatically\\n    // after the last activity from the list finishes\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Perform activities in the context of a focused page element\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Key, PageElement, Press, Switch, Value } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst inputField = () =>\\n  PageElement.located(By.css(\'input\'));\\n\\nawait actorCalled(\'Francesca\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Switch.to(inputField()).and(\\n      Press.the(\'h\', \'e\', \'l\', \'l\', \'o\'),\\n      Press.the(Key.Tab),\\n    ),\\n    Ensure.that(Value.of(inputField()), equals(\'hello\'))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)\\n- ["},{"kind":"code","text":"`SwitchableOrigin`"},{"kind":"text","text":"](/api/web/interface/SwitchableOrigin/)"}]},"children":[{"id":3805,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":115,"character":11}],"signatures":[{"id":3806,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/),\\nsuch as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":115,"character":11}],"parameters":[{"id":3807,"name":"switchable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4851,"name":"Switchable","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3804,"name":"Switch","package":"@serenity-js/web"}}]},{"id":3829,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3830,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3831,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3832,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3833,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3834,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3835,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3835]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3841,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3842,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3822,"name":"and","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":132,"character":4}],"signatures":[{"id":3823,"name":"and","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/),\\nsuch as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/),\\nperform a sequence of "},{"kind":"code","text":"`activities`"},{"kind":"text","text":", and then switch the context back."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":132,"character":4}],"parameters":[{"id":3824,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of activities to perform"}]},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"}}]},{"id":3825,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":139,"character":10}],"signatures":[{"id":3826,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":139,"character":10}],"parameters":[{"id":3827,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3805,3829,3831,3841,3822,3825]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":106,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/Switch","categories":[],"previousId":3769,"nextId":3843},{"id":3843,"name":"TakeScreenshot","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/)\\nwho has the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto take a screenshot and emit an artifact,\\nwhich can then be persisted by ["},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":"](/api/core/class/ArtifactArchiver/)\\nand reported by [Serenity BDD reporter](/api/serenity-bdd).\\n\\n#### Taking a screenshot\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Navigate, TakeScreenshot } from \'@serenity-js/protractor\';\\n\\nawait actorCalled(\'Tania\')\\n  .attemptsTo(\\n    Navigate.to(\'/app\'),\\n    TakeScreenshot.of(\'my app\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`CollectsArtifacts`"},{"kind":"text","text":"](/api/core/interface/CollectsArtifacts/)\\n- ["},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":"](/api/core/class/ArtifactArchiver/)"}]},"children":[{"id":3844,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":44,"character":11}],"signatures":[{"id":3845,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":44,"character":11}],"parameters":[{"id":3846,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name to give the emitted artifact"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3865,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3866,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3867,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3868,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3869,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3870,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3871,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3871]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3877,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3878,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3861,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":55,"character":10}],"signatures":[{"id":3862,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":55,"character":10}],"parameters":[{"id":3863,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3844,3865,3867,3877,3861]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":36,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/TakeScreenshot","categories":[],"previousId":3804,"nextId":3219},{"id":3879,"name":"ArgumentDehydrator","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":3880,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":16,"character":4}],"signatures":[{"id":3881,"name":"new ArgumentDehydrator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":16,"character":4}],"typeParameter":[{"id":3882,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":3883,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3884,"name":"shouldReference","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":3885,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":17,"character":42}],"signatures":[{"id":3886,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":17,"character":42}],"parameters":[{"id":3887,"name":"item","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":3882,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true}}}]}}},{"id":3888,"name":"transformation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":3889,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":18,"character":41}],"signatures":[{"id":3890,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":18,"character":41}],"parameters":[{"id":3891,"name":"item","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3882,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"reference","target":3883,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3883,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":3879,"typeArguments":[{"type":"reference","target":3882,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true},{"type":"reference","target":3883,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true}],"name":"ArgumentDehydrator","package":"@serenity-js/web"}}]},{"id":3900,"name":"dehydrate","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":17}],"signatures":[{"id":3901,"name":"dehydrate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":17}],"parameters":[{"id":3902,"name":"inputArgs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"tuple","elements":[{"type":"reflection","declaration":{"id":3903,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3904,"name":"argsCount","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":63}],"type":{"type":"intrinsic","name":"number"}},{"id":3905,"name":"refsCount","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":82}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[3904,3905]}],"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":61}]}},{"type":"rest","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}]}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3880]},{"title":"Methods","children":[3900]}],"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":15,"character":13}],"typeParameters":[{"id":3914,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":3915,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/web/class/ArgumentDehydrator","categories":[],"previousId":3302,"nextId":3916},{"id":3916,"name":"BrowserCapabilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Basic meta-data about the browser used in the test\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb.browserCapabilities`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/#browserCapabilities)"}]},"children":[{"id":3917,"name":"platformName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the operating system platform the test is executed on, like "},{"kind":"code","text":"`darwin`"},{"kind":"text","text":", "},{"kind":"code","text":"`linux`"},{"kind":"text","text":" or "},{"kind":"code","text":"`windows`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3918,"name":"browserName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the Web browser the test is executed in, like "},{"kind":"code","text":"`chrome`"},{"kind":"text","text":", "},{"kind":"code","text":"`firefox`"},{"kind":"text","text":" or "},{"kind":"code","text":"`safari`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3919,"name":"browserVersion","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Version number of the browser the test is executed in."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3917,3918,3919]}],"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":10,"character":17}],"permalink":"/api/web/interface/BrowserCapabilities","categories":[],"previousId":3879,"nextId":3920},{"id":3920,"name":"BrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represents the pages open in the current browsing context.\\n\\nYou\'ll need to use this class directly only if you\'re planning to integrate Serenity/JS\\nwith a new Web integration tool."}]},"children":[{"id":3921,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3922,"name":"new BrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":3923,"name":"Page_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":4290,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}}],"type":{"type":"reference","target":3920,"typeArguments":[{"type":"reference","target":3923,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}],"name":"BrowsingSession","package":"@serenity-js/web"}}]},{"id":3926,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":18,"character":10}],"signatures":[{"id":3927,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":18,"character":10}],"parameters":[{"id":3928,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3923,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3931,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":37,"character":20}],"signatures":[{"id":3932,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this browsing session."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":37,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3933,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":42,"character":10}],"signatures":[{"id":3934,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":42,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3923,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3935,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":55,"character":4}],"signatures":[{"id":3936,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":55,"character":4}],"parameters":[{"id":3937,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":3923,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":3938,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":67,"character":4}],"signatures":[{"id":3939,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":67,"character":4}],"parameters":[{"id":3940,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":3941,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":77,"character":10}],"signatures":[{"id":3942,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":77,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3923,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3943,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":84,"character":4}],"signatures":[{"id":3944,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":84,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}]},{"id":3945,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":106,"character":10}],"signatures":[{"id":3946,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":106,"character":10}],"parameters":[{"id":3947,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3923,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3948,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":113,"character":10}],"signatures":[{"id":3949,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":113,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3921]},{"title":"Methods","children":[3926,3931,3933,3935,3938,3941,3943,3945,3948]}],"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":14,"character":22}],"typeParameters":[{"id":3950,"name":"Page_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":4290,"name":"Page","package":"@serenity-js/web"}}],"permalink":"/api/web/class/BrowsingSession","categories":[],"previousId":3916,"nextId":3951},{"id":3951,"name":"Cookie","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"A Screenplay Pattern-style model responsible for managing cookies available to the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).\\n\\n## Checking if a cookie exists\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, isPresent } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(\\n      Cookie.called(\'example-cookie-name\'),\\n      isPresent()\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Setting a cookie\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, isPresent, not } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(Cookie.called(\'example-cookie-name\'), not(isPresent())),\\n\\n    Cookie.set({\\n      name:  \'favourite\',\\n      value: \'triple chocolate\',\\n    }),\\n\\n    Ensure.that(Cookie.called(\'example-cookie-name\'), isPresent()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Reading a cookie\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(\\n      Cookie.called(\'some-cookie-name\').value(),\\n      equals(\'triple chocolate\')\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/)\\n- ["},{"kind":"code","text":"`Page.cookie`"},{"kind":"text","text":"](/api/web/class/Page/#cookie)"}]},"children":[{"id":3952,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":84,"character":11}],"signatures":[{"id":3953,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/) identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":84,"character":11}],"parameters":[{"id":3954,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":3955,"name":"set","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":102,"character":11}],"signatures":[{"id":3956,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets a cookie for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/). Note that ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/) can be either a plain-old JavaScript object, or an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties).\\n\\n:::info\\nMake sure that the actor performing this interaction is on the page that should receive the cookie.\\nBecause of browser security restrictions, an actor can\'t set a cookie for an arbitrary page without being on that page.\\n:::"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":102,"character":11}],"parameters":[{"id":3957,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":3958,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3959,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":18,"character":4}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3960,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":23,"character":4}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3961,"name":"domain","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The domain this cookie is visible to.\\n\\nDefaults to the current browsing context\'s document\'s URL when setting a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":30,"character":4}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3962,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cookie path. Defaults to \\"/\\" when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":35,"character":4}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3963,"name":"expiry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The [timestamp](/api/core/class/Timestamp/) describing the point in time when this cookie expires."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":40,"character":4}],"type":{"type":"reflection","declaration":{"id":3964,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3965,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":16,"character":13}],"type":{"type":"reflection","declaration":{"id":3966,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4010,"name":"[toPrimitive]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3967,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3968,"name":"toDateString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3969,"name":"toTimeString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3970,"name":"toLocaleString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3971,"name":"toLocaleDateString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3972,"name":"toLocaleTimeString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3973,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3974,"name":"getTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3975,"name":"getFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3976,"name":"getUTCFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3977,"name":"getMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3978,"name":"getUTCMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3979,"name":"getDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3980,"name":"getUTCDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3981,"name":"getDay","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3982,"name":"getUTCDay","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3983,"name":"getHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3984,"name":"getUTCHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3985,"name":"getMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3986,"name":"getUTCMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3987,"name":"getSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3988,"name":"getUTCSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3989,"name":"getMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3990,"name":"getUTCMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3991,"name":"getTimezoneOffset","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3992,"name":"setTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3993,"name":"setMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3994,"name":"setUTCMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3995,"name":"setSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3996,"name":"setUTCSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3997,"name":"setMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3998,"name":"setUTCMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3999,"name":"setHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4000,"name":"setUTCHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4001,"name":"setDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4002,"name":"setUTCDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4003,"name":"setMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4004,"name":"setUTCMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4005,"name":"setFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4006,"name":"setUTCFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4007,"name":"toUTCString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4008,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4009,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[4010,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,3992,3993,3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4009]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":4011,"name":"diff","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":22,"character":4}]},{"id":4012,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":23,"character":4}]},{"id":4013,"name":"less","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":24,"character":4}]},{"id":4014,"name":"isBefore","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":25,"character":4}]},{"id":4015,"name":"isBeforeOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":26,"character":4}]},{"id":4016,"name":"isAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":27,"character":4}]},{"id":4017,"name":"isAfterOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":28,"character":4}]},{"id":4018,"name":"toMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":29,"character":4}]},{"id":4019,"name":"toSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":30,"character":4}]},{"id":4020,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":31,"character":4}]},{"id":4021,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":32,"character":4}]},{"id":4022,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":33,"character":4}]},{"id":4023,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":34,"character":4}]},{"id":4024,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[3965]},{"title":"Methods","children":[4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021,4022,4023,4024]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":4025,"name":"httpOnly","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is an HTTP-only cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":46,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":4026,"name":"secure","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is a secure cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":52,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":4027,"name":"sameSite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie applies to a "},{"kind":"code","text":"`SameSite`"},{"kind":"text","text":" policy.\\nDefaults to "},{"kind":"code","text":"`None`"},{"kind":"text","text":" if omitted when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":58,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"Lax"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"Strict"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"None"}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[3959,3960,3961,3962,3963,4025,4026,4027]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4028,"name":"deleteAll","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":127,"character":11}],"signatures":[{"id":4029,"name":"deleteAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to delete all cookies available to the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":127,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4035,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":143,"character":4}],"signatures":[{"id":4036,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":143,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":4037,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":153,"character":10}],"signatures":[{"id":4038,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":153,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4039,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":170,"character":10}],"signatures":[{"id":4040,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":170,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4041,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":178,"character":10}],"signatures":[{"id":4042,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4043,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":186,"character":10}],"signatures":[{"id":4044,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":186,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4045,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":197,"character":10}],"signatures":[{"id":4046,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":197,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4047,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":208,"character":10}],"signatures":[{"id":4048,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":208,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4049,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":219,"character":10}],"signatures":[{"id":4050,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":219,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4051,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":227,"character":13}],"signatures":[{"id":4052,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes a given cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":227,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[3952,3955,4028,4035,4037,4039,4041,4043,4045,4047,4049,4051]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":77,"character":22}],"implementedTypes":[{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/Cookie","categories":[],"previousId":3920,"nextId":4057},{"id":4057,"name":"CookieData","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A data structure describing a ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/) to be set, or one that\'s been read.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)\\n- ["},{"kind":"code","text":"`Page.cookie`"},{"kind":"text","text":"](/api/web/class/Page/#cookie)"}]},"children":[{"id":4058,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":18,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4059,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4060,"name":"domain","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The domain this cookie is visible to.\\n\\nDefaults to the current browsing context\'s document\'s URL when setting a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":30,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4061,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cookie path. Defaults to \\"/\\" when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":35,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4062,"name":"expiry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The [timestamp](/api/core/class/Timestamp/) describing the point in time when this cookie expires."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":40,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}},{"id":4063,"name":"httpOnly","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is an HTTP-only cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4064,"name":"secure","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is a secure cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4065,"name":"sameSite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie applies to a "},{"kind":"code","text":"`SameSite`"},{"kind":"text","text":" policy.\\nDefaults to "},{"kind":"code","text":"`None`"},{"kind":"text","text":" if omitted when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":58,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"Lax"},{"type":"literal","value":"Strict"},{"type":"literal","value":"None"}]}}],"groups":[{"title":"Properties","children":[4058,4059,4060,4061,4062,4063,4064,4065]}],"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":13,"character":17}],"permalink":"/api/web/interface/CookieData","categories":[],"previousId":3951,"nextId":4174},{"id":4174,"name":"Key","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents keyboard keys that aren\'t text, and that can be used with the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Press`"},{"kind":"text","text":"](/api/web/class/Press/).\\n\\n**Note:** Modifier keys like ["},{"kind":"code","text":"`Key.Shift`"},{"kind":"text","text":"](/api/web/class/Key/#Shift), ["},{"kind":"code","text":"`Key.Alt`"},{"kind":"text","text":"](/api/web/class/Key/#Alt) and ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta) (a.k.a. \\"Command\\" on Mac) will stay pressed,\\nso there\'s no need to depress them.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Press`"},{"kind":"text","text":"](/api/web/class/Press/)\\n- ["},{"kind":"code","text":"`Page.sendKeys`"},{"kind":"text","text":"](/api/web/class/Page/#sendKeys)\\n- [W3C WebDriver Spec: Keyboard Actions](https://w3c.github.io/webdriver/webdriver-spec.html#keyboard-actions)\\n- [Selenium WebDriver: Inputs](https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/lib/input.js#L46)\\n- [WebdriverIO: Constants](https://github.com/webdriverio/webdriverio/blob/main/packages/wdio-utils/src/constants.ts#L5)"}]},"children":[{"id":4175,"name":"Alt","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":18,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4176,"name":"ArrowDown","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":19,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4177,"name":"ArrowLeft","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":20,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4178,"name":"ArrowRight","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":21,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4179,"name":"ArrowUp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":22,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4180,"name":"Backspace","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":23,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4181,"name":"Cancel","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":24,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4182,"name":"Clear","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":25,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4183,"name":"Control","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":26,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4184,"name":"Delete","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":27,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4185,"name":"End","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":28,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4186,"name":"Enter","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":29,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4187,"name":"Escape","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":30,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4188,"name":"F1","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":31,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4189,"name":"F2","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":32,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4190,"name":"F3","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":33,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4191,"name":"F4","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":34,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4192,"name":"F5","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":35,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4193,"name":"F6","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":36,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4194,"name":"F7","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":37,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4195,"name":"F8","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":38,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4196,"name":"F9","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":39,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4197,"name":"F10","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":40,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4198,"name":"F11","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":41,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4199,"name":"F12","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":42,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4200,"name":"Help","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":43,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4201,"name":"Home","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":44,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4202,"name":"Insert","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":45,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4203,"name":"Meta","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":46,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4204,"name":"Numpad0","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":47,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4205,"name":"Numpad1","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":48,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4206,"name":"Numpad2","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":49,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4207,"name":"Numpad3","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":50,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4208,"name":"Numpad4","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":51,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4209,"name":"Numpad5","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":52,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4210,"name":"Numpad6","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":53,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4211,"name":"Numpad7","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":54,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4212,"name":"Numpad8","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":55,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4213,"name":"Numpad9","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":56,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4214,"name":"NumpadAdd","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":57,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4215,"name":"NumpadDecimal","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":58,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4216,"name":"NumpadDivide","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":59,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4217,"name":"NumpadEqual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":60,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4218,"name":"NumpadMultiply","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":61,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4219,"name":"NumpadSubtract","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":62,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4220,"name":"PageDown","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":63,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4221,"name":"PageUp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":64,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4222,"name":"Pause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":65,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4223,"name":"Semicolon","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":66,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4224,"name":"Shift","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":67,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4225,"name":"Space","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":68,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4226,"name":"Tab","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":69,"character":18}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4227,"name":"isKey","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":71,"character":18}],"signatures":[{"id":4228,"name":"isKey","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":71,"character":18}],"parameters":[{"id":4229,"name":"maybeKey","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeKey","asserts":false,"targetType":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"}}}]},{"id":4230,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":76,"character":4}],"signatures":[{"id":4231,"name":"new Key","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":76,"character":4}],"parameters":[{"id":4232,"name":"devtoolsName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4233,"name":"utf16codePoint","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4234,"name":"isModifier","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"}}]},{"id":4235,"name":"devtoolsName","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":77,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4236,"name":"utf16codePoint","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":78,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4237,"name":"isModifier","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":79,"character":24}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":4238,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":83,"character":4}],"signatures":[{"id":4239,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":83,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[4230]},{"title":"Properties","children":[4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4235,4236,4237]},{"title":"Methods","children":[4227,4238]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":17,"character":13}],"permalink":"/api/web/class/Key","categories":[],"previousId":4057,"nextId":4240},{"id":4240,"name":"Locator","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/) uses a ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/) to locate a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\nwithin the ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/)\\n- ["},{"kind":"code","text":"`Page.locate`"},{"kind":"text","text":"](/api/web/class/Page/#locate)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)"}]},"children":[{"id":4248,"name":"selector","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":26,"character":24}],"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}},{"id":4249,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":31,"character":20}],"signatures":[{"id":4250,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":31,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4711,"name":"RootLocator.nativeElement"}}],"overwrites":{"type":"reference","target":4710,"name":"RootLocator.nativeElement"}},{"id":4251,"name":"allNativeElements","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":32,"character":20}],"signatures":[{"id":4252,"name":"allNativeElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":32,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4253,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":34,"character":10}],"signatures":[{"id":4254,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":34,"character":10}],"parameters":[{"id":4255,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4702,"name":"RootLocator.switchToFrame"}}],"overwrites":{"type":"reference","target":4701,"name":"RootLocator.switchToFrame"}},{"id":4256,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":38,"character":10}],"signatures":[{"id":4257,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":38,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4705,"name":"RootLocator.switchToParentFrame"}}],"overwrites":{"type":"reference","target":4704,"name":"RootLocator.switchToParentFrame"}},{"id":4258,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":42,"character":10}],"signatures":[{"id":4259,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":42,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4707,"name":"RootLocator.switchToMainFrame"}}],"overwrites":{"type":"reference","target":4706,"name":"RootLocator.switchToMainFrame"}},{"id":4262,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":48,"character":13}],"signatures":[{"id":4263,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":48,"character":13}],"parameters":[{"id":4264,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4697,"typeArguments":[{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4265,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":49,"character":13}],"signatures":[{"id":4266,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":49,"character":13}],"parameters":[{"id":4267,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4268,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":50,"character":13}],"signatures":[{"id":4269,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":50,"character":13}],"parameters":[{"id":4270,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4274,"name":"element","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":77,"character":13}],"signatures":[{"id":4275,"name":"element","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":77,"character":13}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4276,"name":"allElements","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":79,"character":13}],"signatures":[{"id":4277,"name":"allElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":79,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4278,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":81,"character":4}],"signatures":[{"id":4279,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":81,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":4713,"name":"RootLocator.toString"}}],"overwrites":{"type":"reference","target":4712,"name":"RootLocator.toString"}},{"id":4280,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom [Node.js inspection method](https://nodejs.org/api/util.html#utilinspectcustom)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":88,"character":4}],"type":{"type":"reflection","declaration":{"id":4281,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"signatures":[{"id":4282,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"parameters":[{"id":4283,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4284,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":4285,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"...","overwrites":{"type":"reference","target":4714,"name":"RootLocator.[custom]"}},{"id":4286,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"signatures":[{"id":4287,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":4709,"name":"RootLocator.isPresent"}}],"inheritedFrom":{"type":"reference","target":4708,"name":"RootLocator.isPresent"}}],"groups":[{"title":"Properties","children":[4248,4280]},{"title":"Methods","children":[4249,4251,4253,4256,4258,4262,4265,4268,4274,4276,4278,4286]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":21,"character":22}],"typeParameters":[{"id":4288,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4289,"name":"Native_Selector_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":4697,"typeArguments":[{"type":"reference","target":4288,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}],"permalink":"/api/web/class/Locator","categories":[],"previousId":4174,"nextId":4290},{"id":4290,"name":"Page","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style model that enables interactions with a Web page\\nrendered in a Web browser tab.\\n\\n## Referring to the current page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Ensure.that(Page.current().title(), endsWith(\'Serenity/JS\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Switching to another open page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Switch, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n\\n  Switch.to(Page.whichUrl(startsWith(\'https://github.com\')))\\n\\n  Ensure.that(\\n    Page.current().url().href,\\n    equals(\'https://github.com/serenity-js/serenity-js\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Retrieving information about another open page\\n\\nYou can retrieve information about another open page without having to explicitly switch to it:\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n  Ensure.that(\\n    Page.whichUrl(startsWith(\'https://github.com\')).url().href,\\n    equals(\'https://github.com/serenity-js/serenity-js\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Performing activities in the context of another page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n\\n  // Serenity/JS GitHub repository opens in a new browser tab\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n\\n  // Switch to the newly opened page and perform an assertion\\n  Switch.to(Page.whichUrl(startsWith(\'https://github.com\')))\\n    .and(\\n      Ensure.that(\\n        Page.current().url().href,\\n        equals(\'https://github.com/serenity-js/serenity-js\')\\n      )\\n    ),\\n  // Automatically switch back to the original page\\n\\n  Ensure.that(Page.current().url().href, equals(\'https://serenity-js.org\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4291,"name":"current","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":138,"character":11}],"signatures":[{"id":4292,"name":"current","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) representing the currently active ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":138,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4293,"name":"whichName","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":162,"character":11}],"signatures":[{"id":4294,"name":"whichName","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.name`"},{"kind":"text","text":"](/api/web/class/Page/#name)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired name\\n\\n"},{"kind":"code","text":"```ts\\nimport { includes } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichName(includes(`photo-gallery`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":162,"character":11}],"parameters":[{"id":4295,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4296,"name":"whichTitle","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":192,"character":11}],"signatures":[{"id":4297,"name":"whichTitle","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.title`"},{"kind":"text","text":"](/api/web/class/Page/#title)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired title\\n\\n"},{"kind":"code","text":"```ts\\nimport { includes } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichTitle(includes(`Summer collection`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":192,"character":11}],"parameters":[{"id":4298,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4299,"name":"whichUrl","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":222,"character":11}],"signatures":[{"id":4300,"name":"whichUrl","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.url`"},{"kind":"text","text":"](/api/web/class/Page/#url)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired URL\\n\\n"},{"kind":"code","text":"```ts\\nimport { endsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichUrl(endsWith(`/gallery.html`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":222,"character":11}],"parameters":[{"id":4301,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4310,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":248,"character":4}],"signatures":[{"id":4311,"name":"new Page","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":248,"character":4}],"typeParameter":[{"id":4312,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4313,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3920,"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":4312,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}},{"id":4314,"name":"rootLocator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4697,"typeArguments":[{"type":"reference","target":4312,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}},{"id":4315,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4158,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":4316,"name":"id","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":4312,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}}]},{"id":4320,"name":"id","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":252,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":4321,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":265,"character":13}],"signatures":[{"id":4322,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) wrapping a native element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":265,"character":13}],"parameters":[{"id":4323,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4312,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4312,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4324,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":272,"character":13}],"signatures":[{"id":4325,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), retrieving an element located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":272,"character":13}],"parameters":[{"id":4326,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4312,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4327,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":280,"character":13}],"signatures":[{"id":4328,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/), retrieving a collection of elements located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":280,"character":13}],"parameters":[{"id":4329,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4482,"typeArguments":[{"type":"reference","target":4312,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElements","package":"@serenity-js/web"}}]},{"id":4330,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":295,"character":13}],"signatures":[{"id":4331,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Navigate to a given destination, specified as an absolute URL\\nor a path relative to any base URL configured in your web test integration tool.\\n\\n#### Learn more\\n\\n- [WebdriverIO: Configuration Options](https://webdriver.io/docs/options/#baseurl)\\n- [Playwright: Browser](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright: Test Options](https://playwright.dev/docs/api/class-testoptions#test-options-base-url)\\n- [Protractor: Configuration](https://github.com/angular/protractor/blob/master/lib/config.ts)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":295,"character":13}],"parameters":[{"id":4332,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4333,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":304,"character":13}],"signatures":[{"id":4334,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to traverse one step backward in the joint session history\\nof the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) (the current top-level browsing context).\\n\\nThis is equivalent to pressing the back button in the browser UI,\\nor calling ["},{"kind":"code","text":"`window.history.back`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/History/back)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":304,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4335,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":313,"character":13}],"signatures":[{"id":4336,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to traverse one step forward in the joint session history\\nof the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) (the current top-level browsing context).\\n\\nThis is equivalent to pressing the back button in the browser UI,\\nor calling ["},{"kind":"code","text":"`window.history.forward`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/History/forward)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":313,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4337,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":318,"character":13}],"signatures":[{"id":4338,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to reload the ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) in the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":318,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4339,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":326,"character":13}],"signatures":[{"id":4340,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Send a sequence of ["},{"kind":"code","text":"`Key`"},{"kind":"text","text":"](/api/web/class/Key/) strokes to the active element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":326,"character":13}],"parameters":[{"id":4341,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Keys to enter"}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4342,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":371,"character":13}],"signatures":[{"id":4343,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a command to execute JavaScript in the context of the currently selected frame or window.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":" or "},{"kind":"code","text":"`WebElement`"},{"kind":"text","text":".\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nThe script may refer to any variables accessible from the current window.\\nFurthermore, the script will execute in the window\'s context, thus "},{"kind":"code","text":"`document`"},{"kind":"text","text":" may be used to refer\\nto the current document. Any local variables will not be available once the script has finished executing,\\nthough global variables will persist.\\n\\nIf the script has a return value (i.e. if the script contains a "},{"kind":"code","text":"`return`"},{"kind":"text","text":" statement),\\nthen the following steps will be taken for resolving this functions return value:\\n\\n- For a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), the value will resolve to a [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\\n- "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" return values will resolve to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", and "},{"kind":"code","text":"`string`"},{"kind":"text","text":" values will resolve as is\\n- Functions will resolve to their string representation\\n- For arrays and objects, each member item will be converted according to the rules above\\n\\n#### Use injected JavaScript to retrieve information about a HTMLElement\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  return arguments[0].tagName;\\n`, PageElement.located(By.css(\'h1\')).describedAs(\'header\'))\\n\\n// returns a Promise that resolves to \'h1\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Selenium WebDriver: JavaScript Executor](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/JavascriptExecutor.html#executeAsyncScript-java.lang.String-java.lang.Object...-)\\n- ["},{"kind":"code","text":"`Page.lastScriptExecutionResult`"},{"kind":"text","text":"](/api/web/class/Page/#lastScriptExecutionResult)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":371,"character":13}],"typeParameter":[{"id":4344,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4345,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":4346,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":4347,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":372,"character":26}],"signatures":[{"id":4348,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":372,"character":26}],"parameters":[{"id":4349,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4345,"name":"InnerArguments","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":4344,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}}]}}]}},{"id":4350,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4345,"name":"InnerArguments","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4344,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4351,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":431,"character":13}],"signatures":[{"id":4352,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a command to execute asynchronous JavaScript in the context of the currently selected frame or window.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":" or "},{"kind":"code","text":"`WebElement`"},{"kind":"text","text":"\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nUnlike executing synchronous JavaScript with ["},{"kind":"code","text":"`Page.executeScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeScript),\\nscripts executed with this function must explicitly signal they are finished by invoking the provided callback.\\n\\nThis callback will always be injected into the executed function as the last argument,\\nand thus may be referenced with "},{"kind":"code","text":"`arguments[arguments.length - 1]`"},{"kind":"text","text":".\\n\\nThe following steps will be taken for resolving this functions return value against\\nthe first argument to the script\'s callback function:\\n\\n- For a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), the value will resolve to a [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\\n- "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" return values will resolve to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", and "},{"kind":"code","text":"`string`"},{"kind":"text","text":" values will resolve as is\\n- Functions will resolve to their string representation\\n- For arrays and objects, each member item will be converted according to the rules above\\n\\n#### Perform a sleep in the browser under test>\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  var delay    = arguments[0];\\n  var callback = arguments[arguments.length - 1];\\n\\n  window.setTimeout(callback, delay);\\n`, 500)\\n```"},{"kind":"text","text":"\\n\\n#### Return a value asynchronously\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  var callback = arguments[arguments.length - 1];\\n\\n  callback(\'some return value\')\\n`).then(value => doSomethingWithThe(value))\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Selenium WebDriver: JavaScript Executor](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/JavascriptExecutor.html#executeAsyncScript-java.lang.String-java.lang.Object...-)\\n- ["},{"kind":"code","text":"`Page.lastScriptExecutionResult`"},{"kind":"text","text":"](/api/web/class/Page/#lastScriptExecutionResult)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":431,"character":13}],"typeParameter":[{"id":4353,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4354,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":4355,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":4356,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":26}],"signatures":[{"id":4357,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":26}],"parameters":[{"id":4358,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":4354,"name":"Parameters","package":"@serenity-js/web","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":4359,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":75}],"signatures":[{"id":4360,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":75}],"parameters":[{"id":4361,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4353,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":4362,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4354,"name":"Parameters","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4353,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4363,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":440,"character":13}],"signatures":[{"id":4364,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the last result of calling ["},{"kind":"code","text":"`Page.executeAsyncScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeAsyncScript)\\nor ["},{"kind":"code","text":"`Page.executeScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeScript)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":440,"character":13}],"typeParameter":[{"id":4365,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":4365,"name":"R","package":"@serenity-js/web","refersToTypeParameter":true}}]},{"id":4366,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":451,"character":13}],"signatures":[{"id":4367,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Take a screenshot of the top-level browsing context\'s viewport."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`BrowserWindowClosedError`"},{"kind":"text","text":"](/api/web/class/BrowserWindowClosedError/)\\n When the page you\'re trying to take the screenshot of has already been closed"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise that will resolve to a base64-encoded screenshot PNG"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":451,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4368,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":458,"character":13}],"signatures":[{"id":4369,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a cookie identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":" and visible to this ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":458,"character":13}],"parameters":[{"id":4370,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4371,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":466,"character":13}],"signatures":[{"id":4372,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Adds a single cookie with ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/) to the cookie store associated\\nwith the active ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)\'s address."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":466,"character":13}],"parameters":[{"id":4373,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4057,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4374,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":471,"character":13}],"signatures":[{"id":4375,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes all the cookies."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":471,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4376,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":479,"character":13}],"signatures":[{"id":4377,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the document title of the current top-level browsing context, equivalent to calling "},{"kind":"code","text":"`document.title`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- [Mozilla Developer Network: Document title](https://developer.mozilla.org/en-US/docs/Web/API/Document/title)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":479,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4378,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":484,"character":13}],"signatures":[{"id":4379,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the [URL](https://nodejs.org/api/url.html) of the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":484,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4380,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":489,"character":13}],"signatures":[{"id":4381,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the name of the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":489,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4382,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":494,"character":13}],"signatures":[{"id":4383,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given window / tab / page is open and can be switched to, e.g. it\'s not closed."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":494,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4384,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":13}],"signatures":[{"id":4385,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the actual viewport size available for the given page,\\nexcluding any scrollbars."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":4386,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4387,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":39}],"type":{"type":"intrinsic","name":"number"}},{"id":4388,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":54}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4387,4388]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":37}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4389,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":13}],"signatures":[{"id":4390,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets ths size of the visible viewport to desired dimensions."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":13}],"parameters":[{"id":4391,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4392,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4393,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":37}],"type":{"type":"intrinsic","name":"number"}},{"id":4394,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":52}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4393,4394]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":35}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4395,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":518,"character":10}],"signatures":[{"id":4396,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":518,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4854,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":4853,"name":"Switchable.switchTo"}}],"implementationOf":{"type":"reference","target":4852,"name":"Switchable.switchTo"}},{"id":4397,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":534,"character":13}],"signatures":[{"id":4398,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes this page."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":534,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4399,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":539,"character":13}],"signatures":[{"id":4400,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes any open pages, except for this one."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":539,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4401,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":544,"character":4}],"signatures":[{"id":4402,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":544,"character":4}],"type":{"type":"reference","target":4158,"name":"ModalDialogHandler","package":"@serenity-js/web"}}]},{"id":4403,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":551,"character":4}],"signatures":[{"id":4404,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":551,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[4310]},{"title":"Properties","children":[4320]},{"title":"Methods","children":[4291,4293,4296,4299,4321,4324,4327,4330,4333,4335,4337,4339,4342,4351,4363,4366,4368,4371,4374,4376,4378,4380,4382,4384,4389,4395,4397,4399,4401,4403]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":133,"character":22}],"typeParameters":[{"id":4405,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"implementedTypes":[{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"},{"type":"reference","target":4851,"name":"Switchable","package":"@serenity-js/web"}],"permalink":"/api/web/class/Page","categories":[],"previousId":4240,"nextId":4406},{"id":4406,"name":"PageElement","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to identify\\na single Web element located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/).\\n\\n## Learn more\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4407,"name":"from","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":25,"character":11}],"signatures":[{"id":4408,"name":"from","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":25,"character":11}],"typeParameter":[{"id":4409,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4410,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4409,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4409,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4409,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4411,"name":"located","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":33,"character":11}],"signatures":[{"id":4412,"name":"located","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":33,"character":11}],"typeParameter":[{"id":4413,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4414,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4413,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4413,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4415,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":42,"character":11}],"signatures":[{"id":4416,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":42,"character":11}],"typeParameter":[{"id":4417,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4418,"name":"childElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4417,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4417,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4417,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}]}},{"id":4419,"name":"parentElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4417,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4417,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4417,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4420,"name":"html","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":76,"character":11}],"signatures":[{"id":4421,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A static method producing a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be used with ["},{"kind":"code","text":"`PageElements.eachMappedTo`"},{"kind":"text","text":"](/api/web/class/PageElements/#eachMappedTo) method\\nto extract the HTML of each element in a collection.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Navigate, PageElement, By, Text } from \'@serenity-js/web\'\\nimport { includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Debbie\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n\\n  Log.the(\\n    PageElements.located(By.css(\'a\'))\\n      .where(Text, includes(\'modular\'))\\n      .eachMappedTo(PageElement.html())\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":76,"character":11}],"typeParameter":[{"id":4422,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4422,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":4423,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":4}],"signatures":[{"id":4424,"name":"new PageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":4}],"typeParameter":[{"id":4425,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4426,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":4425,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4425,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4427,"name":"locator","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":32}],"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":4425,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}},{"id":4428,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":97,"character":13}],"signatures":[{"id":4429,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a child element that:\\n- matches the given selector\\n- is located within the "},{"kind":"code","text":"`parentElement`"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":97,"character":13}],"parameters":[{"id":4430,"name":"parentElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4425,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4425,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4431,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":147,"character":13}],"signatures":[{"id":4432,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Traverses the element and its parents, heading toward the document root,\\nuntil it finds a parent ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) that matches its associated CSS selector.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```html\\n<div class=\\"form-entry\\">\\n    <input id=\\"username\\" />\\n    <ul class=\\"warnings\\">\\n        <li>Username should be an email address</li>\\n    </ul>\\n</div>\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```typescript\\nclass Username {\\n  static field = () =>\\n    PageElement.located(By.id(\'username\'))\\n      .describedAs(\'username field\')\\n\\n  private static container = () =>\\n    PageElement.located(By.css(\'.form-entry\'))\\n      .describedAs(\'form entry container\')\\n\\n  static warnings = () =>\\n    PageElements.located(By.css(\'ul.warnings li\'))\\n      .describedAs(\'warnings\')\\n      .of(\\n        Username.container().closestTo(Username.field())\\n      )\\n}\\n```"},{"kind":"text","text":"\\n\\n:::info\\nThis method relies on [Element: closest() API](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest),\\nand so is only compatible with locating parent elements specified using the following CSS selectors:\\n- ["},{"kind":"code","text":"`ByCss`"},{"kind":"text","text":"](/api/web/class/ByCss/)\\n- ["},{"kind":"code","text":"`ById`"},{"kind":"text","text":"](/api/web/class/ById/)\\n- ["},{"kind":"code","text":"`ByTagName`"},{"kind":"text","text":"](/api/web/class/ByTagName/)\\n:::"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"#### Learn more\\n- [Element: closest() method](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest)"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":147,"character":13}],"parameters":[{"id":4433,"name":"childElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4425,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4425,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4434,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":152,"character":10}],"signatures":[{"id":4435,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":152,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4425,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4436,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":156,"character":4}],"signatures":[{"id":4437,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":156,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":4438,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":160,"character":13}],"signatures":[{"id":4439,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":160,"character":13}],"parameters":[{"id":4440,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4441,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":161,"character":13}],"signatures":[{"id":4442,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":161,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4443,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":162,"character":13}],"signatures":[{"id":4444,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":162,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4445,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":163,"character":13}],"signatures":[{"id":4446,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":163,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4447,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":164,"character":13}],"signatures":[{"id":4448,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":164,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4449,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":165,"character":13}],"signatures":[{"id":4450,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":165,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4451,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":166,"character":13}],"signatures":[{"id":4452,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":166,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4453,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":167,"character":13}],"signatures":[{"id":4454,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":167,"character":13}],"parameters":[{"id":4455,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4456,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":168,"character":13}],"signatures":[{"id":4457,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":168,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4458,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":170,"character":13}],"signatures":[{"id":4459,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":170,"character":13}],"parameters":[{"id":4460,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4461,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":171,"character":13}],"signatures":[{"id":4462,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":171,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4463,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":172,"character":13}],"signatures":[{"id":4464,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":172,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4465,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":193,"character":13}],"signatures":[{"id":4466,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance method that resolves to the value of the ["},{"kind":"code","text":"`outerHTML`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML) property\\nof the underlying element.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Navigate, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Debbie\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n\\n  Log.the(\\n    PageElement.located(By.css(\'h1\')).html()\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":193,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4467,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":210,"character":13}],"signatures":[{"id":4468,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"When the element represents an ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe),\\ncalling this method switches the current browsing context to the given "},{"kind":"code","text":"`iframe`"},{"kind":"text","text":" context.\\n\\nWhen used with other types of [Web "},{"kind":"code","text":"`Element`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element),\\ncalling this method will have the same result as calling ["},{"kind":"code","text":"`Element.focus()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns an object that allows the caller to switch back\\n to the previous context if needed.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":210,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4854,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":4853,"name":"Switchable.switchTo"}}],"implementationOf":{"type":"reference","target":4852,"name":"Switchable.switchTo"}},{"id":4469,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":216,"character":13}],"signatures":[{"id":4470,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element [has focus](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus).\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":216,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4471,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":224,"character":13}],"signatures":[{"id":4472,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element can be clicked on.\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\nPlease refer to test integration tool-specific documentation for details."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":224,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4473,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":232,"character":13}],"signatures":[{"id":4474,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying\\nelement is not [explicitly disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\\n\\nPlease refer to test integration tool-specific documentation for details."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":232,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4475,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":239,"character":10}],"signatures":[{"id":4476,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the element\\nis present in the [Document Object Model (DOM)](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model),\\n"},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":239,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4477,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":250,"character":13}],"signatures":[{"id":4478,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element:\\n- has a ["},{"kind":"code","text":"`selected`"},{"kind":"text","text":" attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-selected) for "},{"kind":"code","text":"`<option />`"},{"kind":"text","text":" elements\\n- has a ["},{"kind":"code","text":"`checked`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox) attribute for checkboxes\\n\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":250,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4479,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":260,"character":13}],"signatures":[{"id":4480,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element:\\n- is not hidden, so doesn\'t have CSS style like "},{"kind":"code","text":"`display: none`"},{"kind":"text","text":", "},{"kind":"code","text":"`visibility: hidden`"},{"kind":"text","text":" or "},{"kind":"code","text":"`opacity: 0`"},{"kind":"text","text":"\\n- is within the browser viewport\\n- doesn\'t have its centre covered by other elements\\n\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":260,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[4423]},{"title":"Properties","children":[4427]},{"title":"Methods","children":[4407,4411,4415,4420,4428,4431,4434,4436,4438,4441,4443,4445,4447,4449,4451,4453,4456,4458,4461,4463,4465,4467,4469,4471,4473,4475,4477,4479]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":23,"character":22}],"typeParameters":[{"id":4481,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"implementedTypes":[{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"},{"type":"reference","target":4851,"name":"Switchable","package":"@serenity-js/web"}],"permalink":"/api/web/class/PageElement","categories":[],"previousId":4290,"nextId":4482},{"id":4482,"name":"PageElements","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to identify\\na group of Web elements located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/).\\n\\n## Learn more\\n\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)}\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)\\n- ["},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":"](/api/core/interface/ChainableMetaQuestion/)"}]},"children":[{"id":4483,"name":"located","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":24,"character":11}],"signatures":[{"id":4484,"name":"located","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":24,"character":11}],"typeParameter":[{"id":4485,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4486,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4482,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElements","package":"@serenity-js/web"}}]},{"id":4586,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4587,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4588,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedAs"}},{"id":4589,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4590,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4591,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4592,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4593,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4594,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4595,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.as"}},{"id":4596,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4597,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4598,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4599,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4600,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4600]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedBy"}},{"id":4606,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4607,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.toString"}},{"id":4572,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":4}],"signatures":[{"id":4573,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":4}],"parameters":[{"id":4574,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4575,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":22}],"signatures":[{"id":4576,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":22}],"parameters":[{"id":4577,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1551,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":4578,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4579,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.forEach"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.forEach"}},{"id":4580,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":28,"character":4}],"signatures":[{"id":4581,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":28,"character":4}],"parameters":[{"id":4582,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.answeredBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.answeredBy"}},{"id":4545,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":68,"character":4}],"signatures":[{"id":4546,"name":"new PageElements","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":68,"character":4}],"typeParameter":[{"id":4547,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4548,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Question","package":"@serenity-js/core"}]}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":4482,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElements","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList<PageElement<Native_Element_Type>, PageElement<Native_Element_Type>>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList<PageElement<Native_Element_Type>, PageElement<Native_Element_Type>>.constructor"}},{"id":4550,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":69,"character":4}],"signatures":[{"id":4551,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":69,"character":4}],"parameters":[{"id":4552,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.of"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.of"}},{"id":4553,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":70,"character":4}],"signatures":[{"id":4554,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":70,"character":4}],"typeParameter":[{"id":4555,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4556,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":4555,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4555,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4555,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.eachMappedTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.eachMappedTo"}},{"id":4557,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":71,"character":4}],"signatures":[{"id":4558,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":71,"character":4}],"typeParameter":[{"id":4559,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4560,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":4559,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4559,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":4561,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4559,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.where"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.where"}},{"id":4562,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":72,"character":4}],"signatures":[{"id":4563,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":72,"character":4}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"number"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.count"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.count"}},{"id":4564,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":73,"character":4}],"signatures":[{"id":4565,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":73,"character":4}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.first"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.first"}},{"id":4566,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":74,"character":4}],"signatures":[{"id":4567,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":74,"character":4}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.last"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.last"}},{"id":4568,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":75,"character":4}],"signatures":[{"id":4569,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":75,"character":4}],"parameters":[{"id":4570,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.nth"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.nth"}}],"groups":[{"title":"Constructors","children":[4545]},{"title":"Methods","children":[4483,4586,4589,4596,4606,4572,4580,4550,4553,4557,4562,4564,4566,4568]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":21,"character":13}],"typeParameters":[{"id":4608,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4547,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"}],"permalink":"/api/web/class/PageElements","categories":[],"previousId":4406,"nextId":4609},{"id":4609,"name":"PageElementsLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":4610,"name":"fromDocumentRoot","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":16,"character":11}],"signatures":[{"id":4611,"name":"fromDocumentRoot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":16,"character":11}],"typeParameter":[{"id":4612,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4613,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4609,"typeArguments":[{"type":"reference","target":4612,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElementsLocator","package":"@serenity-js/web"}}]},{"id":4674,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4675,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4676,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":4677,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4678,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4679,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4680,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4681,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4682,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4683,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":4684,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4685,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4686,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4687,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4688,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4688]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":4694,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4695,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.toString"}},{"id":4663,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":27,"character":4}],"signatures":[{"id":4664,"name":"new PageElementsLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":27,"character":4}],"typeParameter":[{"id":4665,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4666,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4609,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElementsLocator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<PageElement<Native_Element_Type>>>>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<PageElement<Native_Element_Type>>>>.constructor"}},{"id":4668,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":31,"character":4}],"signatures":[{"id":4669,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":31,"character":4}],"parameters":[{"id":4670,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.of"}},{"id":4671,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":42,"character":10}],"signatures":[{"id":4672,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":42,"character":10}],"parameters":[{"id":4673,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Constructors","children":[4663]},{"title":"Methods","children":[4610,4674,4677,4684,4694,4668,4671]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":12,"character":13}],"typeParameters":[{"id":4696,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4665,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/web/class/PageElementsLocator","categories":[],"previousId":4482,"nextId":4697},{"id":4697,"name":"RootLocator","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/) represents the context in which ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/) looks for ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/).\\nThis context is either a parent element, or some representation of the top-level browsing context.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/)\\n- ["},{"kind":"code","text":"`Page.locate`"},{"kind":"text","text":"](/api/web/class/Page/#locate)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)"}]},"children":[{"id":4698,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4699,"name":"new RootLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":4700,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":4697,"typeArguments":[{"type":"reference","target":4700,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}}]},{"id":4701,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":18,"character":20}],"signatures":[{"id":4702,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":18,"character":20}],"parameters":[{"id":4703,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4700,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4704,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":19,"character":20}],"signatures":[{"id":4705,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":19,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4706,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":20,"character":20}],"signatures":[{"id":4707,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":20,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4708,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"signatures":[{"id":4709,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4710,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":23,"character":20}],"signatures":[{"id":4711,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":23,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":4700,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4712,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":25,"character":4}],"signatures":[{"id":4713,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":4714,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":29,"character":4}],"type":{"type":"reflection","declaration":{"id":4715,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"signatures":[{"id":4716,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"parameters":[{"id":4717,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4718,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":4719,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"..."}],"groups":[{"title":"Constructors","children":[4698]},{"title":"Properties","children":[4714]},{"title":"Methods","children":[4701,4704,4706,4708,4710,4712]}],"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":17,"character":22}],"typeParameters":[{"id":4720,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedBy":[{"type":"reference","target":4240,"name":"Locator"}],"implementedTypes":[{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/RootLocator","categories":[],"previousId":4609,"nextId":4721},{"id":4721,"name":"SelectOption","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes the ["},{"kind":"code","text":"`<option />`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nelements to select.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Select`"},{"kind":"text","text":"](/api/web/class/Select/)\\n- ["},{"kind":"code","text":"`Selected`"},{"kind":"text","text":"](/api/web/class/Selected/)\\n- ["},{"kind":"code","text":"`PageElement.selectOptions`"},{"kind":"text","text":"](/api/web/class/PageElement/#selectOptions)\\n- ["},{"kind":"code","text":"`PageElement.selectedOptions`"},{"kind":"text","text":"](/api/web/class/PageElement/#selectedOptions)"}]},"children":[{"id":4722,"name":"withLabel","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":18,"character":11}],"signatures":[{"id":4723,"name":"withLabel","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":18,"character":11}],"parameters":[{"id":4724,"name":"label","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}]},{"id":4725,"name":"withValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":22,"character":11}],"signatures":[{"id":4726,"name":"withValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":22,"character":11}],"parameters":[{"id":4727,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}]},{"id":4728,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":26,"character":4}],"signatures":[{"id":4729,"name":"new SelectOption","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":26,"character":4}],"parameters":[{"id":4730,"name":"label","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":4731,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":4732,"name":"selected","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":4733,"name":"disabled","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":4734,"name":"label","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":27,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4735,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":28,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4736,"name":"selected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":29,"character":24}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4737,"name":"disabled","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":30,"character":24}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4738,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":35,"character":4}],"signatures":[{"id":4739,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":35,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":4740,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4741,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4742,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":4743,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4744,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[4728]},{"title":"Properties","children":[4734,4735,4736,4737]},{"title":"Methods","children":[4722,4725,4738,4740,4743]}],"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/web/class/SelectOption","categories":[],"previousId":4697,"nextId":4851},{"id":4851,"name":"Switchable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a Serenity/JS model object that can be switched _to_ and switched back _from_\\nusing the [task](/api/core/class/Task/) to ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/).\\n\\nExamples of switchable models include a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) and ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)"}]},"children":[{"id":4852,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":23,"character":4}],"signatures":[{"id":4853,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context to the object implementing this interface\\nand returns ["},{"kind":"code","text":"`SwitchableOrigin`"},{"kind":"text","text":"](/api/web/interface/SwitchableOrigin/) that allows for the context to be switched\\nback when needed."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":23,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4854,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[4852]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":16,"character":17}],"implementedBy":[{"type":"reference","target":4290,"name":"Page"},{"type":"reference","target":4406,"name":"PageElement"}],"permalink":"/api/web/interface/Switchable","categories":[],"previousId":4721,"nextId":4854},{"id":4854,"name":"SwitchableOrigin","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Enables the ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) to ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) to perform a sequence of activities\\nand switch back to the original context afterwards.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4855,"name":"switchBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":17,"character":4}],"signatures":[{"id":4856,"name":"switchBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context back to the original ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":17,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[4855]}],"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":12,"character":17}],"permalink":"/api/web/interface/SwitchableOrigin","categories":[],"previousId":4851,"nextId":4066},{"id":4066,"name":"AbsentModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`AbsentModalDialog`"},{"kind":"text","text":" is a [null object](https://en.wikipedia.org/wiki/Null_object_pattern)\\nrepresenting a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that hasn\'t appeared yet.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":4080,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4081,"name":"new AbsentModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4066,"name":"AbsentModalDialog","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":4151,"name":"ModalDialog.constructor"}}],"inheritedFrom":{"type":"reference","target":4150,"name":"ModalDialog.constructor"}},{"id":4082,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":15,"character":10}],"signatures":[{"id":4083,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":15,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4155,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":4154,"name":"ModalDialog.isPresent"}},{"id":4084,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":19,"character":10}],"signatures":[{"id":4085,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":19,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4153,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":4152,"name":"ModalDialog.message"}},{"id":4086,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4087,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4157,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":4156,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[4080]},{"title":"Methods","children":[4082,4084,4086]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":4136,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/AbsentModalDialog","categories":[],"previousId":4854,"nextId":4088},{"id":4088,"name":"AcceptedModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`AcceptedModalDialog`"},{"kind":"text","text":" represents a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that has been accepted\\nvia ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":4102,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":15,"character":4}],"signatures":[{"id":4103,"name":"new AcceptedModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":15,"character":4}],"parameters":[{"id":4104,"name":"dialogMessage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4088,"name":"AcceptedModalDialog","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4151,"name":"ModalDialog.constructor"}}],"overwrites":{"type":"reference","target":4150,"name":"ModalDialog.constructor"}},{"id":4106,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":20,"character":10}],"signatures":[{"id":4107,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":20,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4155,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":4154,"name":"ModalDialog.isPresent"}},{"id":4108,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":24,"character":10}],"signatures":[{"id":4109,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":24,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4153,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":4152,"name":"ModalDialog.message"}},{"id":4110,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4111,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4157,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":4156,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[4102]},{"title":"Methods","children":[4106,4108,4110]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":4136,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/AcceptedModalDialog","categories":[],"previousId":4066,"nextId":4112},{"id":4112,"name":"DismissedModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`DismissedModalDialog`"},{"kind":"text","text":" represents a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that has been dismissed\\nvia ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":4126,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":15,"character":4}],"signatures":[{"id":4127,"name":"new DismissedModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":15,"character":4}],"parameters":[{"id":4128,"name":"dialogMessage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4112,"name":"DismissedModalDialog","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4151,"name":"ModalDialog.constructor"}}],"overwrites":{"type":"reference","target":4150,"name":"ModalDialog.constructor"}},{"id":4130,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":20,"character":10}],"signatures":[{"id":4131,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":20,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4155,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":4154,"name":"ModalDialog.isPresent"}},{"id":4132,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":24,"character":10}],"signatures":[{"id":4133,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":24,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4153,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":4152,"name":"ModalDialog.message"}},{"id":4134,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4135,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4157,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":4156,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[4126]},{"title":"Methods","children":[4130,4132,4134]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":4136,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/DismissedModalDialog","categories":[],"previousId":4088,"nextId":4136},{"id":4136,"name":"ModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Manages interactions with JavaScript modal dialog windows,\\ntriggered by [window.alert](https://developer.mozilla.org/en-US/docs/Web/API/Window/alert),\\n[window.confirm](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm),\\nor ["},{"kind":"code","text":"`window.prompt`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt),\\nand stores their "},{"kind":"code","text":"`message`"},{"kind":"text","text":" so that it can be asserted on once the dialog is handled.\\n\\nNote that in order to make handling modal windows\\nconsistent across the various Web integration tools (such as Playwright, Puppeteer,\\nWebdriverIO or Selenium), Serenity/JS works as follows:\\n- Serenity/JS dismisses any modal dialogs by default and stores their message so that it can be asserted on.\\n- This behaviour can be changed by invoking ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext),\\n  ["},{"kind":"code","text":"`ModalDialog.acceptNextWithValue`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNextWithValue),\\n  or ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext)\\n  before the dialog is triggered, as per the below examples.\\n- Serenity/JS also allows you to "},{"kind":"code","text":"`Wait.until(ModalDialog, isPresent())`"},{"kind":"text","text":" so that you can synchronise your tests\\n  with modal dialogs that appear after a delay.\\n\\n## Example HTML widget\\n\\nIn the below example widget, clicking on the button results in a [confirmation dialog](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm)\\nappearing.\\n\\n"},{"kind":"code","text":"```html\\n<button id=\\"trigger\\" onclick=\\"trigger()\\">Trigger Alert</button>\\n<p id=\\"result\\"></p>\\n\\n<script>\\n  function trigger() {\\n    document.getElementById(\\"result\\").innerHTML = (\\n      function () {\\n        return confirm(\'Continue?\')\\n          ? \'accepted\'\\n          : \'dismissed\';\\n      }\\n    )();\\n  }\\n<\/script>\\n```"},{"kind":"text","text":"\\n\\n## Modal dialog gets dismissed by default\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Text, PageElement, ModalDialog } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst Example = {\\n  trigger: () =>\\n    PageElement.located(By.id(\'trigger\')).describedAs(\'the modal dialog trigger\'),\\n\\n  result: () =>\\n    PageElement.located(By.id(\'result\')).describedAs(\'result\'),\\n}\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  Click.on(Example.trigger()),\\n\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'dismissed\')),\\n\\n  Ensure.that(Text.of(Example.result()), equals(\'dismissed\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Changing modal dialog handler\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Text, PageElement, ModalDialog } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst Example = {\\n  trigger: () =>\\n    PageElement.located(By.id(\'trigger\')).describedAs(\'the modal dialog trigger\'),\\n\\n  result: () =>\\n    PageElement.located(By.id(\'result\')).describedAs(\'result\'),\\n}\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  ModalDialog.acceptNext(),\\n  // or: ModalDialog.acceptNextWithValue(\'some value\'),\\n  // or: ModalDialog.dismissNext(),\\n\\n  Click.on(Example.trigger),\\n\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'accepted\')),\\n\\n  Ensure.that(Text.of(Example.result), equals(\'accepted\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"children":[{"id":4137,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":127,"character":11}],"signatures":[{"id":4138,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":".\\n\\n#### Example usage\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { Ensure, equals, isPresent } from \'@serenity-js/assertions\'\\nimport { ModalDialog } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  ModalDialog.acceptNext(),\\n  Wait.until(ModalDialog, isPresent()),\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'accepted\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":127,"character":11}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4139,"name":"acceptNext","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":134,"character":11}],"signatures":[{"id":4140,"name":"acceptNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":134,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4141,"name":"acceptNextWithValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":144,"character":11}],"signatures":[{"id":4142,"name":"acceptNextWithValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.acceptNextWithValue`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNextWithValue)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":144,"character":11}],"parameters":[{"id":4143,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4144,"name":"dismissNext","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":152,"character":11}],"signatures":[{"id":4145,"name":"dismissNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":152,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4146,"name":"lastDialogMessage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":160,"character":11}],"signatures":[{"id":4147,"name":"lastDialogMessage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ModalDialog.message`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#message) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":160,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4148,"name":"lastDialogState","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":168,"character":11}],"signatures":[{"id":4149,"name":"lastDialogState","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ModalDialog.state`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#state) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":168,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4150,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4151,"name":"new ModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4136,"name":"ModalDialog","package":"@serenity-js/web"}}]},{"id":4152,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":183,"character":13}],"signatures":[{"id":4153,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":183,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4154,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":193,"character":13}],"signatures":[{"id":4155,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":193,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4156,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4157,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[4150]},{"title":"Methods","children":[4137,4139,4141,4144,4146,4148,4152,4154,4156]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":103,"character":22}],"extendedBy":[{"type":"reference","target":4066,"name":"AbsentModalDialog"},{"type":"reference","target":4088,"name":"AcceptedModalDialog"},{"type":"reference","target":4112,"name":"DismissedModalDialog"}],"implementedTypes":[{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/ModalDialog","categories":[],"previousId":4112,"nextId":4158},{"id":4158,"name":"ModalDialogHandler","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represent the strategy to use with any upcoming ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) windows.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)\\n- ["},{"kind":"code","text":"`Page.modalDialog`"},{"kind":"text","text":"](/api/web/class/Page/#modalDialog)"}]},"children":[{"id":4163,"name":"acceptNext","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":25,"character":13}],"signatures":[{"id":4164,"name":"acceptNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to accept the next JavaScript modal dialog."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":25,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4165,"name":"acceptNextWithValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":31,"character":13}],"signatures":[{"id":4166,"name":"acceptNextWithValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to accept the next JavaScript "},{"kind":"code","text":"`prompt``\\nwith a given `"},{"kind":"text","text":"text` value."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":31,"character":13}],"parameters":[{"id":4167,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4168,"name":"dismissNext","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":36,"character":13}],"signatures":[{"id":4169,"name":"dismissNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to dismiss the next JavaScript modal dialog."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":36,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4170,"name":"reset","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":41,"character":13}],"signatures":[{"id":4171,"name":"reset","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resets the handler to its default state."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":41,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4172,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":47,"character":10}],"signatures":[{"id":4173,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most recently handled ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/),\\nor ["},{"kind":"code","text":"`AbsentModalDialog`"},{"kind":"text","text":"](/api/web/class/AbsentModalDialog/) when no dialogs have been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4136,"name":"ModalDialog","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[4163,4165,4168,4170,4172]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":16,"character":22}],"permalink":"/api/web/class/ModalDialogHandler","categories":[],"previousId":4136,"nextId":4745},{"id":4745,"name":"By","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`By`"},{"kind":"text","text":" produces a ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/) used to locate a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/) on a web page.\\nSelectors can be defined using a static value or a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) to be resolved at runtime.\\n\\n### Defining a selector using a static value\\n\\n"},{"kind":"code","text":"```typescript\\nimport { PageElement, By } from \'@serenity-js/web\'\\n\\nclass LoginForm {\\n  static usernameField = () =>\\n    PageElement.located(By.id(\'username\'))              // locate element by its id\\n      .describedAs(\'username field\')\\n\\n  static passwordField = () =>\\n    PageElement.located(By.css(\'[data-test=\\"password\\"]\'))    // locate element using a CSS selector\\n      .describedAs(\'password field\')\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a selector using a Question\\n\\nEach method on this class accepts an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) to allow for dynamic resolution of the selector.\\nThis can be useful when the selector is not known at the time of writing the test, or when the selector\\nneeds to be calculated based on the state of the system under test.\\n\\nThe example below demonstrates how to use ["},{"kind":"code","text":"`q`"},{"kind":"text","text":"](/api/core/function/q/) to define a selector that includes a dynamic value.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { q } from \'@serenity-js/core\'\\nimport { PageElement, By } from \'@serenity-js/web\'\\n\\nclass FormField {\\n  static withTestId = (id: Answerable<string>) =>\\n    PageElement.located(By.css(q`input[data-test-id=\\"${ id }\\"]`))\\n      .describedAs(\'form field\')\\n}\\n\\n```"},{"kind":"text","text":"\\n\\n### Learn more\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n- ["},{"kind":"code","text":"`q`"},{"kind":"text","text":"](/api/core/function/q/)"}]},"children":[{"id":4746,"name":"css","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":66,"character":11}],"signatures":[{"id":4747,"name":"css","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":66,"character":11}],"parameters":[{"id":4748,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4767,"name":"ByCss","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4749,"name":"cssContainingText","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":80,"character":11}],"signatures":[{"id":4750,"name":"cssContainingText","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) with a given ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText)\\nusing a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":80,"character":11}],"parameters":[{"id":4751,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":4752,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4779,"name":"ByCssContainingText","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4753,"name":"deepCss","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":94,"character":11}],"signatures":[{"id":4754,"name":"deepCss","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)\\ncapable of piercing [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)-piercing"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":94,"character":11}],"parameters":[{"id":4755,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4767,"name":"ByCss","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4756,"name":"id","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":106,"character":11}],"signatures":[{"id":4757,"name":"id","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using its [id](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":106,"character":11}],"parameters":[{"id":4758,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4805,"name":"ById","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4759,"name":"tagName","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":118,"character":11}],"signatures":[{"id":4760,"name":"tagName","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using the name of its [HTML tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":118,"character":11}],"parameters":[{"id":4761,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4817,"name":"ByTagName","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4762,"name":"xpath","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":130,"character":11}],"signatures":[{"id":4763,"name":"xpath","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using an [XPath selector](https://developer.mozilla.org/en-US/docs/Web/XPath)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":130,"character":11}],"parameters":[{"id":4764,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4829,"name":"ByXPath","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4765,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4766,"name":"new By","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4745,"name":"By","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[4765]},{"title":"Methods","children":[4746,4749,4753,4756,4759,4762]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":59,"character":13}],"permalink":"/api/web/class/By","categories":[],"previousId":4158,"nextId":4767},{"id":4767,"name":"ByCss","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.css`"},{"kind":"text","text":"](/api/web/class/By/#css)"}]},"children":[{"id":4768,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":4}],"signatures":[{"id":4769,"name":"new ByCss","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":4}],"parameters":[{"id":4770,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4767,"name":"ByCss","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4843,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4842,"name":"Selector.constructor"}},{"id":4771,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4772,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4773,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4845,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4844,"name":"Selector.toString"}},{"id":4774,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4775,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4776,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4847,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4846,"name":"Selector.equals"}},{"id":4777,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4778,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4850,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4849,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4768]},{"title":"Properties","children":[4771]},{"title":"Methods","children":[4772,4774,4777]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByCss","categories":[],"previousId":4745,"nextId":4779},{"id":4779,"name":"ByCssContainingText","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) with a given ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText)\\nusing a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.cssContainingText`"},{"kind":"text","text":"](/api/web/class/By/#cssContainingText)"}]},"children":[{"id":4780,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":4}],"signatures":[{"id":4781,"name":"new ByCssContainingText","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":4}],"parameters":[{"id":4782,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4783,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4779,"name":"ByCssContainingText","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4843,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4842,"name":"Selector.constructor"}},{"id":4784,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4785,"name":"text","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":63}],"type":{"type":"intrinsic","name":"string"}},{"id":4786,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4787,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4845,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4844,"name":"Selector.toString"}},{"id":4788,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4789,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4790,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4847,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4846,"name":"Selector.equals"}},{"id":4791,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4792,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4850,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4849,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4780]},{"title":"Properties","children":[4784,4785]},{"title":"Methods","children":[4786,4788,4791]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByCssContainingText","categories":[],"previousId":4767,"nextId":4793},{"id":4793,"name":"ByDeepCss","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)\\ncapable of piercing [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)-piercing\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.deepCss`"},{"kind":"text","text":"](/api/web/class/By/#deepCss)"}]},"children":[{"id":4794,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":4}],"signatures":[{"id":4795,"name":"new ByDeepCss","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":4}],"parameters":[{"id":4796,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4793,"name":"ByDeepCss","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4843,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4842,"name":"Selector.constructor"}},{"id":4797,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4798,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4799,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4845,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4844,"name":"Selector.toString"}},{"id":4800,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4801,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4802,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4847,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4846,"name":"Selector.equals"}},{"id":4803,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4804,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4850,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4849,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4794]},{"title":"Properties","children":[4797]},{"title":"Methods","children":[4798,4800,4803]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByDeepCss","categories":[],"previousId":4779,"nextId":4805},{"id":4805,"name":"ById","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using its [id](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.id`"},{"kind":"text","text":"](/api/web/class/By/#id)"}]},"children":[{"id":4806,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":4}],"signatures":[{"id":4807,"name":"new ById","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":4}],"parameters":[{"id":4808,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4805,"name":"ById","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4843,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4842,"name":"Selector.constructor"}},{"id":4809,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4810,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4811,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4845,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4844,"name":"Selector.toString"}},{"id":4812,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4813,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4814,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4847,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4846,"name":"Selector.equals"}},{"id":4815,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4816,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4850,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4849,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4806]},{"title":"Properties","children":[4809]},{"title":"Methods","children":[4810,4812,4815]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ById","categories":[],"previousId":4793,"nextId":4817},{"id":4817,"name":"ByTagName","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using the name of its [HTML tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.tagName`"},{"kind":"text","text":"](/api/web/class/By/#tagName)"}]},"children":[{"id":4818,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":4}],"signatures":[{"id":4819,"name":"new ByTagName","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":4}],"parameters":[{"id":4820,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4817,"name":"ByTagName","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4843,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4842,"name":"Selector.constructor"}},{"id":4821,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4822,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4823,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4845,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4844,"name":"Selector.toString"}},{"id":4824,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4825,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4826,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4847,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4846,"name":"Selector.equals"}},{"id":4827,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4828,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4850,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4849,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4818]},{"title":"Properties","children":[4821]},{"title":"Methods","children":[4822,4824,4827]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByTagName","categories":[],"previousId":4805,"nextId":4829},{"id":4829,"name":"ByXPath","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using an [XPath selector](https://developer.mozilla.org/en-US/docs/Web/XPath).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.xpath`"},{"kind":"text","text":"](/api/web/class/By/#xpath)"}]},"children":[{"id":4830,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":4}],"signatures":[{"id":4831,"name":"new ByXPath","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":4}],"parameters":[{"id":4832,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4829,"name":"ByXPath","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4843,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4842,"name":"Selector.constructor"}},{"id":4833,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4834,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4835,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4845,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4844,"name":"Selector.toString"}},{"id":4836,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4837,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4838,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4847,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4846,"name":"Selector.equals"}},{"id":4839,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4840,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4850,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4849,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4830]},{"title":"Properties","children":[4833]},{"title":"Methods","children":[4834,4836,4839]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByXPath","categories":[],"previousId":4817,"nextId":4841},{"id":4841,"name":"Selector","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Describes a selector you use to identify a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)."}]},"children":[{"id":4842,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4843,"name":"new Selector","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":4844,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4845,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":4846,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4847,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4848,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":4849,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4850,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[4842]},{"title":"Methods","children":[4844,4846,4849]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":9,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":4767,"name":"ByCss"},{"type":"reference","target":4779,"name":"ByCssContainingText"},{"type":"reference","target":4793,"name":"ByDeepCss"},{"type":"reference","target":4805,"name":"ById"},{"type":"reference","target":4817,"name":"ByTagName"},{"type":"reference","target":4829,"name":"ByXPath"}],"permalink":"/api/web/class/Selector","categories":[],"previousId":4829,"nextId":4857},{"id":4857,"name":"Attribute","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" data-items-left=\\"2\\">\\n  <li data-state=\\"bought\\">Coffee<li>\\n  <li data-state=\\"buy\\">Honey<li>\\n  <li data-state=\\"buy\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve an HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.id(\'shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Attribute.called(\'data-items-left\').of(shoppingList()),\\n      equals(\'2\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`Attribute`"},{"kind":"text","text":" as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Attribute.called(\'id\').of(shoppingList()).toLocaleUpperCase(),\\n      equals(\'SHOPPING-LIST\')\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElements } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(\\n        Attribute.called(\'data-state\'),\\n        includes(\'buy\')\\n      )\\n}\\n\\nawait actorCalled(\'Lisa\')\\n.whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n.attemptsTo(\\n  Ensure.that(\\n    Text.ofAll(ShoppingList.outstandingItems()),\\n    equals([ \'Honey\', \'Chocolate\' ])\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4858,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":110,"character":11}],"signatures":[{"id":4859,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":110,"character":11}],"typeParameter":[{"id":4860,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4861,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the attribute to retrieve"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4857,"typeArguments":[{"type":"reference","target":4860,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Attribute","package":"@serenity-js/web"}}]},{"id":4926,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4927,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4928,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":4929,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4930,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4931,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4932,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4933,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4934,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4935,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":4936,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4937,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4938,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4939,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4940,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4940]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":4946,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4947,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}},{"id":4918,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":132,"character":4}],"signatures":[{"id":4919,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to the value of an HTML attribute of the "},{"kind":"code","text":"`pageElement`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":132,"character":4}],"parameters":[{"id":4920,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4948,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4948,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4948,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}},{"id":4921,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":146,"character":10}],"signatures":[{"id":4922,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":146,"character":10}],"parameters":[{"id":4923,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}},{"id":4924,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":161,"character":4}],"signatures":[{"id":4925,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":161,"character":4}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"groups":[{"title":"Methods","children":[4858,4926,4929,4936,4946,4918,4921,4924]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":98,"character":13}],"typeParameters":[{"id":4948,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":4948,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"},{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/Attribute","categories":[],"previousId":4841,"nextId":4949},{"id":4949,"name":"ComputedStyle","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" style=\\"display: block\\">\\n  <li style=\\"display: block\\">Coffee<li>\\n  <li style=\\"display: none\\">Honey<li>\\n  <li style=\\"display: block\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve a computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { ComputedStyle, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.id(\'shopping-list\'))\\n     .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\').attemptsTo(\\n  Ensure.that(\\n    ComputedStyle.called(\'display\').of(shoppingList()),\\n    equals(\'block\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`ComputedStyle`"},{"kind":"text","text":" as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\').attemptsTo(\\n  Ensure.that(\\n    ComputedStyle.called(\'display\').of(shoppingList()).toLocaleUpperCase(),\\n    equals(\'BLOCK\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElements } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(\\n        ComputedStyle.called(\'display\'),\\n        equals(\'block\')\\n      )\\n}\\n\\nawait actorCalled(\'Lisa\')\\n .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n .attemptsTo(\\n   Ensure.that(\\n     Text.ofAll(ShoppingList.outstandingItems()),\\n     equals([ \'Honey\', \'Chocolate\' ])\\n   ),\\n )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4950,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":116,"character":11}],"signatures":[{"id":4951,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":116,"character":11}],"typeParameter":[{"id":4952,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4953,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the computed style property to retrieve"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4949,"typeArguments":[{"type":"reference","target":4952,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"ComputedStyle","package":"@serenity-js/web"}}]},{"id":5021,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":5022,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":5023,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":5024,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":5025,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":5026,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":5027,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":5028,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":5029,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":5030,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4591,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":5031,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":5032,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":5033,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":5034,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5035,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[5035]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":5041,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":5042,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}},{"id":5012,"name":"ofPseudoElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":140,"character":4}],"signatures":[{"id":5013,"name":"ofPseudoElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of the specified pseudo-element of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":140,"character":4}],"parameters":[{"id":5014,"name":"pseudoElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The pseudo-element to retrieve the computed style property from, such as "},{"kind":"code","text":"`::before`"},{"kind":"text","text":" or "},{"kind":"code","text":"`::after`"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":5043,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":5015,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":158,"character":4}],"signatures":[{"id":5016,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to the value of a computed style property of the "},{"kind":"code","text":"`pageElement`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":158,"character":4}],"parameters":[{"id":5017,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":5043,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":5043,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":5043,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}},{"id":5018,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":173,"character":10}],"signatures":[{"id":5019,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":173,"character":10}],"parameters":[{"id":5020,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Methods","children":[4950,5021,5024,5031,5041,5012,5015,5018]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":104,"character":13}],"typeParameters":[{"id":5043,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":5043,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/web/class/ComputedStyle","categories":[],"previousId":4857,"nextId":5044},{"id":5044,"name":"CssClasses","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na list of [CSS classes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-class)\\nof a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" class=\\"active favourite\\">\\n  <li class=\\"bought\\">Coffee<li>\\n  <li class=\\"buy\\">Honey<li>\\n  <li class=\\"buy\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve CSS classes of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingList()),\\n      equals([ \'active\', \'favourite\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using CssClasses as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingList()).length,\\n      equals(2)\\n    ),\\n    Ensure.that(\\n      CssClasses.of(shoppingList())[0],\\n      equals(\'active\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, contain } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(CssClasses, contain(\'buy\'))\\n}\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Text.ofAll(ShoppingList.outstandingItems()),\\n      equals([ \'Honey\', \'Chocolate\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":5045,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":112,"character":11}],"signatures":[{"id":5046,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na list of [CSS classes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-class)\\nof a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":112,"character":11}],"parameters":[{"id":5047,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":5048,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5049,"name":"new CssClasses","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5044,"name":"CssClasses","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5048]},{"title":"Methods","children":[5045]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":99,"character":13}],"permalink":"/api/web/class/CssClasses","categories":[],"previousId":4949,"nextId":5050},{"id":5050,"name":"LastScriptExecution","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na returns the result of the last script executed via ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/).\\n\\n## Executing a script and reading the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(() => navigator.userAgent),\\n    Ensure.that(LastScriptExecution.result<string>(), includes(\'Chrome\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using LastScriptExecution as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(() => navigator.userAgent),\\n    Ensure.that(\\n      LastScriptExecution.result<string>().toLocaleLowerCase(),\\n      includes(\'chrome\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"children":[{"id":5051,"name":"result","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":53,"character":11}],"signatures":[{"id":5052,"name":"result","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Enables asserting on the result of a function executed via ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":53,"character":11}],"typeParameter":[{"id":5053,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":5053,"name":"R","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5054,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5055,"name":"new LastScriptExecution","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5050,"name":"LastScriptExecution","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5054]},{"title":"Methods","children":[5051]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":48,"character":13}],"permalink":"/api/web/class/LastScriptExecution","categories":[],"previousId":5044,"nextId":5056},{"id":5056,"name":"Selected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\noptions and values selected in a\\n[HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Select`"},{"kind":"text","text":"](/api/web/class/Select/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":5057,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":69,"character":11}],"signatures":[{"id":5058,"name":"valueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na single [option](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nselected in an [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select).\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\');\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.value(\'UK\').from(Countries.dropdown),\\n    Ensure.that(Selected.valueOf(Countries.dropdown), equals(\'UK\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.value`"},{"kind":"text","text":"](/api/web/class/Select/#value)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":69,"character":11}],"parameters":[{"id":5059,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5060,"name":"valuesOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":128,"character":11}],"signatures":[{"id":5061,"name":"valuesOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nvalues of [options](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nselected in an [HTML "},{"kind":"code","text":"`<select multiple>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.values(\'UK\').from(Countries.dropdown),\\n    Ensure.that(Selected.valuesOf(Countries.dropdown), equals([ \'UK\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.values`"},{"kind":"text","text":"](/api/web/class/Select/#values)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":128,"character":11}],"parameters":[{"id":5062,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5063,"name":"optionIn","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":189,"character":11}],"signatures":[{"id":5064,"name":"optionIn","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na single option selected in an [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.option(\'Poland\').from(Countries.dropdown),\\n    Ensure.that(\\n      Selected.optionIn(Countries.dropdown),\\n      equals(\'Poland\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.option`"},{"kind":"text","text":"](/api/web/class/Select/#option)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":189,"character":11}],"parameters":[{"id":5065,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5066,"name":"optionsIn","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":250,"character":11}],"signatures":[{"id":5067,"name":"optionsIn","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\noptions selected in an [HTML "},{"kind":"code","text":"`<select multiple>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.options(\'Poland\', \'United States\').from(Countries.dropdown),\\n    Ensure.that(\\n      Selected.optionsIn(Countries.dropdown),\\n      equals([ \'Poland\', \'United States\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.options`"},{"kind":"text","text":"](/api/web/class/Select/#options)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":250,"character":11}],"parameters":[{"id":5068,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5069,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5070,"name":"new Selected","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5056,"name":"Selected","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5069]},{"title":"Methods","children":[5057,5060,5063,5066]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":19,"character":13}],"permalink":"/api/web/class/Selected","categories":[],"previousId":5050,"nextId":5071},{"id":5071,"name":"Text","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe visible (i.e. not hidden by CSS) ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText) of:\\n- a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n\\nThe result includes the visible text of any sub-elements, without any leading or trailing whitespace.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<h1>Shopping list</h1>\\n<ul id=\\"shopping-list\\">\\n  <li>Coffee<li>\\n  <li class=\\"bought\\">Honey<li>\\n  <li>Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve text of a single ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst header = () =>\\n  PageElement.located(By.css(\'h1\'))\\n    .describedAs(\'header\')\\n\\nawait actorCalled(\'Lisa\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Ensure.that(Text.of(header()), equals(\'Shopping list\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Retrieve text of multiple ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst shoppingListItems = () =>\\n  PageElements.located(By.css(\'#shopping-list li\'))\\n    .describedAs(\'shopping list items\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Text.ofAll(shoppingListItems()),\\n      equals([ \'Coffee\', \'Honey\', \'Chocolate\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { contain, Ensure } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst shoppingListItemCalled = (name: string) =>\\n  PageElements.located(By.css(\'#shopping-list li\'))\\n    .describedAs(\'shopping list items\')\\n    .where(Text, equals(name))\\n    .first()\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingListItemCalled(\'Honey)),\\n      contain(\'bought\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":5072,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":107,"character":11}],"signatures":[{"id":5073,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe text of a single ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":107,"character":11}],"parameters":[{"id":5074,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":5075,"name":"ofAll","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":129,"character":11},{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":130,"character":11},{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":131,"character":11}],"signatures":[{"id":5076,"name":"ofAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe text of a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":129,"character":11}],"parameters":[{"id":5077,"name":"pageElements","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4482,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElements","package":"@serenity-js/web"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}},{"id":5078,"name":"ofAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":130,"character":11}],"parameters":[{"id":5079,"name":"pageElements","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5080,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5081,"name":"new Text","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5071,"name":"Text","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5080]},{"title":"Methods","children":[5072,5075]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":95,"character":13}],"permalink":"/api/web/class/Text","categories":[],"previousId":5056,"nextId":5082},{"id":5082,"name":"Value","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe "},{"kind":"code","text":"`value`"},{"kind":"text","text":" attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n<input type=\\"text\\" id=\\"username\\" value=\\"Alice\\" />\\n```"},{"kind":"text","text":"\\n\\n## Retrieve the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Value } from \'@serenity-js/web\'\\n\\nconst usernameField = () =>\\n  PageElement.located(By.id(\'username\'))\\n    .describedAs(\'username field\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(Value.of(usernameField), equals(\'Alice\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using Value as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Value } from \'@serenity-js/web\'\\n\\nconst usernameField = () =>\\n  PageElement.located(By.id(\'username\'))\\n    .describedAs(\'username field\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Value.of(usernameField).toLocaleLowerCase()[0],\\n      equals(\'a\')  // [a]lice\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":5083,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":72,"character":11}],"signatures":[{"id":5084,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe "},{"kind":"code","text":"`value`"},{"kind":"text","text":" attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":72,"character":11}],"parameters":[{"id":5085,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4406,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":5086,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5087,"name":"new Value","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5082,"name":"Value","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5086]},{"title":"Methods","children":[5083]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":60,"character":13}],"permalink":"/api/web/class/Value","categories":[],"previousId":5071,"nextId":5088},{"id":5088,"name":"Photographer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Photographer is a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) who takes screenshots\\nusing the web browser associated with the [actor](/api/core/class/Actor/) that is\\ncurrently [in the spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n## Registering Photographer programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, ArtifactArchiver } from \'@serenity-js/core\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.storingArtifactsAt(process.cwd(), \'target/site/serenity\'),\\n    Photographer.whoWill(TakePhotosOfFailures),\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Photographer with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n  reporter: [\\n      [ \'@serenity-js/playwright-test\', {\\n          crew: [\\n              \'@serenity-js/serenity-bdd\',\\n              [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n          ]\\n          // other Serenity/JS config\\n      }]\\n  ],\\n\\n  use: {\\n    crew: [\\n      [ \'@serenity-js/web:Photographer\', {\\n        strategy: \'TakePhotosOfFailures\',\\n        // strategy: \'TakePhotosOfInteractions\',\\n      } ]\\n    ],\\n  },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/)\\n\\n## Using Photographer with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ArtifactArchiver } from \'@serenity-js/core\'\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig= {\\n\\n  // Tell WebdriverIO to use Serenity/JS framework\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    // Configure Serenity/JS to use an appropriate test runner adapter\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    // register custom Actors class to configure your Serenity/JS actors\\n    actors: new Actors(),\\n\\n    // Register StageCrewMembers we\'ve imported at the top of this file\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      [ \'@serenity-js/web:Photographer\', {\\n        strategy: \'TakePhotosOfFailures\',\\n        // strategy: \'TakePhotosOfInteractions\',\\n      } ]\\n    ]\\n  },\\n\\n  // ... rest of the config omitted for brevity\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Photographer with Protractor\\n\\n"},{"kind":"code","text":"```ts\\n// protractor.conf.js\\nexports.config = {\\n\\n  // Tell Protractor to use the Serenity/JS framework Protractor Adapter\\n  framework:      \'custom\',\\n  frameworkPath:  require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    runner: \'jasmine\',\\n    // runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    crew: [\\n      @serenity-js/serenity-bdd\',\\n       \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n       \'@serenity-js/web:Photographer\', {\\n         strategy: \'TakePhotosOfFailures\',\\n         // strategy: \'TakePhotosOfInteractions\',\\n       ]\\n    ]\\n  },\\n\\n  // ... rest of the config omitted for brevity\\n}\\n```"},{"kind":"text","text":"\\n\\n## Taking photos only upon failures only\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosOfFailures)\\n```"},{"kind":"text","text":"\\n\\n## Taking photos of all the interactions\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosOfInteractions } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosOfInteractions)\\n```"},{"kind":"text","text":"\\n\\n## Taking photos before and after all the interactions\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosBeforeAndAfterInteractions } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosBeforeAndAfterInteractions)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`TakePhotosBeforeAndAfterInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosBeforeAndAfterInteractions/)\\n- ["},{"kind":"code","text":"`TakePhotosOfFailures`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfFailures/)\\n- ["},{"kind":"code","text":"`TakePhotosOfInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfInteractions/)"}]},"children":[{"id":5089,"name":"whoWill","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":11}],"signatures":[{"id":5090,"name":"whoWill","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) configured to take photos (screenshots)\\nas per the specified ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":11}],"parameters":[{"id":5091,"name":"strategy","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A no-arg constructor function that instantiates a ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)"}]},"type":{"type":"reflection","declaration":{"id":5092,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":29}],"signatures":[{"id":5093,"name":"new strategy","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":29}],"type":{"type":"reference","target":5111,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}}]}}}],"type":{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":5094,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":11}],"signatures":[{"id":5095,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) configured to take photos (screenshots)\\nas per the specified ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":11}],"parameters":[{"id":5096,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":5097,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5098,"name":"strategy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":31}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"union","types":[{"type":"literal","value":"PhotoTakingStrategy"},{"type":"literal","value":"TakePhotosBeforeAndAfterInteractions"},{"type":"literal","value":"TakePhotosOfFailures"},{"type":"literal","value":"TakePhotosOfInteractions"}]},{"type":"literal","value":"PhotoTakingStrategy"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}}],"groups":[{"title":"Properties","children":[5098]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":29}]}}}],"type":{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":5099,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":192,"character":4}],"signatures":[{"id":5100,"name":"new Photographer","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":192,"character":4}],"parameters":[{"id":5101,"name":"photoTakingStrategy","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5111,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}},{"id":5102,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":5088,"name":"Photographer","package":"@serenity-js/web"}}]},{"id":5105,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":204,"character":4}],"signatures":[{"id":5106,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) to a given ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":204,"character":4}],"parameters":[{"id":5107,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) will be assigned to"}]},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}},{"id":5108,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":215,"character":4}],"signatures":[{"id":5109,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthis ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":215,"character":4}],"parameters":[{"id":5110,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2618,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[5099]},{"title":"Methods","children":[5089,5094,5105,5108]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":156,"character":13}],"implementedTypes":[{"type":"reference","target":2234,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/web/class/Photographer","categories":[],"previousId":5082,"nextId":5111},{"id":5111,"name":"PhotoTakingStrategy","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos, a.k.a. screenshots,\\nof the ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) performed by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nwhen desired conditions are met."}]},"children":[{"id":5112,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5113,"name":"new PhotoTakingStrategy","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5111,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}}]},{"id":5114,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5115,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5116,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2360,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2290,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5117,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[5112]},{"title":"Methods","children":[5114]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":16,"character":22}],"extendedBy":[{"type":"reference","target":5130,"name":"TakePhotosBeforeAndAfterInteractions"},{"type":"reference","target":5143,"name":"TakePhotosOfFailures"},{"type":"reference","target":5156,"name":"TakePhotosOfInteractions"}],"permalink":"/api/web/class/PhotoTakingStrategy","categories":[],"previousId":5088,"nextId":5130},{"id":5130,"name":"TakePhotosBeforeAndAfterInteractions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots) **both before and after**\\nevery single ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) performed\\nby the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n**Please note** that this strategy will result in _a lot_ of screenshots being taken,\\nwhich will seriously affect the performance of your tests.\\nFor this reason, it\'s best to use it only for debugging purposes."}]},"children":[{"id":5131,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5132,"name":"new TakePhotosBeforeAndAfterInteractions","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5130,"name":"TakePhotosBeforeAndAfterInteractions","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":5113,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":5112,"name":"PhotoTakingStrategy.constructor"}},{"id":5139,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5140,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5141,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2360,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2290,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5142,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5115,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":5114,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[5131]},{"title":"Methods","children":[5139]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosBeforeAndAfterInteractions.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":5111,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosBeforeAndAfterInteractions","categories":[],"previousId":5111,"nextId":5143},{"id":5143,"name":"TakePhotosOfFailures","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots)\\nwhen then ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) performed\\nby the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nresults in an error.\\n\\nThis strategy works best when you are interested in the screenshots only when\\na scenario fails."}]},"children":[{"id":5144,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5145,"name":"new TakePhotosOfFailures","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5143,"name":"TakePhotosOfFailures","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":5113,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":5112,"name":"PhotoTakingStrategy.constructor"}},{"id":5152,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5153,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5154,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2360,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2290,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5155,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5115,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":5114,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[5144]},{"title":"Methods","children":[5152]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosOfFailures.ts","line":18,"character":13}],"extendedTypes":[{"type":"reference","target":5111,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosOfFailures","categories":[],"previousId":5130,"nextId":5156},{"id":5156,"name":"TakePhotosOfInteractions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots)\\nwhen then ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nperforms any ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\nThis strategy works best when you want the results of your automated tests\\nto become comprehensive living documentation of your system.\\n\\n*Please note* that taking screenshots affects the performance of your tests."}]},"children":[{"id":5157,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5158,"name":"new TakePhotosOfInteractions","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5156,"name":"TakePhotosOfInteractions","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":5113,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":5112,"name":"PhotoTakingStrategy.constructor"}},{"id":5165,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5166,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5167,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2360,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2290,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5168,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2156,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5115,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":5114,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[5157]},{"title":"Methods","children":[5165]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosOfInteractions.ts","line":18,"character":13}],"extendedTypes":[{"type":"reference","target":5111,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosOfInteractions","categories":[],"previousId":5143}],"groups":[{"title":"Abilities","children":[3304]},{"title":"Activities","children":[3328,3374,3414,3454,3501,3513,3556,3596,3608,3645,3693,3733,3769,3804,3843]},{"title":"Errors","children":[3219,3245,3268]},{"title":"Expectations","children":[3294,3296,3298,3300,3302]},{"title":"Models","children":[3879,3916,3920,3951,4057,4174,4240,4290,4406,4482,4609,4697,4721,4851,4854,4066,4088,4112,4136,4158,4745,4767,4779,4793,4805,4817,4829,4841]},{"title":"Questions","children":[4857,4949,5044,5050,5056,5071,5082]},{"title":"Stage","children":[5088,5111,5130,5143,5156]}],"sources":[{"fileName":"packages/web/src/index.ts","line":1,"character":0}],"permalink":"/api/web"},"urlSlug":"web"}],"packageName":"@serenity-js/web","packageVersion":"3.31.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":26,"name":"@serenity-js/webdriverio/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6812,"name":"WebdriverIOFrameworkAdapterFactory","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":6813,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"signatures":[{"id":6814,"name":"new WebdriverIOFrameworkAdapterFactory","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"parameters":[{"id":6815,"name":"serenity","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1951,"name":"Serenity","package":"@serenity-js/core"}},{"id":6816,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}},{"id":6817,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6812,"name":"WebdriverIOFrameworkAdapterFactory","package":"@serenity-js/webdriverio"}}]},{"id":6821,"name":"init","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"signatures":[{"id":6822,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"parameters":[{"id":6823,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":6824,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6440,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio"}},{"id":6825,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6826,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedStandaloneCapabilities"},"name":"RequestedStandaloneCapabilities","package":"@wdio/types"},{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedStandaloneCapabilities"},"name":"RequestedStandaloneCapabilities","package":"@wdio/types"}},{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedMultiremoteCapabilities"},"name":"RequestedMultiremoteCapabilities","package":"@wdio/types"},{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedMultiremoteCapabilities"},"name":"RequestedMultiremoteCapabilities","package":"@wdio/types"}}]}},{"id":6827,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"WebdriverIOFrameworkAdapter","package":"@serenity-js/webdriverio"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[6813]},{"title":"Methods","children":[6821]}],"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":13,"character":13}],"permalink":"/api/webdriverio-adapter/class/WebdriverIOFrameworkAdapterFactory","categories":[]}],"groups":[{"title":"Test Runner Adapter","children":[6812]}],"sources":[{"fileName":"packages/webdriverio/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio-adapter"},"urlSlug":"webdriverio-adapter"},{"index":true,"label":"index","reflection":{"id":9,"name":"@serenity-js/webdriverio","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6440,"name":"WebdriverIOConfig","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"[WebdriverIO configuration object](https://webdriver.io/docs/configurationfile/),\\nwith [Serenity/JS-specific additions](https://serenity-js.orgapi/core/class/SerenityConfig/).\\n\\n## Integrating WebdriverIO with Serenity/JS\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    crew: [\\n      // Optional, print test execution results to standard output\\n      \'@serenity-js/console-reporter\',\\n\\n      // Optional, produce Serenity BDD reports\\n      // and living documentation (HTML)\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', {\\n          outputDirectory: \'target/site/serenity\'\\n      } ],\\n\\n      // Optional, automatically capture screenshots\\n      // upon interaction failure\\n      [ \'@serenity-js/web:Photographer\', {\\n          strategy: \'TakePhotosOfFailures\'\\n          // strategy: \'TakePhotosOfInteractions\'\\n      } ],\\n    ]\\n  },\\n\\n  // Configure your Cucumber runner\\n  cucumberOpts: {\\n    // see Cucumber configuration options below\\n  },\\n\\n  // ... or Jasmine runner\\n  jasmineOpts: {\\n    // see Jasmine configuration options below\\n  },\\n\\n  // ... or Mocha runner\\n  mochaOpts: {\\n     // see Mocha configuration options below\\n  },\\n\\n  runner: \'local\',\\n\\n  specs: [\\n    \'./features/*.feature\',\\n\\n    // or for Mocha/Jasmine\\n    // \'./*.spec.ts\'\\n  ],\\n\\n  // Any other WebdriverIO configuration\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":79,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Config"},"name":"WebdriverIO.Config","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Config"},{"type":"reference","target":6441,"name":"WithSerenityConfig","package":"@serenity-js/webdriverio"}]},"permalink":"/api/webdriverio#WebdriverIOConfig","categories":[],"previousId":6445,"nextId":6441},{"id":6441,"name":"WithSerenityConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"[WebdriverIO configuration object](https://webdriver.io/docs/configurationfile/),\\nwith [Serenity/JS-specific additions](https://serenity-js.orgapi/core/class/SerenityConfig/).\\n\\n## Integrating WebdriverIO with Serenity/JS\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WithSerenityConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIO.Config & WithSerenityConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    crew: [\\n      // Optional, print test execution results to standard output\\n      \'@serenity-js/console-reporter\',\\n\\n      // Optional, produce Serenity BDD reports\\n      // and living documentation (HTML)\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', {\\n          outputDirectory: \'target/site/serenity\'\\n      } ],\\n\\n      // Optional, automatically capture screenshots\\n      // upon interaction failure\\n      [ \'@serenity-js/web:Photographer\', {\\n          strategy: \'TakePhotosOfFailures\'\\n          // strategy: \'TakePhotosOfInteractions\'\\n      } ],\\n    ]\\n  },\\n\\n  // Configure your Cucumber runner\\n  cucumberOpts: {\\n    // see Cucumber configuration options below\\n  },\\n\\n  // ... or Jasmine runner\\n  jasmineOpts: {\\n    // see Jasmine configuration options below\\n  },\\n\\n  // ... or Mocha runner\\n  mochaOpts: {\\n     // see Mocha configuration options below\\n  },\\n\\n  runner: \'local\',\\n\\n  specs: [\\n    \'./features/*.feature\',\\n\\n    // or for Mocha/Jasmine\\n    // \'./*.spec.ts\'\\n  ],\\n\\n  // Any other WebdriverIO configuration\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"children":[{"id":6442,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS configuration with an additional "},{"kind":"code","text":"`runner`"},{"kind":"text","text":" entry\\nallowing to specify the test runner, such as "},{"kind":"code","text":"`cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`mocha`"},{"kind":"text","text":", or "},{"kind":"code","text":"`jasmine`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/webdriverio/src/config/WithSerenityConfig.ts","line":92,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6443,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6444,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/src/config/WithSerenityConfig.ts","line":92,"character":34}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6444]}],"sources":[{"fileName":"packages/webdriverio/src/config/WithSerenityConfig.ts","line":92,"character":32}]}}]}}],"groups":[{"title":"Properties","children":[6442]}],"sources":[{"fileName":"packages/webdriverio/src/config/WithSerenityConfig.ts","line":79,"character":17}],"permalink":"/api/webdriverio/interface/WithSerenityConfig","categories":[],"previousId":6440,"nextId":6472},{"id":10,"name":"default","variant":"declaration","kind":32,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO Framework Adapter integrates WebdriverIO with Serenity/JS"}]},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":12,"character":0}],"type":{"type":"reflection","declaration":{"id":11,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12,"name":"init","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":13,"character":10}],"signatures":[{"id":13,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":13,"character":10}],"parameters":[{"id":14,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":15,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6440,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio"}},{"id":16,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":17,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedStandaloneCapabilities"},"name":"RequestedStandaloneCapabilities","package":"@wdio/types"},{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedStandaloneCapabilities"},"name":"RequestedStandaloneCapabilities","package":"@wdio/types"}},{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedMultiremoteCapabilities"},"name":"RequestedMultiremoteCapabilities","package":"@wdio/types"},{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedMultiremoteCapabilities"},"name":"RequestedMultiremoteCapabilities","package":"@wdio/types"}}]}},{"id":18,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":19,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20,"name":"hasTests","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":17}],"type":{"type":"reflection","declaration":{"id":21,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":27}],"signatures":[{"id":22,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":27}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":23,"name":"run","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":42}],"type":{"type":"reflection","declaration":{"id":24,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":47}],"signatures":[{"id":25,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":47}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}}],"groups":[{"title":"Properties","children":[20,23]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":15}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[12]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":12,"character":15}]}},"permalink":"/api/webdriverio#default","categories":[],"previousId":6735},{"id":6445,"name":"BrowseTheWebWithWebdriverIO","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [WebdriverIO](https://webdriver.io/).\\n\\n## Using WebdriverIO to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio-8-8\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))  // `browser` is global in WebdriverIO tests\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [WebdriverIO website](https://webdriver.io/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":6446,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"signatures":[{"id":6447,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"parameters":[{"id":6448,"name":"browserInstance","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6445,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio"}}]},{"id":6468,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":6469,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}},{"id":6470,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":6471,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}},{"id":6456,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"signatures":[{"id":6457,"name":"new BrowseTheWebWithWebdriverIO","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"parameters":[{"id":6458,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3920,"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6445,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}},{"id":6462,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":6463,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":6464,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":6465,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":6466,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":6467,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}},{"id":6459,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":47,"character":10}],"signatures":[{"id":6460,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"groups":[{"title":"Constructors","children":[6456]},{"title":"Methods","children":[6446,6468,6470,6462,6464,6466,6459]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":42,"character":13}],"extendedTypes":[{"type":"reference","target":3304,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"implementedTypes":[{"type":"reference","target":571,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/webdriverio/class/BrowseTheWebWithWebdriverIO","categories":[],"nextId":6440},{"id":6472,"name":"WebdriverIOBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":6496,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":6497,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":6498,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6614,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":6499,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":6500,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":6501,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":6614,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":6502,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":6503,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":6504,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":6505,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":6506,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":6507,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":6508,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}},{"id":6473,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":20,"character":4}],"signatures":[{"id":6474,"name":"new WebdriverIOBrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":20,"character":4}],"parameters":[{"id":6475,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6472,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}},{"id":6477,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":28,"character":19}],"signatures":[{"id":6478,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":28,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":6614,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":6479,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":64,"character":19}],"signatures":[{"id":6480,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":64,"character":19}],"parameters":[{"id":6481,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6614,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":6484,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":103,"character":19}],"signatures":[{"id":6485,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":103,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6614,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":6490,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":169,"character":13}],"signatures":[{"id":6491,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":169,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}},{"id":6492,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":173,"character":10}],"signatures":[{"id":6493,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":173,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"groups":[{"title":"Constructors","children":[6473]},{"title":"Methods","children":[6496,6499,6502,6505,6507,6477,6479,6484,6490,6492]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":18,"character":13}],"extendedTypes":[{"type":"reference","target":3920,"typeArguments":[{"type":"reference","target":6614,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"implementedTypes":[{"type":"reference","target":571,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/webdriverio/class/WebdriverIOBrowsingSession","categories":[],"previousId":6441,"nextId":6509},{"id":6509,"name":"WebdriverIOCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":6598,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":6599,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":6600,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":6601,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":6602,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":6603,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":6604,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":6605,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":6606,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":6607,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":6608,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":6609,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":6610,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":6611,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":6612,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":6613,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}},{"id":6588,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"signatures":[{"id":6589,"name":"new WebdriverIOCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"parameters":[{"id":6590,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":6591,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":6509,"name":"WebdriverIOCookie","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":6593,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"signatures":[{"id":6594,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"groups":[{"title":"Constructors","children":[6588]},{"title":"Methods","children":[6598,6600,6602,6604,6606,6608,6610,6612,6593]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOCookie","categories":[],"previousId":6472,"nextId":6614},{"id":6614,"name":"WebdriverIOPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":6728,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":6729,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":6730,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4854,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":6731,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":6732,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":4158,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":6733,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":6734,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}},{"id":6626,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":41,"character":4}],"signatures":[{"id":6627,"name":"new WebdriverIOPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":41,"character":4}],"parameters":[{"id":6628,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6472,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio"}},{"id":6629,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":6630,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4158,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":6631,"name":"errorHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"WebdriverIOErrorHandler","package":"@serenity-js/webdriverio"}},{"id":6632,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6614,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}},{"id":6637,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":56,"character":4}],"signatures":[{"id":6638,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":56,"character":4}],"parameters":[{"id":6639,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":6640,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":67,"character":4}],"signatures":[{"id":6641,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":67,"character":4}],"parameters":[{"id":6642,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":6643,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":73,"character":4}],"signatures":[{"id":6644,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":73,"character":4}],"parameters":[{"id":6645,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4482,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":6646,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":81,"character":10}],"signatures":[{"id":6647,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":81,"character":10}],"parameters":[{"id":6648,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":6649,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":86,"character":10}],"signatures":[{"id":6650,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":86,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":6651,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":91,"character":10}],"signatures":[{"id":6652,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":91,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":6653,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":96,"character":10}],"signatures":[{"id":6654,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":96,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":6655,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":10}],"signatures":[{"id":6656,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":10}],"parameters":[{"id":6657,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":6658,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":113,"character":10}],"signatures":[{"id":6659,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":113,"character":10}],"typeParameter":[{"id":6660,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6661,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6662,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6663,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":114,"character":26}],"signatures":[{"id":6664,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":114,"character":26}],"parameters":[{"id":6665,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6661,"name":"InnerArguments","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":6660,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}]}}]}},{"id":6666,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6661,"name":"InnerArguments","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6660,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":6667,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":139,"character":10}],"signatures":[{"id":6668,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":139,"character":10}],"typeParameter":[{"id":6669,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6670,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6671,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6672,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":140,"character":26}],"signatures":[{"id":6673,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":140,"character":26}],"parameters":[{"id":6674,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":6670,"name":"Parameters","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":6675,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":140,"character":74}],"signatures":[{"id":6676,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":140,"character":74}],"parameters":[{"id":6677,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6669,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":6678,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6670,"name":"Parameters","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6669,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":6679,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":170,"character":4}],"signatures":[{"id":6680,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":170,"character":4}],"typeParameter":[{"id":6681,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":6681,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":6682,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":182,"character":10}],"signatures":[{"id":6683,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":182,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":6684,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":201,"character":10}],"signatures":[{"id":6685,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":201,"character":10}],"parameters":[{"id":6686,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":6687,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":205,"character":10}],"signatures":[{"id":6688,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":205,"character":10}],"parameters":[{"id":6689,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4057,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":6690,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"signatures":[{"id":6691,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":6692,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"signatures":[{"id":6693,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":6694,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":233,"character":10}],"signatures":[{"id":6695,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":233,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":6696,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":239,"character":10}],"signatures":[{"id":6697,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":239,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":6698,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":245,"character":10}],"signatures":[{"id":6699,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":245,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":6700,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6701,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":245,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":6702,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":245,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6701,6702]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":245,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":6703,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":263,"character":10}],"signatures":[{"id":6704,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":263,"character":10}],"parameters":[{"id":6705,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":6706,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6707,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":263,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":6708,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":263,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6707,6708]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":263,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":6709,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"signatures":[{"id":6710,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":6711,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":274,"character":10}],"signatures":[{"id":6712,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":274,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":6713,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":278,"character":10}],"signatures":[{"id":6714,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":278,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}},{"id":6717,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":294,"character":10}],"signatures":[{"id":6718,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":294,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"groups":[{"title":"Constructors","children":[6626]},{"title":"Properties","children":[6728]},{"title":"Methods","children":[6729,6731,6733,6637,6640,6643,6646,6649,6651,6653,6655,6658,6667,6679,6682,6684,6687,6690,6692,6694,6696,6698,6703,6709,6711,6713,6717]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":30,"character":13}],"extendedTypes":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"implementedTypes":[{"type":"reference","target":571,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/webdriverio/class/WebdriverIOPage","categories":[],"previousId":6509,"nextId":6735},{"id":6735,"name":"WebdriverIOPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":6807,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":6752,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":6753,"name":"new WebdriverIOPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":6754,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6735,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}},{"id":6808,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":6809,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":6810,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":6811,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}},{"id":6755,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"signatures":[{"id":6756,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"parameters":[{"id":6757,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6735,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":6735,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":6758,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"signatures":[{"id":6759,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"parameters":[{"id":6760,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6735,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":6735,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":6761,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"signatures":[{"id":6762,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":6763,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"signatures":[{"id":6764,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":6765,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"signatures":[{"id":6766,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":6767,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"signatures":[{"id":6768,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"parameters":[{"id":6769,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":6770,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"signatures":[{"id":6771,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":6772,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"signatures":[{"id":6773,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":6774,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"signatures":[{"id":6775,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":6776,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"signatures":[{"id":6777,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"parameters":[{"id":6778,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":6779,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"signatures":[{"id":6780,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":6781,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"signatures":[{"id":6782,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"parameters":[{"id":6783,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":6784,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"signatures":[{"id":6785,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":6786,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"signatures":[{"id":6787,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":6788,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"signatures":[{"id":6789,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":6790,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"signatures":[{"id":6791,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4854,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":6792,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":213,"character":10}],"signatures":[{"id":6793,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":213,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":6794,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":218,"character":10}],"signatures":[{"id":6795,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":218,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":6796,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":223,"character":10}],"signatures":[{"id":6797,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":223,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":6798,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":228,"character":10}],"signatures":[{"id":6799,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":228,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}},{"id":6800,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":233,"character":10}],"signatures":[{"id":6801,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":233,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":6802,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":238,"character":10}],"signatures":[{"id":6803,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":238,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"groups":[{"title":"Constructors","children":[6752]},{"title":"Properties","children":[6807]},{"title":"Methods","children":[6808,6810,6755,6758,6761,6763,6765,6767,6770,6772,6774,6776,6779,6781,6784,6786,6788,6790,6792,6794,6796,6798,6800,6802]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOPageElement","categories":[],"previousId":6614,"nextId":10}],"groups":[{"title":"Abilities","children":[6445]},{"title":"Configuration","children":[6440,6441]},{"title":"Models","children":[6472,6509,6614,6735]},{"title":"Variables","children":[10]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio"},"urlSlug":"webdriverio"}],"packageName":"@serenity-js/webdriverio","packageVersion":"3.31.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":44,"name":"@serenity-js/webdriverio-8/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":7291,"name":"WebdriverIOFrameworkAdapterFactory","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":7292,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"signatures":[{"id":7293,"name":"new WebdriverIOFrameworkAdapterFactory","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"parameters":[{"id":7294,"name":"serenity","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1951,"name":"Serenity","package":"@serenity-js/core"}},{"id":7295,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}},{"id":7296,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}}],"type":{"type":"reference","target":7291,"name":"WebdriverIOFrameworkAdapterFactory","package":"@serenity-js/webdriverio-8"}}]},{"id":7300,"name":"init","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"signatures":[{"id":7301,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"parameters":[{"id":7302,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":7303,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6828,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio-8"}},{"id":7304,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":7305,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapability"},"name":"RemoteCapability","package":"@wdio/types"}},{"id":7306,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio-8"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio-8"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"WebdriverIOFrameworkAdapter","package":"@serenity-js/webdriverio-8"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[7292]},{"title":"Methods","children":[7300]}],"sources":[{"fileName":"packages/webdriverio-8/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":13,"character":13}],"permalink":"/api/webdriverio-8-adapter/class/WebdriverIOFrameworkAdapterFactory","categories":[]}],"groups":[{"title":"Test Runner Adapter","children":[7291]}],"sources":[{"fileName":"packages/webdriverio-8/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio-8-adapter"},"urlSlug":"webdriverio-8-adapter"},{"index":true,"label":"index","reflection":{"id":27,"name":"@serenity-js/webdriverio-8","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6828,"name":"WebdriverIOConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"[WebdriverIO configuration object](https://webdriver.io/docs/configurationfile/),\\nwith [Serenity/JS-specific additions](https://serenity-js.orgapi/core/class/SerenityConfig/).\\n\\n## Integrating WebdriverIO with Serenity/JS\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio-8\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio-8\',\\n\\n  serenity: {\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    crew: [\\n      // Optional, print test execution results to standard output\\n      \'@serenity-js/console-reporter\',\\n\\n      // Optional, produce Serenity BDD reports\\n      // and living documentation (HTML)\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', {\\n          outputDirectory: \'target/site/serenity\'\\n      } ],\\n\\n      // Optional, automatically capture screenshots\\n      // upon interaction failure\\n      [ \'@serenity-js/web:Photographer\', {\\n          strategy: \'TakePhotosOfFailures\'\\n          // strategy: \'TakePhotosOfInteractions\'\\n      } ],\\n    ]\\n  },\\n\\n  // Configure your Cucumber runner\\n  cucumberOpts: {\\n    // see Cucumber configuration options below\\n  },\\n\\n  // ... or Jasmine runner\\n  jasmineOpts: {\\n    // see Jasmine configuration options below\\n  },\\n\\n  // ... or Mocha runner\\n  mochaOpts: {\\n     // see Mocha configuration options below\\n  },\\n\\n  runner: \'local\',\\n\\n  specs: [\\n    \'./features/*.feature\',\\n\\n    // or for Mocha/Jasmine\\n    // \'./*.spec.ts\'\\n  ],\\n\\n  // Any other WebdriverIO configuration\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"children":[{"id":6911,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protocol to use when communicating with the Selenium standalone server (or driver)."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'http\'\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":65,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.protocol"}},{"id":6912,"name":"hostname","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Host of your WebDriver server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'localhost\'\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":71,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.hostname"}},{"id":6913,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Port your WebDriver server is on."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":75,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.port"}},{"id":6914,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to WebDriver endpoint or grid server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'/\'\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":81,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.path"}},{"id":6915,"name":"queryParams","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Query paramaters that are propagated to the driver server."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":85,"character":4}],"type":{"type":"reflection","declaration":{"id":6916,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":85,"character":18}],"indexSignature":{"id":6917,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":86,"character":8}],"parameters":[{"id":6918,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.queryParams"}},{"id":6919,"name":"user","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Your cloud service username (only works for [Sauce Labs](https://saucelabs.com),\\n[Browserstack](https://www.browserstack.com), [TestingBot](https://testingbot.com),\\n[CrossBrowserTesting](https://crossbrowsertesting.com) or\\n[LambdaTest](https://www.lambdatest.com) accounts). If set, WebdriverIO will\\nautomatically set connection options for you. If you don\'t use a cloud provider this\\ncan be used to authenticate any other WebDriver backend."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":96,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.user"}},{"id":6920,"name":"key","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Your cloud service access key or secret key (only works for\\n[Sauce Labs](https://saucelabs.com), [Browserstack](https://www.browserstack.com),\\n[TestingBot](https://testingbot.com), [CrossBrowserTesting](https://crossbrowsertesting.com)\\nor [LambdaTest](https://www.lambdatest.com) accounts). If set, WebdriverIO will\\nautomatically set connection options for you. If you don\'t use a cloud provider this\\ncan be used to authenticate any other WebDriver backend."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":105,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.key"}},{"id":6886,"name":"logLevel","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Level of logging verbosity."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'info\'\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":148,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"WebDriverLogTypes"},"name":"WebDriverLogTypes","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.logLevel"}},{"id":6887,"name":"logLevels","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set specific log levels per logger\\nuse \'silent\' level to disable logger"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":153,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"WebDriverLogTypes"},"name":"WebDriverLogTypes","package":"@wdio/types"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.logLevels"}},{"id":6888,"name":"connectionRetryTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Timeout for any WebDriver request to a driver or grid."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n120000\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":159,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.connectionRetryTimeout"}},{"id":6889,"name":"connectionRetryCount","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Count of request retries to the Selenium server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n3\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":165,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.connectionRetryCount"}},{"id":6890,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify custom headers to pass into every request."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":169,"character":4}],"type":{"type":"reflection","declaration":{"id":6891,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":169,"character":14}],"indexSignature":{"id":6892,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":170,"character":8}],"parameters":[{"id":6893,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.headers"}},{"id":6894,"name":"agent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Allows you to use a custom http/https/http2 [agent](https://www.npmjs.com/package/got#agent) to make requests."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```js\\n{\\n    http: new http.Agent({ keepAlive: true }),\\n    https: new https.Agent({ keepAlive: true })\\n}\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":183,"character":4}],"type":{"type":"reflection","declaration":{"id":6895,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6896,"name":"http","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":184,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".Agent"},"name":"Agent","package":"@types/node","qualifiedName":"\\"http\\".Agent"}},{"id":6897,"name":"https","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":185,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".Agent"},"name":"Agent","package":"@types/node","qualifiedName":"\\"https\\".Agent"}}],"groups":[{"title":"Properties","children":[6896,6897]}],"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":183,"character":12}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.agent"}},{"id":6898,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function intercepting [HTTP request options](https://github.com/sindresorhus/got#options) before a WebDriver request is made."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":190,"character":4}],"type":{"type":"reflection","declaration":{"id":6899,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":190,"character":23}],"signatures":[{"id":6900,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":190,"character":23}],"parameters":[{"id":6901,"name":"requestOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.transformRequest"}},{"id":6902,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function intercepting HTTP response objects after a WebDriver response has arrived."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":194,"character":4}],"type":{"type":"reflection","declaration":{"id":6903,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":194,"character":24}],"signatures":[{"id":6904,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":194,"character":24}],"parameters":[{"id":6905,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibResponse"},"name":"RequestLibResponse","package":"@wdio/types"}},{"id":6906,"name":"requestOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibResponse"},"name":"RequestLibResponse","package":"@wdio/types"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.transformResponse"}},{"id":6907,"name":"enableDirectConnect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Appium direct connect options (see: https://appiumpro.com/editions/86-connecting-directly-to-appium-hosts-in-distributed-environments)"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":198,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.enableDirectConnect"}},{"id":6908,"name":"strictSSL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether it requires SSL certificates to be valid in HTTP/s requests\\nfor an environment which cannot get process environment well."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\ntrue\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":205,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.strictSSL"}},{"id":6909,"name":"outputDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Directory to store all testrunner log files (including reporter logs and "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" logs).\\nIf not set, all logs are streamed to "},{"kind":"code","text":"`stdout`"},{"kind":"text","text":". Since most reporters are made to log to\\n"},{"kind":"code","text":"`stdout`"},{"kind":"text","text":", it is recommended to only use this option for specific reporters where it\\nmakes more sense to push report into a file (like the "},{"kind":"code","text":"`junit`"},{"kind":"text","text":" reporter, for example).\\n\\nWhen running in standalone mode, the only log generated by WebdriverIO will be\\nthe "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" log."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":215,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.outputDir"}},{"id":6910,"name":"cacheDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The path to the root of the cache directory. This directory is used to store all drivers that are downloaded\\nwhen attempting to start a session."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":220,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cacheDir"}},{"id":6921,"name":"automationProtocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Define the protocol you want to use for your browser automation.\\nCurrently only ["},{"kind":"code","text":"`webdriver`"},{"kind":"text","text":"](https://www.npmjs.com/package/webdriver) and\\n["},{"kind":"code","text":"`devtools`"},{"kind":"text","text":"](https://www.npmjs.com/package/devtools) are supported,\\nas these are the main browser automation technologies available."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"this option will be removed in future versions of WebdriverIO. We recommend to use WebDriver for browser or mobile automation."}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":277,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"SupportedProtocols"},"name":"SupportedProtocols","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.automationProtocol"}},{"id":6922,"name":"region","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If running on Sauce Labs, you can choose to run tests between different data centers:\\nUS or EU. To change your region to EU, add region: \'eu\' to your config."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":282,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"SauceRegions"},"name":"SauceRegions","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.region"}},{"id":6923,"name":"headless","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sauce Labs provides a headless offering that allows you to run Chrome and Firefox tests headless."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":286,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.headless"}},{"id":6924,"name":"baseUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Shorten url command calls by setting a base URL."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":290,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.baseUrl"}},{"id":6925,"name":"waitforTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default timeout for all "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" commands. (Note the lowercase f in the option name.)\\nThis timeout only affects commands starting with "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" and their default wait time."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":295,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.waitforTimeout"}},{"id":6926,"name":"waitforInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default interval for all "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" commands to check if an expected state (e.g.,\\nvisibility) has been changed."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":300,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.waitforInterval"}},{"id":6832,"name":"capabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Defines a set of capabilities you want to run in your testrunner session. Check out the\\n[WebDriver Protocol](https://w3c.github.io/webdriver/#capabilities) for more details.\\nIf you want to run a multiremote session you need to define instead of an array of\\ncapabilities an object that has an arbitrary browser instance name as string and its\\ncapabilities as values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\\n// wdio.conf.js\\nexport const config = {\\n  // define parallel running capabilities\\n  capabilities: [{\\n    browserName: \'safari\',\\n    platformName: \'MacOS 10.13\',\\n    ...\\n  }, {\\n    browserName: \'microsoftedge\',\\n    platformName: \'Windows 10\',\\n    ...\\n  }]\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```\\n// wdio.conf.js\\nexport const config = {\\n  // multiremote example\\n  capabilities: {\\n    browserA: {\\n      browserName: \'chrome\',\\n      browserVersion: 86\\n      platformName: \'Windows 10\'\\n    },\\n    browserB: {\\n      browserName: \'firefox\',\\n      browserVersion: 74\\n      platformName: \'Mac OS X\'\\n    }\\n  }\\n})\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":347,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapabilities"},"name":"RemoteCapabilities","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.capabilities"}},{"id":6833,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Type of runner\\n- local: every spec file group is spawned in its own local process\\n  running an independant browser session\\n- browser: all spec files are run within the browser"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":354,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"local"},{"type":"literal","value":"browser"},{"type":"tuple","elements":[{"type":"literal","value":"browser"},{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.BrowserRunnerOptions"},"name":"BrowserRunnerOptions","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.BrowserRunnerOptions"}]},{"type":"tuple","elements":[{"type":"literal","value":"local"},{"type":"intrinsic","name":"never"}]}]},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.runner"}},{"id":6834,"name":"rootDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Project root directory path."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":358,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.rootDir"}},{"id":6835,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Define specs for test execution. You can either specify a glob\\npattern to match multiple files at once or wrap a glob or set of\\npaths into an array to run them within a single worker process."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":364,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specs"}},{"id":6836,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Exclude specs from test execution."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":368,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.exclude"}},{"id":6837,"name":"suites","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An object describing various of suites, which you can then specify\\nwith the --suite option on the wdio CLI."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":373,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.suites"}},{"id":6838,"name":"maxInstances","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total parallel running workers."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":377,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.maxInstances"}},{"id":6839,"name":"maxInstancesPerCapability","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total parallel running workers per capability."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":381,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.maxInstancesPerCapability"}},{"id":6840,"name":"injectGlobals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inserts WebdriverIO\'s globals (e.g. "},{"kind":"code","text":"`browser`"},{"kind":"text","text":", "},{"kind":"code","text":"`$`"},{"kind":"text","text":" and "},{"kind":"code","text":"`$$`"},{"kind":"text","text":") into the\\nglobal environment. If you set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", you should import from\\n"},{"kind":"code","text":"`@wdio/globals`"},{"kind":"text","text":", e.g.:\\n\\n"},{"kind":"code","text":"```ts\\nimport { browser, $, $$, expect } from \'@wdio/globals\'\\n```"},{"kind":"text","text":"\\n\\nNote: WebdriverIO doesn\'t handle injection of test framework specific\\nglobals."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\ntrue\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":396,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.injectGlobals"}},{"id":6841,"name":"bail","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you want your test run to stop after a specific number of test failures, use bail.\\n(It defaults to 0, which runs all tests no matter what.) Note: Please be aware that\\nwhen using a third party test runner (such as Mocha), additional configuration might\\nbe required."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":403,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.bail"}},{"id":6842,"name":"updateSnapshots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set to true if you want to update your snapshots."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":407,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"none"},{"type":"literal","value":"all"},{"type":"literal","value":"new"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.updateSnapshots"}},{"id":6843,"name":"resolveSnapshotPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Overrides default snapshot path. For example, to store snapshots next to test files."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n__snapshots__ stores snapshot files in __snapshots__ directory next to the test file.\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":412,"character":4}],"type":{"type":"reflection","declaration":{"id":6844,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":412,"character":26}],"signatures":[{"id":6845,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":412,"character":26}],"parameters":[{"id":6846,"name":"testPath","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":6847,"name":"snapExtension","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.resolveSnapshotPath"}},{"id":6848,"name":"specFileRetries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of retry attempts for an entire specfile when it fails as a whole."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":416,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetries"}},{"id":6849,"name":"specFileRetriesDelay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Delay in seconds between the spec file retry attempts"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":420,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetriesDelay"}},{"id":6850,"name":"specFileRetriesDeferred","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not retried spec files should be retried immediately or deferred to the end of the queue"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":424,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetriesDeferred"}},{"id":6851,"name":"groupLogsByTestSpec","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Choose the log output view.\\nIf set to \\"false\\" logs from different test files will be printed in real-time.\\nPlease note that this may result in the mixing of log outputs from different Test Specs when running in parallel.\\nIf set to \\"true\\" log outputs will be grouped by test files and printed only when the test is completed.\\nBy default, it is set to \\"false\\" so logs are printed in real-time."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\nfalse\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":434,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.groupLogsByTestSpec"}},{"id":6852,"name":"services","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Services take over a specific job you don\'t want to take care of. They enhance\\nyour test setup with almost no effort."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":439,"character":4}],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Services.ts","qualifiedName":"ServiceEntry"},"name":"ServiceEntry","package":"@wdio/types"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.services"}},{"id":6853,"name":"framework","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Defines the test framework to be used by the WDIO testrunner."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":443,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.framework"}},{"id":6854,"name":"reporters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of reporters to use. A reporter can be either a string, or an array of\\n"},{"kind":"code","text":"`[\'reporterName\', { <reporter options> }]`"},{"kind":"text","text":" where the first element is a string\\nwith the reporter name and the second element an object with reporter options."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":449,"character":4}],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Reporters.ts","qualifiedName":"ReporterEntry"},"name":"ReporterEntry","package":"@wdio/types"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporters"}},{"id":6855,"name":"reporterSyncInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines in which interval the reporter should check if they are synchronised\\nif they report their logs asynchronously (e.g. if logs are streamed to a 3rd\\nparty vendor)."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":455,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporterSyncInterval"}},{"id":6856,"name":"reporterSyncTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines the maximum time reporters have to finish uploading all their logs\\nuntil an error is being thrown by the testrunner."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":460,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporterSyncTimeout"}},{"id":6857,"name":"execArgv","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Node arguments to specify when launching child processes."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":464,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.execArgv"}},{"id":6858,"name":"runnerEnv","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A set of environment variables to be injected into the worker process."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":468,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.runnerEnv"}},{"id":6859,"name":"filesToWatch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Files to watch when running "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" with the "},{"kind":"code","text":"`--watch`"},{"kind":"text","text":" flag."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":472,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.filesToWatch"}},{"id":6860,"name":"cucumberFeaturesWithLineNumbers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of cucumber features with line numbers (when using [cucumber framework](https://webdriver.io/docs/frameworks.html#using-cucumber))."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n[]\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":477,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cucumberFeaturesWithLineNumbers"}},{"id":6861,"name":"watch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"flags"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":481,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.watch"}},{"id":6862,"name":"shard","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Shard tests and execute only the selected shard. Specify in the one-based form like "},{"kind":"code","text":"`{ total: 5, current: 2 }`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":485,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"ShardOptions"},"name":"ShardOptions","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.shard"}},{"id":6863,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"framework options"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":489,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.MochaOpts"},"name":"MochaOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.MochaOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.mochaOpts"}},{"id":6864,"name":"jasmineOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":490,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.JasmineOpts"},"name":"JasmineOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.JasmineOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.jasmineOpts"}},{"id":6865,"name":"cucumberOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":491,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.CucumberOpts"},"name":"CucumberOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.CucumberOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cucumberOpts"}},{"id":6866,"name":"autoCompileOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"autocompile options"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":495,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"AutoCompileConfig"},"name":"AutoCompileConfig","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.autoCompileOpts"}},{"id":6867,"name":"onPrepare","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":107,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onPrepare"}},{"id":6868,"name":"onComplete","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":116,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onComplete"}},{"id":6869,"name":"onWorkerStart","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":126,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onWorkerStart"}},{"id":6870,"name":"onWorkerEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":134,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onWorkerEnd"}},{"id":6871,"name":"before","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":142,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.before"}},{"id":6872,"name":"after","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":150,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.after"}},{"id":6873,"name":"beforeSession","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":159,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeSession"}},{"id":6874,"name":"afterSession","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":166,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterSession"}},{"id":6875,"name":"onReload","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":172,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onReload"}},{"id":6876,"name":"beforeSuite","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":177,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeSuite"}},{"id":6877,"name":"afterSuite","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":182,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterSuite"}},{"id":6878,"name":"beforeTest","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":188,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeTest"}},{"id":6879,"name":"afterTest","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":199,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterTest"}},{"id":6880,"name":"beforeHook","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":207,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeHook"}},{"id":6881,"name":"afterHook","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":216,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterHook"}},{"id":6882,"name":"beforeCommand","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":222,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeCommand"}},{"id":6883,"name":"afterCommand","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":230,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterCommand"}},{"id":6884,"name":"beforeAssertion","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":236,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeAssertion"}},{"id":6885,"name":"afterAssertion","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":244,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterAssertion"}},{"id":6829,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS configuration with an additional "},{"kind":"code","text":"`runner`"},{"kind":"text","text":" entry\\nallowing to specify the test runner, such as "},{"kind":"code","text":"`cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`mocha`"},{"kind":"text","text":", or "},{"kind":"code","text":"`jasmine`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/webdriverio-8/src/config/WebdriverIOConfig.ts","line":93,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6830,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6831,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/src/config/WebdriverIOConfig.ts","line":93,"character":34}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6831]}],"sources":[{"fileName":"packages/webdriverio-8/src/config/WebdriverIOConfig.ts","line":93,"character":32}]}}]}}],"groups":[{"title":"Properties","children":[6911,6912,6913,6914,6915,6919,6920,6886,6887,6888,6889,6890,6894,6898,6902,6907,6908,6909,6910,6921,6922,6923,6924,6925,6926,6832,6833,6834,6835,6836,6837,6838,6839,6840,6841,6842,6843,6848,6849,6850,6851,6852,6853,6854,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6829]},{"title":"Methods","children":[6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885]}],"sources":[{"fileName":"packages/webdriverio-8/src/config/WebdriverIOConfig.ts","line":80,"character":17}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"Testrunner"},"name":"Testrunner","package":"@wdio/types"}],"permalink":"/api/webdriverio-8/interface/WebdriverIOConfig","categories":[],"previousId":6927,"nextId":6952},{"id":28,"name":"default","variant":"declaration","kind":32,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO Framework Adapter integrates WebdriverIO with Serenity/JS"}]},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":12,"character":0}],"type":{"type":"reflection","declaration":{"id":29,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":30,"name":"init","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":13,"character":10}],"signatures":[{"id":31,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":13,"character":10}],"parameters":[{"id":32,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":33,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6828,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio-8"}},{"id":34,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":35,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapability"},"name":"RemoteCapability","package":"@wdio/types"}},{"id":36,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio-8"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio-8"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":37,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":38,"name":"hasTests","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":17}],"type":{"type":"reflection","declaration":{"id":39,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":27}],"signatures":[{"id":40,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":27}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":41,"name":"run","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":42}],"type":{"type":"reflection","declaration":{"id":42,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":47}],"signatures":[{"id":43,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":47}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}}],"groups":[{"title":"Properties","children":[38,41]}],"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":15}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[30]}],"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":12,"character":15}]}},"permalink":"/api/webdriverio-8#default","categories":[],"previousId":7214},{"id":6927,"name":"BrowseTheWebWithWebdriverIO","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [WebdriverIO](https://webdriver.io/).\\n\\n## Using WebdriverIO to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio-8\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))  // `browser` is global in WebdriverIO tests\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [WebdriverIO website](https://webdriver.io/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":6928,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"signatures":[{"id":6929,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"parameters":[{"id":6930,"name":"browserInstance","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6927,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio-8"}}]},{"id":6948,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":6949,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}},{"id":6950,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":6951,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}},{"id":6938,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"signatures":[{"id":6939,"name":"new BrowseTheWebWithWebdriverIO","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"parameters":[{"id":6940,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3920,"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6927,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio-8"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}},{"id":6942,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":6943,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":6944,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":6945,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":6946,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":6947,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[6938]},{"title":"Methods","children":[6928,6948,6950,6942,6944,6946]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":41,"character":13}],"extendedTypes":[{"type":"reference","target":3304,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"permalink":"/api/webdriverio-8/class/BrowseTheWebWithWebdriverIO","categories":[],"nextId":6828},{"id":6952,"name":"WebdriverIOBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":6979,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":6980,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":6981,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":7097,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":6982,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":6983,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":6984,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":7097,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":6985,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":6986,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":6987,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":6988,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":6989,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":6990,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":6991,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}},{"id":6953,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":21,"character":4}],"signatures":[{"id":6954,"name":"new WebdriverIOBrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":21,"character":4}],"parameters":[{"id":6955,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6952,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio-8"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}},{"id":6957,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":29,"character":19}],"signatures":[{"id":6958,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":29,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":7097,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":6959,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":62,"character":19}],"signatures":[{"id":6960,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":62,"character":19}],"parameters":[{"id":6961,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":7097,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":6964,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":101,"character":19}],"signatures":[{"id":6965,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":101,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":7097,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":6975,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":173,"character":13}],"signatures":[{"id":6976,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":173,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3916,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[6953]},{"title":"Methods","children":[6979,6982,6985,6988,6990,6957,6959,6964,6975]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":19,"character":13}],"extendedTypes":[{"type":"reference","target":3920,"typeArguments":[{"type":"reference","target":7097,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"permalink":"/api/webdriverio-8/class/WebdriverIOBrowsingSession","categories":[],"previousId":6828,"nextId":6992},{"id":6992,"name":"WebdriverIOCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":7081,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":7082,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":7083,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":7084,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":7085,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":7086,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":7087,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":7088,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":7089,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":7090,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":7091,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":7092,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":7093,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":7094,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":7095,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":7096,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}},{"id":7071,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"signatures":[{"id":7072,"name":"new WebdriverIOCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"parameters":[{"id":7073,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":7074,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":6992,"name":"WebdriverIOCookie","package":"@serenity-js/webdriverio-8"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":7076,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"signatures":[{"id":7077,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"groups":[{"title":"Constructors","children":[7071]},{"title":"Methods","children":[7081,7083,7085,7087,7089,7091,7093,7095,7076]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOCookie.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/webdriverio-8/class/WebdriverIOCookie","categories":[],"previousId":6952,"nextId":7097},{"id":7097,"name":"WebdriverIOPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":7207,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":7208,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":7209,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4854,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":7210,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":7211,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":4158,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":7212,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":7213,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}},{"id":7109,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":32,"character":4}],"signatures":[{"id":7110,"name":"new WebdriverIOPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":32,"character":4}],"parameters":[{"id":7111,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6952,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio-8"}},{"id":7112,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":7113,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4158,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":7114,"name":"errorHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"WebdriverIOErrorHandler","package":"@serenity-js/webdriverio-8"}},{"id":7115,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":7097,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"},"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}},{"id":7120,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":47,"character":4}],"signatures":[{"id":7121,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":47,"character":4}],"parameters":[{"id":7122,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":7123,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":58,"character":4}],"signatures":[{"id":7124,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":58,"character":4}],"parameters":[{"id":7125,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":7126,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":64,"character":4}],"signatures":[{"id":7127,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":64,"character":4}],"parameters":[{"id":7128,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4841,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4482,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":7129,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":72,"character":10}],"signatures":[{"id":7130,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":72,"character":10}],"parameters":[{"id":7131,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":7132,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":76,"character":10}],"signatures":[{"id":7133,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":76,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":7134,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":80,"character":10}],"signatures":[{"id":7135,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":80,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":7136,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":84,"character":10}],"signatures":[{"id":7137,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":84,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":7138,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":88,"character":10}],"signatures":[{"id":7139,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":88,"character":10}],"parameters":[{"id":7140,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4174,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":7141,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":100,"character":10}],"signatures":[{"id":7142,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":100,"character":10}],"typeParameter":[{"id":7143,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":7144,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":7145,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":7146,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":26}],"signatures":[{"id":7147,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":26}],"parameters":[{"id":7148,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":7144,"name":"InnerArguments","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}],"type":{"type":"reference","target":7143,"name":"Result","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}]}}]}},{"id":7149,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":7144,"name":"InnerArguments","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":7143,"name":"Result","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":7150,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":126,"character":10}],"signatures":[{"id":7151,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":126,"character":10}],"typeParameter":[{"id":7152,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":7153,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":7154,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":7155,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":26}],"signatures":[{"id":7156,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":26}],"parameters":[{"id":7157,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":7153,"name":"Parameters","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":7158,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":74}],"signatures":[{"id":7159,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":74}],"parameters":[{"id":7160,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":7152,"name":"Result","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":7161,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":7153,"name":"Parameters","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":7152,"name":"Result","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":7162,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":157,"character":4}],"signatures":[{"id":7163,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":157,"character":4}],"typeParameter":[{"id":7164,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":7164,"name":"Result","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":7165,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":169,"character":10}],"signatures":[{"id":7166,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":169,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":7167,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":188,"character":10}],"signatures":[{"id":7168,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":188,"character":10}],"parameters":[{"id":7169,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3951,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":7170,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":192,"character":10}],"signatures":[{"id":7171,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":192,"character":10}],"parameters":[{"id":7172,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4057,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":7173,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":209,"character":10}],"signatures":[{"id":7174,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":209,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":7175,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":215,"character":10}],"signatures":[{"id":7176,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":215,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":7177,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":219,"character":10}],"signatures":[{"id":7178,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":219,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":7179,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"signatures":[{"id":7180,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":7181,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"signatures":[{"id":7182,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":7183,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7184,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":7185,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[7184,7185]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":7186,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":10}],"signatures":[{"id":7187,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":10}],"parameters":[{"id":7188,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7189,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7190,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":7191,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[7190,7191]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":7192,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"signatures":[{"id":7193,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":7194,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":273,"character":10}],"signatures":[{"id":7195,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":273,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":7196,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":277,"character":10}],"signatures":[{"id":7197,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":277,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"groups":[{"title":"Constructors","children":[7109]},{"title":"Properties","children":[7207]},{"title":"Methods","children":[7208,7210,7212,7120,7123,7126,7129,7132,7134,7136,7138,7141,7150,7162,7165,7167,7170,7173,7175,7177,7179,7181,7186,7192,7194,7196]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":21,"character":13}],"extendedTypes":[{"type":"reference","target":4290,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/webdriverio-8/class/WebdriverIOPage","categories":[],"previousId":6992,"nextId":7214},{"id":7214,"name":"WebdriverIOPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":7286,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":7231,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":7232,"name":"new WebdriverIOPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":7233,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4240,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":7214,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio-8"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}},{"id":7287,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":7288,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":7289,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":7290,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}},{"id":7234,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"signatures":[{"id":7235,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"parameters":[{"id":7236,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":7214,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio-8"}}],"type":{"type":"reference","target":7214,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio-8"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":7237,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"signatures":[{"id":7238,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"parameters":[{"id":7239,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":7214,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio-8"}}],"type":{"type":"reference","target":7214,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio-8"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":7240,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"signatures":[{"id":7241,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":7242,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"signatures":[{"id":7243,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":7244,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"signatures":[{"id":7245,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":7246,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"signatures":[{"id":7247,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"parameters":[{"id":7248,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":7249,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"signatures":[{"id":7250,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":7251,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"signatures":[{"id":7252,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":7253,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"signatures":[{"id":7254,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":7255,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"signatures":[{"id":7256,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"parameters":[{"id":7257,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":7258,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"signatures":[{"id":7259,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4721,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":7260,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"signatures":[{"id":7261,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"parameters":[{"id":7262,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":7263,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"signatures":[{"id":7264,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":7265,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"signatures":[{"id":7266,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":7267,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"signatures":[{"id":7268,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":7269,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"signatures":[{"id":7270,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4854,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":7271,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":217,"character":10}],"signatures":[{"id":7272,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":217,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":7273,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":222,"character":10}],"signatures":[{"id":7274,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":222,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":7275,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":227,"character":10}],"signatures":[{"id":7276,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":227,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":7277,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":232,"character":10}],"signatures":[{"id":7278,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":232,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}},{"id":7279,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":237,"character":10}],"signatures":[{"id":7280,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":237,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":7281,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":242,"character":10}],"signatures":[{"id":7282,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":242,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"groups":[{"title":"Constructors","children":[7231]},{"title":"Properties","children":[7286]},{"title":"Methods","children":[7287,7289,7234,7237,7240,7242,7244,7246,7249,7251,7253,7255,7258,7260,7263,7265,7267,7269,7271,7273,7275,7277,7279,7281]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4406,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/webdriverio-8/class/WebdriverIOPageElement","categories":[],"previousId":7097,"nextId":28}],"groups":[{"title":"Abilities","children":[6927]},{"title":"Configuration","children":[6828]},{"title":"Models","children":[6952,6992,7097,7214]},{"title":"Variables","children":[28]}],"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio-8"},"urlSlug":"webdriverio-8"}],"packageName":"@serenity-js/webdriverio-8","packageVersion":"3.31.0"}]')}}]);